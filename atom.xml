<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  <subtitle>Keep it Simple and Stupid</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://lhl02531.github.io/"/>
  <updated>2019-01-11T21:27:59.888Z</updated>
  <id>http://lhl02531.github.io/</id>
  
  <author>
    <name>lv</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo博客搭建</title>
    <link href="http://lhl02531.github.io/2019/01/12/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    <id>http://lhl02531.github.io/2019/01/12/hexo博客搭建/</id>
    <published>2019-01-11T19:16:12.000Z</published>
    <updated>2019-01-11T21:27:59.888Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo博客搭建记录"><a href="#Hexo博客搭建记录" class="headerlink" title="Hexo博客搭建记录"></a>Hexo博客搭建记录</h1><p>搭建一个个人博客一直是自己的想法，选择有很多，有Hexo，Hugo，jekkll，workpress，国内大的写作平台也有CSDN,博客园，简书。选择一个自己喜欢，坚持写下去吧。<br>接下来，就是这个博客的搭建过程。希望对你有所帮助。<br>（接下来是在windows平台实践的）</p><h2 id="Hexo是什么"><a href="#Hexo是什么" class="headerlink" title="Hexo是什么"></a>Hexo是什么</h2><p>来自官网的解释</p><blockquote><p>Hexo 是一个快速、简洁且高效的博客框架。<br>Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p></blockquote><a id="more"></a><h2 id="Hexo使用前的准备"><a href="#Hexo使用前的准备" class="headerlink" title="Hexo使用前的准备"></a>Hexo使用前的准备</h2><h3 id="node-js安装"><a href="#node-js安装" class="headerlink" title="node.js安装"></a>node.js安装</h3><p>如果你已经安装好了node.js，请直接往下看。</p><p>一般某些技术新入门，建议百度搜索相关技术，然后直接在官网下载并安装，但是有些同学英语不太熟（包括我），想偷懒，可以去查看相关的网站的中文站点，对新手更友好，更容易理解。</p><p>nodejs.cn是国人翻译nodejs官方文档的站点，提供国内下载的nodejs版本，nodejs官方文档的中文翻译。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看node.js的安装版本</span></span><br><span class="line">node -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看npm的版本</span></span><br><span class="line">npm-v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 出现版本号即为成功安装</span></span><br></pre></td></tr></table></figure><h4 id="nodejs安装后要做的事"><a href="#nodejs安装后要做的事" class="headerlink" title="nodejs安装后要做的事"></a>nodejs安装后要做的事</h4><h5 id="node-配置"><a href="#node-配置" class="headerlink" title="node 配置"></a>node 配置</h5><div class="note - default"><p>PS：另外windows用户需要将node_global文件夹添加到系统环境变量上，不然会出现</p><p>‘hexo’ 不是内部或外部命令，也不是可运行的程序或批处理文件。</p><p>环境变量是此电脑-&gt;高级-&gt;环境变量-&gt;系统变量-&gt;找到一个叫Path的变量-&gt;记得在此前加上;（英语的，不是中文的）</p></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">:<span class="string">'</span></span><br><span class="line"><span class="string">    设置node_global文件夹位置,全局安装的时候，模块会被安装到个位置</span></span><br><span class="line"><span class="string">    npm config set prefix "文件夹名"</span></span><br><span class="line"><span class="string">    设置node_cache文件夹位置,安装模块时的缓存</span></span><br><span class="line"><span class="string">    npm config set cache "文件夹名"</span></span><br><span class="line"><span class="string">    我在nodejs的安装目录下新建了node_global和node_cache</span></span><br><span class="line"><span class="string">    再次强调，windows用户需要将node_global文件夹路径添加到统环境变量上</span></span><br><span class="line"><span class="string">'</span></span><br><span class="line">npm config <span class="built_in">set</span> prefix <span class="string">"F:\node_js\node_global"</span></span><br><span class="line">npm config <span class="built_in">set</span> cache <span class="string">"F:\node_js\node_cache"</span></span><br></pre></td></tr></table></figure><h5 id="npm设置国内源"><a href="#npm设置国内源" class="headerlink" title="npm设置国内源"></a>npm设置国内源</h5><ul><li><a href="https://mirrors.huaweicloud.com/" target="_blank" rel="noopener">华为开源镜像站</a>（官方说注册后有CDN加速）</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># npm加速</span></span><br><span class="line"><span class="comment"># npm config set registry https://repo.huaweicloud.com/repository/npm/</span></span><br><span class="line">npm cache clean -f</span><br><span class="line"><span class="comment"># 设置nodejs工具的镜像地址</span></span><br><span class="line"><span class="comment"># node.js工具类镜像地址，看自己需求</span></span><br><span class="line">npm config <span class="built_in">set</span> disturl https://repo.huaweicloud.com/nodejs</span><br></pre></td></tr></table></figure><ul><li><a href="https://npm.taobao.org/" target="_blank" rel="noopener">淘宝镜像</a></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 淘宝使用自己的cnpm替代了npm</span></span><br><span class="line"><span class="comment"># 所以当你使用淘宝镜像后</span></span><br><span class="line"><span class="comment"># npm install 就变成了 cnpm install</span></span><br><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><div class="note - default"><p>友情提示：Maven、Grandle、Pypi、RubyGems、以及linux软件源等都有墙的因素，如果你嫌弃速度慢，可以自行搜索一下相应的教程。</p></div><h3 id="Git安装"><a href="#Git安装" class="headerlink" title="Git安装"></a>Git安装</h3><p>winodws的下载<a href="https://mirrors.huaweicloud.com/" target="_blank" rel="noopener">git for windows</a>安装即可<br>Linux用户可参考<a href="https://git-scm.com/download/linux" target="_blank" rel="noopener">linux安装</a></p><p>关于Git的内容太多了，入门可以看<a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">廖雪峰Git教程</a>,进阶可以看<a href="https://gitee.com/progit/" target="_blank" rel="noopener">Pro git</a></p><h4 id="Git安装后要做的事"><a href="#Git安装后要做的事" class="headerlink" title="Git安装后要做的事"></a>Git安装后要做的事</h4><h5 id="配置用户名和邮箱"><a href="#配置用户名和邮箱" class="headerlink" title="配置用户名和邮箱"></a>配置用户名和邮箱</h5><p>windows的安装完后，完成后，鼠标右键会多出Git bash，Git Gui几个选项，打开Git Bash 如下图。<br><img src="https://i.loli.net/2018/11/22/5bf587d5ba3fc.png" alt="enter image description here"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这两行命令配置你的用户名和注册邮箱</span></span><br><span class="line"><span class="comment"># --global 代表的是全局变量，也就是设置默认用户名和邮箱</span></span><br><span class="line"><span class="comment"># 如果某个项目不需要使用全局变量了，你也可以不加</span></span><br><span class="line">git config --global user.name <span class="string">"你的用户名"</span></span><br><span class="line">git config --global user.email <span class="string">"你的邮箱"</span></span><br><span class="line"><span class="comment"># 接下来的两行命令代表，查看你刚刚配置的用户名和邮箱</span></span><br><span class="line">git config user.email</span><br><span class="line">git config user.name</span><br></pre></td></tr></table></figure><div class="note - warn"><p>linux 用户记得使用git命令的时候不要添加sudo<br>github的帮助文档也有相应说明，<a href="https://help.github.com/articles/error-permission-denied-publickey/#should-the-sudo-command-be-used-with-git" target="_blank" rel="noopener">具体请看，Should the sudo command be used with Git?</a></p></div><h5 id="生成-SSH-key"><a href="#生成-SSH-key" class="headerlink" title="生成 SSH key"></a>生成 SSH key</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生产SSH key</span></span><br><span class="line"><span class="comment"># 中间会有密码设置提示，如果不要，直接回车即可</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">"你的邮箱</span></span><br></pre></td></tr></table></figure><p>那么我们用户主目录下，应该就有id_rsa（私钥）和id_rsa.pub（公钥）文件。</p><p>私钥需要保护好，然后我们需要公钥进行下一步。</p><ol><li>进入Github，点击个人头像,选择Setting选项</li><li>在左侧面板选择，SSH and GPG keys ,点击new SSH key ,title随意，将公钥的文件内容复制进key即可</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 你可以验证一下，是否成功</span></span><br><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>如果没有错误，应该可以看到<img src="https://i.loli.net/2018/11/22/5bf58f403d73e.png" alt="github ssh连接成功"></p><p>接下来就是我们的主角Hexo了。</p><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">:<span class="string">'</span></span><br><span class="line"><span class="string">    如果node.js 安装成功，并且设置了国内npm镜像或者有VPN的话，网络通畅，应该是几分钟的事</span></span><br><span class="line"><span class="string">    解释一下，npm install 是npm 安装模块的命令</span></span><br><span class="line"><span class="string">    -g    指的是 全局安装</span></span><br><span class="line"><span class="string">    --save 指的是 当前项目</span></span><br><span class="line"><span class="string">    如果安装不成功，可以考虑使用管理员模式运行Gitbash或者cmd再安装一遍</span></span><br><span class="line"><span class="string">    我的猜测应该是权限不够导致安装失败</span></span><br><span class="line"><span class="string">'</span></span><br><span class="line">npm install -g hexo-cli</span><br><span class="line"><span class="comment"># 现在可以验证一下， 安装是否成功</span></span><br><span class="line"><span class="comment"># 如果提示找不到命令,windows下记得把node_global文件夹路径添加进环境变量</span></span><br><span class="line">hexo -v</span><br></pre></td></tr></table></figure><p>关于Hexo的知识，需要记住常用的命令,至于其他，不懂的时候查文档即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 博客主目录，初始化一个文件夹为博客主目录</span></span><br><span class="line"><span class="comment"># hexo init [folder]</span></span><br><span class="line">hexo init blog   <span class="comment"># 当前目录的blog文件夹</span></span><br><span class="line"><span class="comment"># 创建新博文</span></span><br><span class="line"><span class="comment"># hexo new [layout] &lt;title&gt;</span></span><br><span class="line"><span class="comment"># 一般写法</span></span><br><span class="line">hexo new _post <span class="string">"我的第一篇博客"</span></span><br><span class="line"><span class="comment"># 生成静态资源</span></span><br><span class="line">hexo generate</span><br><span class="line"><span class="comment"># 简单写法</span></span><br><span class="line">hexo g</span><br><span class="line"><span class="comment"># 启动hexo 本地服务器</span></span><br><span class="line">hexo server</span><br><span class="line"><span class="comment"># 简单写法</span></span><br><span class="line">hexo s</span><br><span class="line"><span class="comment"># 清除静态文件</span></span><br><span class="line">hexo clean</span><br></pre></td></tr></table></figure><h2 id="博客优化"><a href="#博客优化" class="headerlink" title="博客优化"></a>博客优化</h2><h3 id="主题选用"><a href="#主题选用" class="headerlink" title="主题选用"></a>主题选用</h3><p><strong>Next主题</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><div class="note - primary"><p>Next的官方文档写的很详细，只是有一些内容可以过时例如设置留言这一块。</p></div><h3 id="做了哪些工作"><a href="#做了哪些工作" class="headerlink" title="做了哪些工作"></a>做了哪些工作</h3><h4 id="favicon的改进"><a href="#favicon的改进" class="headerlink" title="favicon的改进"></a>favicon的改进</h4><p><a href="https://realfavicongenerator.net/" target="_blank" rel="noopener">favicon生成</a></p><ol><li><p><a href="https://i.loli.net/2019/01/12/5c38e8d77bce0.png" target="_blank" rel="noopener"><img src="https://i.loli.net/2019/01/12/5c38e8d77bce0.png" alt="icon1.png"> </a></p></li><li><p><a href="https://i.loli.net/2019/01/12/5c38e8d73a9ec.png" target="_blank" rel="noopener"><img src="https://i.loli.net/2019/01/12/5c38e8d73a9ec.png" alt="2.png"></a></p></li><li><p><img src="https://i.loli.net/2019/01/12/5c38e8d77d8d5.png" alt="dicon.png"></p></li><li><p>选项弄好后，下载压缩包，解压复制粘贴，建议放在 next/source/images/ 里（没有自己建），这样可以避免更新 NexT 主题的时候遇到麻烦，最后记得要稍微改下文件名，与下面的保持一致,原来是favicon-16x16-next.png，favicon-32x32-next.png</p></li></ol><p><a href="https://i.loli.net/2019/01/12/5c38df7bd59d4.png" target="_blank" rel="noopener"><img src="https://i.loli.net/2019/01/12/5c38df7bd59d4.png" alt="_cat.png"></a></p><h4 id="About页面没有Title"><a href="#About页面没有Title" class="headerlink" title="About页面没有Title"></a>About页面没有Title</h4><p><a href="https://github.com/iissnan/hexo-theme-next/issues/1367" target="_blank" rel="noopener">About页面没有title，求解答 issue#1367</a></p><h4 id="实现点击出现桃心效果"><a href="#实现点击出现桃心效果" class="headerlink" title="实现点击出现桃心效果"></a>实现点击出现桃心效果</h4><p>为了方便,你在这里可以下载<a href="">love.js</a>（具体操作点击raw,然后右键另存为即可）<br>将love.js文件放到路径/themes/next/source/js/src里面，然后打开\themes\next\layout_layout.swig文件，添加如下代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"/js/src/love.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>[<img src="https://i.loli.net/2019/01/12/5c38df7c7df41.png" alt="1.png"></p><h4 id="修改文章底部标签"><a href="#修改文章底部标签" class="headerlink" title="修改文章底部标签"></a>修改文章底部标签</h4><p>修改模板/themes/next/layout/_macro/post.swig，搜索 rel=”tag”&gt;#，将 # 换成<i class="fa fa-tag"></i>,修改后如下图</p><p><a href="https://i.loli.net/2019/01/12/5c38df7bc77a8.png" target="_blank" rel="noopener"><img src="https://i.loli.net/2019/01/12/5c38df7bc77a8.png" alt="_tag.png"></a></p><h4 id="addThis功能添加"><a href="#addThis功能添加" class="headerlink" title="addThis功能添加"></a>addThis功能添加</h4><p>注意的是addThis的控制台已经发生了变化</p><p><img src="https://i.loli.net/2018/12/02/5c03cae0b7f31.png" alt="addThis 界面"></p><p><a href="https://i.loli.net/2019/01/12/5c38df7c4fe4c.png" target="_blank" rel="noopener"><img src="https://i.loli.net/2019/01/12/5c38df7c4fe4c.png" alt="_addThisID.png"></a></p><p>这是2018-12-2的界面，需要到Profile Settings - &gt; General-&gt;找到ID，复制到主题配置文件</p><h4 id="文章版权申明"><a href="#文章版权申明" class="headerlink" title="文章版权申明"></a>文章版权申明</h4><p>Todo</p><h4 id="摘要图片"><a href="#摘要图片" class="headerlink" title="摘要图片"></a>摘要图片</h4><p><a href="https://faithlove.github.io/2018/07/18/Hexo-Next%E5%A6%82%E4%BD%95%E5%9C%A8%E6%96%87%E7%AB%A0%E6%91%98%E8%A6%81%E5%B1%95%E7%A4%BA%E5%9B%BE%E7%89%87/" target="_blank" rel="noopener">可以查看这篇文章</a></p><h2 id="windows下工具推荐"><a href="#windows下工具推荐" class="headerlink" title="windows下工具推荐"></a>windows下工具推荐</h2><h3 id="Typora（对新手友好）"><a href="#Typora（对新手友好）" class="headerlink" title="Typora（对新手友好）"></a>Typora（对新手友好）</h3><blockquote><p>一款实时渲染的Mrakdown写作软件，百度搜索Typora下载即可</p></blockquote><h4 id="windows右键新建Markdown文件"><a href="#windows右键新建Markdown文件" class="headerlink" title="windows右键新建Markdown文件"></a>windows右键新建Markdown文件</h4><p>参考：<a href="https://blog.csdn.net/yyt_1995/article/details/82286075" target="_blank" rel="noopener">Windows右键新建MarkDown文件</a></p><h3 id="VScode（推荐开发者使用，需要更多时间和学习曲线）"><a href="#VScode（推荐开发者使用，需要更多时间和学习曲线）" class="headerlink" title="VScode（推荐开发者使用，需要更多时间和学习曲线）"></a>VScode（推荐开发者使用，需要更多时间和学习曲线）</h3><blockquote><p>一款由微软开源的文本编辑器，功能极其强大，可以通过安装插件来满足需求</p></blockquote><h4 id="支持Markdown插件有"><a href="#支持Markdown插件有" class="headerlink" title="支持Markdown插件有"></a>支持Markdown插件有</h4><ul><li><strong>markdownlint</strong>，一般以lint大多都是保证质量的插件，这个插件是用来规范Markdown写作的。</li><li><strong>markdown-preview-enhanced</strong>，实时预览的插件，还添加了一些常用功能比如插入图片并上传图床等等，文档：<a href="https://shd101wyy.github.io/markdown-preview-enhanced/#/zh-cn/" target="_blank" rel="noopener">简体中文文档</a></li></ul><div class="note - info"><p>这篇文章会不断进行更新</p></div><hr><p>这篇文章参考了以下的教程和博客。</p><ol><li><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo中文文档</a></li><li><a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">Next文档</a></li><li><a href="https://reuixiy.github.io/technology/computer/computer-aided-art/2017/06/09/hexo-next-optimization.html" target="_blank" rel="noopener">打造个性超赞博客Hexo+NexT+GitHubPages的超深度优化</a></li><li><a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">廖雪峰GIt帮助文档</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Hexo博客搭建记录&quot;&gt;&lt;a href=&quot;#Hexo博客搭建记录&quot; class=&quot;headerlink&quot; title=&quot;Hexo博客搭建记录&quot;&gt;&lt;/a&gt;Hexo博客搭建记录&lt;/h1&gt;&lt;p&gt;搭建一个个人博客一直是自己的想法，选择有很多，有Hexo，Hugo，jekkll，workpress，国内大的写作平台也有CSDN,博客园，简书。选择一个自己喜欢，坚持写下去吧。&lt;br&gt;接下来，就是这个博客的搭建过程。希望对你有所帮助。&lt;br&gt;（接下来是在windows平台实践的）&lt;/p&gt;
&lt;h2 id=&quot;Hexo是什么&quot;&gt;&lt;a href=&quot;#Hexo是什么&quot; class=&quot;headerlink&quot; title=&quot;Hexo是什么&quot;&gt;&lt;/a&gt;Hexo是什么&lt;/h2&gt;&lt;p&gt;来自官网的解释&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hexo 是一个快速、简洁且高效的博客框架。&lt;br&gt;Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="博客" scheme="http://lhl02531.github.io/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="博客" scheme="http://lhl02531.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="next" scheme="http://lhl02531.github.io/tags/next/"/>
    
      <category term="优化" scheme="http://lhl02531.github.io/tags/%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
</feed>
