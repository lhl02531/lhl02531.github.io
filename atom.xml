<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  <subtitle>Keep it Simple and Stupid</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://lhl02531.github.io/"/>
  <updated>2022-12-07T10:00:54.000Z</updated>
  <id>http://lhl02531.github.io/</id>
  
  <author>
    <name>lv</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>记录学习微信小程序和微信云开发</title>
    <link href="http://lhl02531.github.io/2022/12/06/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    <id>http://lhl02531.github.io/2022/12/06/微信小程序学习记录/</id>
    <published>2022-12-06T07:45:22.000Z</published>
    <updated>2022-12-07T10:00:54.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="微信小程序入门"><a href="#微信小程序入门" class="headerlink" title="微信小程序入门"></a>微信小程序入门</h1><h2 id="认识项目结构"><a href="#认识项目结构" class="headerlink" title="认识项目结构"></a>认识项目结构</h2><p><img src="https://raw.githubusercontent.com/lhl02531/my_image_hosting/main/20221207162146.png" alt=""></p><ol><li><code>cloudfunctions</code> 云函数</li><li><code>miniprogram</code> 小程序</li><li><code>miniprogram_npm</code> 是项目所需要的依赖，<code>node_module</code> 是本地依赖。用<code>npm install</code> 安装完本地依赖，需要使用小程序ide 工具 –&gt; 构建npm 进行构建后才能供小程序使用。</li></ol><blockquote><p>微信官方文档，虽然文档我感觉并不适合入门， 但是还是比很多资料都要好点， 不建议全看完才进行开发。 弄懂一些概念即可。</p></blockquote><p>大致有四种文件， js  逻辑， json, 配置， wxml， 类比html 结构， wxss， 类比 css。<br>全局的是app, <code>app.js</code>, 定义全局的函数， <code>app.json</code> 定义全局的配置。<br>局部的是<code>page</code>, <code>component</code>。 ,  有个 <code>data</code> 字段，页面的初始数据，至于页面的生命周期函数，需要的时候再详细看文档即可。</p><a id="more"></a><h2 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h2><h3 id="官方简单例子"><a href="#官方简单例子" class="headerlink" title="官方简单例子"></a>官方简单例子</h3><p>组件用<code>properties</code>， 调用者需要在<code>json</code> 中定义才能使用。<br>如果是调用频率高的组件， 可以考虑在 <code>app.json</code>中定义。<br><code>component</code>  <a href="https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/" target="_blank" rel="noopener">官方自定义组件</a><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 组件的 properties</span></span><br><span class="line"> properties: &#123;</span><br><span class="line">    propA: <span class="built_in">String</span>,</span><br><span class="line">    propB: <span class="built_in">String</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 页面的 data</span></span><br><span class="line">data: &#123;</span><br><span class="line">    dataFieldA: <span class="string">'123'</span>,</span><br><span class="line">    dataFieldB: <span class="string">'456'</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- page --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">my-component</span> <span class="attr">prop-a</span>=<span class="string">"&#123;&#123;dataFieldA&#125;&#125;"</span> <span class="attr">prop-b</span>=<span class="string">"&#123;&#123;dataFieldB&#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">my-component</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- component --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span>&gt;</span>这里是组件的内部节点<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">text</span>&gt;</span>propA: &#123;&#123;propA&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">text</span>&gt;</span>propB: &#123;&#123;propB&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><p>page的json<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">"my-component": "/components/component-tag-name"</span><br></pre></td></tr></table></figure></p><h3 id="外部样式类"><a href="#外部样式类" class="headerlink" title="外部样式类"></a>外部样式类</h3><blockquote><p>在使用一些组件库的时候可能会用到，需要了解</p></blockquote><h2 id="组件间通信与事件"><a href="#组件间通信与事件" class="headerlink" title="组件间通信与事件"></a>组件间通信与事件</h2><p><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/events.html" target="_blank" rel="noopener">官方文档</a></p><h3 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h3><p>可能会出现的错误， </p><ol><li>组件定义函数时，需要定义 <code>method</code>字段中。</li></ol><h2 id="WXML"><a href="#WXML" class="headerlink" title="WXML"></a>WXML</h2><ol><li>数据绑定</li><li>条件, <code>wx:if</code></li><li>列表渲染, <code>wx:for</code>, <a href="https://developers.weixin.qq.com/miniprogram/dev/reference/wxml/list.html" target="_blank" rel="noopener">列表渲染</a>，需要注意的是，当遍历的是一个数组的时候，<code>wx:key</code> 等于 <code>*this</code></li><li>模板， 相比于组件， 我觉得模板更轻量级， 更适合复用一些只是用来显示的结构, 这篇比官方详细很多。  <a href="https://juejin.cn/post/7016207188074954766#heading-6" target="_blank" rel="noopener">掘金文章—模板</a></li><li><code>view</code>, <code>text</code>, <code>image</code>  <code>scroll-view</code> 标签</li><li>原生表单标签 <code>form</code> <code>input</code> <code></code></li></ol><p>wxss<br>略</p><h2 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h2><p><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/view/wxml/event.html" target="_blank" rel="noopener">官方文档</a></p><h2 id="注意点-1"><a href="#注意点-1" class="headerlink" title="注意点"></a>注意点</h2><ol><li><code>bindtap</code> 和  <code>bind:tap</code> 两种写法 都可以</li><li><code>bind</code>  和 <code>catch</code> 的异同</li><li><code>target</code> 和 <code>currentTarget</code>,<code>detail</code></li></ol><h2 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h2><h3 id="wx-navigateTo"><a href="#wx-navigateTo" class="headerlink" title="wx.navigateTo"></a>wx.navigateTo</h3><p><a href="https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.navigateTo.html" target="_blank" rel="noopener">官方文档</a><br><a href="https://developers.weixin.qq.com/miniprogram/dev/api/route/EventChannel.html" target="_blank" rel="noopener">EventChannel</a><br><a href="https://developers.weixin.qq.com/community/develop/article/doc/00048430f146e080cb2e9548456013" target="_blank" rel="noopener">EventChannel-社区文章</a></p><h4 id="注意点-2"><a href="#注意点-2" class="headerlink" title="注意点"></a>注意点</h4><ol><li><code>wx.navigateTo</code> 的 <code>url</code> 字段<code>url:&#39;/pages/category/category&#39;</code> </li></ol><h1 id="云开发"><a href="#云开发" class="headerlink" title="云开发"></a>云开发</h1><h2 id="技术产生背景"><a href="#技术产生背景" class="headerlink" title="技术产生背景"></a>技术产生背景</h2><p><a href="https://zhuanlan.zhihu.com/p/69774299" target="_blank" rel="noopener">云计算</a></p><p>Saas: 常见软件<br>Pass: <a href="https://mp.weixin.qq.com/s/ibaliVf9lGSXEiN0ldYaug" target="_blank" rel="noopener">钉钉</a>,云服务器，阿里云，腾讯云。 amazon ec2, amzure<br>Lass: 算力，存储，网络，<a href="https://mp.weixin.qq.com/s/XqUIhlUeWaPABNk0Mc4Qxg" target="_blank" rel="noopener">存储</a><br>Serverless(faas+baas): <a href="https://juejin.cn/post/6844903904224903181" target="_blank" rel="noopener">Serverless</a></p><h2 id="一些概念"><a href="#一些概念" class="headerlink" title="一些概念"></a>一些概念</h2><p><a href="https://developers.weixin.qq.com/miniprogram/dev/wxcloud/basis/capabilities.html#%E6%95%B0%E6%8D%AE%E5%BA%93" target="_blank" rel="noopener">数据库</a>， 可以类比MongoDB</p><p><a href="https://developers.weixin.qq.com/miniprogram/dev/wxcloud/basis/concepts/environment.html" target="_blank" rel="noopener">环境</a></p><p><a href="https://developers.weixin.qq.com/miniprogram/dev/wxcloud/basis/capabilities.html#%E4%BA%91%E5%87%BD%E6%95%B0" target="_blank" rel="noopener">云函数</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 官方 quickStart 例子</span></span><br><span class="line"><span class="comment">// /getOpenId/index</span></span><br><span class="line"><span class="keyword">const</span> cloud = <span class="built_in">require</span>(<span class="string">'wx-server-sdk'</span>);</span><br><span class="line"></span><br><span class="line">cloud.init(&#123;</span><br><span class="line">  env: cloud.DYNAMIC_CURRENT_ENV</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取openId云函数入口函数</span></span><br><span class="line">exports.main = <span class="keyword">async</span> (event, context) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 获取基础信息</span></span><br><span class="line">  <span class="keyword">const</span> wxContext = cloud.getWXContext();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    openid: wxContext.OPENID,</span><br><span class="line">    appid: wxContext.APPID,</span><br><span class="line">    unionid: wxContext.UNIONID,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// /selectRecord/index.js</span></span><br><span class="line"><span class="keyword">const</span> cloud = <span class="built_in">require</span>(<span class="string">'wx-server-sdk'</span>);</span><br><span class="line"></span><br><span class="line">cloud.init(&#123;</span><br><span class="line">  env: cloud.DYNAMIC_CURRENT_ENV</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">const</span> db = cloud.database();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询数据库集合云函数入口函数</span></span><br><span class="line">exports.main = <span class="keyword">async</span> (event, context) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 返回数据库查询结果</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">await</span> db.collection(<span class="string">'sales'</span>).get();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> getOpenId = <span class="built_in">require</span>(<span class="string">'./getOpenId/index'</span>);</span><br><span class="line"><span class="keyword">const</span> selectRecord = <span class="built_in">require</span>(<span class="string">'./selectRecord/index'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 云函数入口函数</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  通过传递过来的 type 切换</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">exports.main = <span class="keyword">async</span> (event, context) =&gt; &#123;</span><br><span class="line">  <span class="keyword">switch</span> (event.type) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'getOpenId'</span>:</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">await</span> getOpenId.main(event, context);</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'selectRecord'</span>:</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">await</span> selectRecord.main(event, context);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>小程序请求<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">wx.cloud.callFunction(&#123;</span><br><span class="line">       name: <span class="string">'quickStart'</span>, <span class="comment">// 请求的一个云函数</span></span><br><span class="line">       data:&#123; <span class="attr">type</span>: <span class="string">'getItemByItemName'</span>, title&#125;   <span class="comment">// data 对应 event, type 是具体那个接口</span></span><br><span class="line">   &#125;).then( <span class="function"><span class="params">resp</span> =&gt;</span>&#123;</span><br><span class="line">       <span class="built_in">console</span>.log(<span class="string">'返回结果'</span>, resp)</span><br><span class="line">       </span><br><span class="line">   &#125;).catch( <span class="function"><span class="params">error</span> =&gt;</span>&#123;</span><br><span class="line">       <span class="built_in">console</span>.error(<span class="string">'异常'</span>,error )</span><br><span class="line">      </span><br><span class="line">   &#125;)</span><br></pre></td></tr></table></figure></p><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><ol><li>日期 最好是转成 事件戳进行存储， <code>new Date().getTime()</code>, 这样按照 <code>orderBy(日期字段, desc | asc)</code></li><li><code>where</code>，<a href="https://developers.weixin.qq.com/miniprogram/dev/wxcloud/guide/database/query-array-object.html#%E5%8C%B9%E9%85%8D%E5%B9%B6%E6%9B%B4%E6%96%B0%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E5%85%83%E7%B4%A0" target="_blank" rel="noopener">匹配记录中的嵌套字段</a></li><li><code>db.commond</code> 有些操作可以，更简洁</li><li>云开发控制台-&gt; 高级操作， <a href="https://developers.weixin.qq.com/miniprogram/dev/wxcloud/guide/database/console-dbscript.html#%E6%8E%A7%E5%88%B6%E5%8F%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E9%AB%98%E7%BA%A7%E6%93%8D%E4%BD%9C" target="_blank" rel="noopener">控制台数据库高级操作</a></li><li>云函数本地调试， 有些Bug，遇到问题重启即可。<a href="https://developers.weixin.qq.com/miniprogram/dev/wxcloud/guide/debug.html#%E4%BA%91%E5%87%BD%E6%95%B0%E6%9C%AC%E5%9C%B0%E8%B0%83%E8%AF%95" target="_blank" rel="noopener">云函数本地调试</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;微信小程序入门&quot;&gt;&lt;a href=&quot;#微信小程序入门&quot; class=&quot;headerlink&quot; title=&quot;微信小程序入门&quot;&gt;&lt;/a&gt;微信小程序入门&lt;/h1&gt;&lt;h2 id=&quot;认识项目结构&quot;&gt;&lt;a href=&quot;#认识项目结构&quot; class=&quot;headerlink&quot; title=&quot;认识项目结构&quot;&gt;&lt;/a&gt;认识项目结构&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/lhl02531/my_image_hosting/main/20221207162146.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;cloudfunctions&lt;/code&gt; 云函数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;miniprogram&lt;/code&gt; 小程序&lt;/li&gt;
&lt;li&gt;&lt;code&gt;miniprogram_npm&lt;/code&gt; 是项目所需要的依赖，&lt;code&gt;node_module&lt;/code&gt; 是本地依赖。用&lt;code&gt;npm install&lt;/code&gt; 安装完本地依赖，需要使用小程序ide 工具 –&amp;gt; 构建npm 进行构建后才能供小程序使用。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;微信官方文档，虽然文档我感觉并不适合入门， 但是还是比很多资料都要好点， 不建议全看完才进行开发。 弄懂一些概念即可。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;大致有四种文件， js  逻辑， json, 配置， wxml， 类比html 结构， wxss， 类比 css。&lt;br&gt;全局的是app, &lt;code&gt;app.js&lt;/code&gt;, 定义全局的函数， &lt;code&gt;app.json&lt;/code&gt; 定义全局的配置。&lt;br&gt;局部的是&lt;code&gt;page&lt;/code&gt;, &lt;code&gt;component&lt;/code&gt;。 ,  有个 &lt;code&gt;data&lt;/code&gt; 字段，页面的初始数据，至于页面的生命周期函数，需要的时候再详细看文档即可。&lt;/p&gt;
    
    </summary>
    
      <category term="微信小程序" scheme="http://lhl02531.github.io/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
      <category term="微信小程序" scheme="http://lhl02531.github.io/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="微信云开发" scheme="http://lhl02531.github.io/tags/%E5%BE%AE%E4%BF%A1%E4%BA%91%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>记录一次nodejs项目部署</title>
    <link href="http://lhl02531.github.io/2022/10/26/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1nodejs%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2/"/>
    <id>http://lhl02531.github.io/2022/10/26/记录一次nodejs项目部署/</id>
    <published>2022-10-26T14:40:59.000Z</published>
    <updated>2022-10-27T05:50:08.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="服务器购买"><a href="#服务器购买" class="headerlink" title="服务器购买"></a>服务器购买</h1><p>略<br>鉴于我买的是阿里云的云服务器， 所以接下来的是阿里云的使用。<br>由于我使用的是密钥登录，所以需要配置<strong>密钥对</strong><br>密钥对会在下面讲，这里就不多说。<br>由于需要开发端口，所以需要配置<strong>安全组</strong></p><h1 id="putty"><a href="#putty" class="headerlink" title="putty"></a>putty</h1><p>可以通过阿里云提供的服务创建密钥对<br><a href="https://help.aliyun.com/document_detail/51793.html?spm=5176.2020520101keypair.help.13.26634df5k8AVA0#concept-wy4-th1-ydb" target="_blank" rel="noopener">https://help.aliyun.com/document_detail/51793.html?spm=5176.2020520101keypair.help.13.26634df5k8AVA0#concept-wy4-th1-ydb</a><br>也可以通过<strong>PUTTYGEN.EXE</strong><br><a href="https://www.cnblogs.com/baker95935/p/9810986.html" target="_blank" rel="noopener">https://www.cnblogs.com/baker95935/p/9810986.html</a><br>使用密钥对关联云服务器实例后， 需要<strong>重启一下云服务器</strong><br><a href="https://www.cnblogs.com/baker95935/p/9810435.html" target="_blank" rel="noopener">https://www.cnblogs.com/baker95935/p/9810435.html</a><br>putty 设置 <strong>keep live</strong>，保证不会一下子就断连<br><a href="https://www.cnblogs.com/lovewhatIlove/p/16580861.html" target="_blank" rel="noopener">https://www.cnblogs.com/lovewhatIlove/p/16580861.html</a></p><p>我的后端代码是通过私有git 仓库上传的同步的， 前端代码是生成 <strong>dist</strong>文件夹直接通过 <strong>PSCP</strong></p><p><code>pscp -P  22 -i C:\你的私钥文件 -C -r dist username@ip:云服务器的目录</code><br><a href="https://www.cnblogs.com/wxsj/p/9816588.html" target="_blank" rel="noopener">https://www.cnblogs.com/wxsj/p/9816588.html</a><br><a id="more"></a></p><h1 id="服务器安装相应环境"><a href="#服务器安装相应环境" class="headerlink" title="服务器安装相应环境"></a>服务器安装相应环境</h1><h2 id="nodejs-安装"><a href="#nodejs-安装" class="headerlink" title="nodejs 安装"></a>nodejs 安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget https://nodejs.org/dist/v12.13.0/node-v12.13.0-linux-x64.tar.gz # 下载nodejs</span><br><span class="line">tar -zxvf node-v12.13.0-linux-x64.tar.gz # 解压</span><br><span class="line">mv node-v12.13.0-linux-x64 /opt/nodejs_12.16  # 移动目录</span><br><span class="line">ln -s /opt/nodejs_12.16/bin/node /usr/local/bin/node</span><br><span class="line">ln -s /opt/nodejs_12.16/bin/npm /usr/local/bin/npm # 软链接</span><br></pre></td></tr></table></figure><p>尝试一下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure></p><p><code>vim /etc/profile</code> 修改系统配置<br><code>source /etc/profile</code> 配置生效<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export NODE_HOME=/opt/nodejs12.16/</span><br><span class="line">export PATH=$PATH:$NODE_HOME/bin </span><br><span class="line">export NODE_PATH=$NODE_HOME/lib/node_modules</span><br></pre></td></tr></table></figure></p><h3 id="安装pm2"><a href="#安装pm2" class="headerlink" title="安装pm2"></a>安装pm2</h3><p>pm2 可以管理多个nodejs项目<br><code>npm install -g pm2</code> 这个会有一个问题，<br>如果你要运行 <em>pm2</em>的话，<br><code>node pm2</code>，<br>我的做法是<em>pm2</em> 软链接到 <code>/usr/bin/pm2</code>下</p><h2 id="MongoDB-安装"><a href="#MongoDB-安装" class="headerlink" title="MongoDB 安装"></a>MongoDB 安装</h2><p>MongoDB 安装都是安装这个<br><a href="https://www.runoob.com/mongodb/mongodb-linux-install.html" target="_blank" rel="noopener">https://www.runoob.com/mongodb/mongodb-linux-install.html</a><br><strong>/opt/mongodb_4.2.23/config.conf</strong> 后台启动时的文件如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#日志文件位置</span><br><span class="line">logpath=/var/log/mongodb/mongodb.log</span><br><span class="line"># 以追加方式写入日志</span><br><span class="line">logappend=true</span><br><span class="line"># 是否以守护进程方式运行</span><br><span class="line">fork = true</span><br><span class="line"># 默认27017</span><br><span class="line">port = 27017</span><br><span class="line"># 数据库文件位置</span><br><span class="line">dbpath= /var/lib/mongodb</span><br><span class="line"># 启用定期记录CPU利用率和 I/O 等待</span><br><span class="line">cpu = true</span><br><span class="line"># 是否以安全认证方式运行，默认是不认证的非安全方式</span><br><span class="line">noauth = true</span><br><span class="line"># auth = true</span><br><span class="line"># 详细记录输出</span><br><span class="line">#verbose = true</span><br><span class="line">bind_ip = 0.0.0.0</span><br><span class="line"># 最大链接数</span><br><span class="line">maxConns = 100</span><br><span class="line"># 防止插入脏数据</span><br><span class="line">objcheck = true</span><br><span class="line">#pidfilepath：进程ID，没有指定则启动时候就没有PID文件</span><br><span class="line">pidfilepath = /var/run/mongo.pid</span><br></pre></td></tr></table></figure></p><p>启动和停止服务的命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mongod --config /opt/mongodb_4.2.23/config.conf  # 启动</span><br><span class="line"></span><br><span class="line">mongod --shutdown --config /opt/mongodb_4.2.23/config.conf # 停止服务</span><br></pre></td></tr></table></figure></p><h2 id="nginx-安装"><a href="#nginx-安装" class="headerlink" title="nginx 安装"></a>nginx 安装</h2><p><code>apt-get install -y nginx</code></p><p>新建配置文件<strong>/etc/nginx/conf.d/default.conf</strong>，<br>配置文件需要注意</p><ol><li>这个配置需要 <code>location //</code> ,<code>root /dist/</code> 目录和location 需要判断是否需要加上 <code>/</code></li><li><code>upstream ...</code> 这段代码是转发给后端接口 3000, 尝试通过 location 匹配但是没成功<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 转发到后端端口3000</span><br><span class="line">upstream koa.server&#123;</span><br><span class="line">   server localhost:3000;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  ip ; # //你的公网ip</span><br><span class="line">    # url 匹配 ip</span><br><span class="line">    location / &#123;</span><br><span class="line">       root   /dist/index; # 前端代码目录</span><br><span class="line">        index  index.html; #  //该文件为目录下的index.html文件</span><br><span class="line">    &#125;</span><br><span class="line">    # url 匹配 ip/mall</span><br><span class="line">    location /mall/&#123;</span><br><span class="line">        alias /opt/mall/dist/;</span><br><span class="line">        index index.html index.html;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="学会看日志排查问题"><a href="#学会看日志排查问题" class="headerlink" title="学会看日志排查问题"></a>学会看日志排查问题</h3><p>nginx 的日志在 <code>cat /var/log/nginx/access.log</code><br><code>/var/log/nginx/error.log</code><br>以下是我遇到配置mall项目时候遇到 403 的问题，<br>说明大概率是nginx 用户没有权限，<br>需要改变文件夹的权限 <code>chmod 755 path</code><br><a href="https://www.jianshu.com/p/78e5e233bc81" target="_blank" rel="noopener">https://www.jianshu.com/p/78e5e233bc81</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;服务器购买&quot;&gt;&lt;a href=&quot;#服务器购买&quot; class=&quot;headerlink&quot; title=&quot;服务器购买&quot;&gt;&lt;/a&gt;服务器购买&lt;/h1&gt;&lt;p&gt;略&lt;br&gt;鉴于我买的是阿里云的云服务器， 所以接下来的是阿里云的使用。&lt;br&gt;由于我使用的是密钥登录，所以需要配置&lt;strong&gt;密钥对&lt;/strong&gt;&lt;br&gt;密钥对会在下面讲，这里就不多说。&lt;br&gt;由于需要开发端口，所以需要配置&lt;strong&gt;安全组&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;putty&quot;&gt;&lt;a href=&quot;#putty&quot; class=&quot;headerlink&quot; title=&quot;putty&quot;&gt;&lt;/a&gt;putty&lt;/h1&gt;&lt;p&gt;可以通过阿里云提供的服务创建密钥对&lt;br&gt;&lt;a href=&quot;https://help.aliyun.com/document_detail/51793.html?spm=5176.2020520101keypair.help.13.26634df5k8AVA0#concept-wy4-th1-ydb&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://help.aliyun.com/document_detail/51793.html?spm=5176.2020520101keypair.help.13.26634df5k8AVA0#concept-wy4-th1-ydb&lt;/a&gt;&lt;br&gt;也可以通过&lt;strong&gt;PUTTYGEN.EXE&lt;/strong&gt;&lt;br&gt;&lt;a href=&quot;https://www.cnblogs.com/baker95935/p/9810986.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.cnblogs.com/baker95935/p/9810986.html&lt;/a&gt;&lt;br&gt;使用密钥对关联云服务器实例后， 需要&lt;strong&gt;重启一下云服务器&lt;/strong&gt;&lt;br&gt;&lt;a href=&quot;https://www.cnblogs.com/baker95935/p/9810435.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.cnblogs.com/baker95935/p/9810435.html&lt;/a&gt;&lt;br&gt;putty 设置 &lt;strong&gt;keep live&lt;/strong&gt;，保证不会一下子就断连&lt;br&gt;&lt;a href=&quot;https://www.cnblogs.com/lovewhatIlove/p/16580861.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.cnblogs.com/lovewhatIlove/p/16580861.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我的后端代码是通过私有git 仓库上传的同步的， 前端代码是生成 &lt;strong&gt;dist&lt;/strong&gt;文件夹直接通过 &lt;strong&gt;PSCP&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pscp -P  22 -i C:\你的私钥文件 -C -r dist username@ip:云服务器的目录&lt;/code&gt;&lt;br&gt;&lt;a href=&quot;https://www.cnblogs.com/wxsj/p/9816588.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.cnblogs.com/wxsj/p/9816588.html&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="项目部署" scheme="http://lhl02531.github.io/categories/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2/"/>
    
    
      <category term="学习" scheme="http://lhl02531.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="项目部署" scheme="http://lhl02531.github.io/tags/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2/"/>
    
      <category term="nodejs" scheme="http://lhl02531.github.io/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>记一次Ubuntu系统搭建过程</title>
    <link href="http://lhl02531.github.io/2019/01/27/%E8%AE%B0%E4%B8%80%E6%AC%A1Ubuntu%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B/"/>
    <id>http://lhl02531.github.io/2019/01/27/记一次Ubuntu系统搭建过程/</id>
    <published>2019-01-27T04:28:07.000Z</published>
    <updated>2022-10-26T14:35:40.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="记一次安装Ubuntu搭建过程"><a href="#记一次安装Ubuntu搭建过程" class="headerlink" title="记一次安装Ubuntu搭建过程"></a>记一次安装Ubuntu搭建过程</h1><h2 id="安装Ubuntu"><a href="#安装Ubuntu" class="headerlink" title="安装Ubuntu"></a>安装Ubuntu</h2><p><a href="https://www.bilibili.com/video/av22847796?from=search&amp;seid=3382793518763602250" target="_blank" rel="noopener">B站av号av22847796</a>这个视频只是一个开始，有能力也有别的需求的朋友可以科学上网到youtube找安装双系统的视频，你可以找到很多相当不错的教程。</p><p><strong>Notes</strong>:</p><ol><li>在本机上实验需要保存好自己的数据和重要数据。及时做好备份。</li><li>如何选择种类繁多的Linux系统，例如Debian,Fedora,Ａrch linux。简单说说我对这几个系统的理解，Debian系对用户更友好，更容易上手，想想Ubuntu就知道了，Ubuntu就是Debian的一个分支。Fedora系对用户技术要求高，适合想要追求技术和服务器使用centos、RedHat的朋友。ArchLinux系不推荐，适合不怕事，有大量空闲时间和精力，想要折腾的朋友。系统版本选择，推荐较新的版本，因为最新版本可能会有一些解决不了的问题，社区，搜索引擎很难找到解决答案，而太老版本你可能需要做很多无用功了，而且有很多新特性你体会不到。举个例子，snap需要在Ubuntu 16.04版本及以上版本中使用。</li><li>分区选择，如果不会，可以全部安装在/根目录下，稍微进阶的是，设置swap交换分区，再进阶的是，根据需求定制自己的要求。</li><li>桌面环境应该要求稳定，适合自己就好，不要去过度追求酷炫。（写给自己）</li></ol><a id="more"></a><h2 id="系统安装完成后"><a href="#系统安装完成后" class="headerlink" title="系统安装完成后"></a>系统安装完成后</h2><div class="note - info"><p>鉴于自己遇到都可以通过搜索引擎和官方文档解决了，我会贴出具体出处和自己的自己的解决方式。</p></div><h3 id="给root设置密码"><a href="#给root设置密码" class="headerlink" title="给root设置密码"></a>给root设置密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd root</span><br></pre></td></tr></table></figure><h3 id="更新源"><a href="#更新源" class="headerlink" title="更新源"></a>更新源</h3><p><strong>华为云源</strong></p><p>华为云开源镜像站: <a href="https://mirrors.huaweicloud.com/" target="_blank" rel="noopener">https://mirrors.huaweicloud.com/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo cp -a /etc/apt/sources.list /etc/apt/sources.list.bak</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">"s@http://archive.ubuntu.com@https://repo.huaweicloud.com@g"</span> /etc/apt/sources.list</span><br><span class="line">sed -i <span class="string">"s@http://security.ubuntu.com@https://repo.huaweicloud.com@g"</span> /etc/apt/sources.list</span><br></pre></td></tr></table></figure><p><strong>阿里云源</strong></p><p>阿里云镜像:<a href="https://opsx.alibaba.com/mirror" target="_blank" rel="noopener">https://opsx.alibaba.com/mirror</a></p><p>新手推荐使用<strong>图形界面配置</strong>： <strong>系统设置 -&gt; 软件和更新 选择下载服务器 -&gt; “mirrors.aliyun.com”</strong></p><h3 id="wifi-驱动"><a href="#wifi-驱动" class="headerlink" title="wifi 驱动"></a>wifi 驱动</h3><p>参考wifi驱动安装:<a href="https://www.cnblogs.com/spark-quant/p/9641279.html" target="_blank" rel="noopener">https://www.cnblogs.com/spark-quant/p/9641279.html</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line">sudo apt-get install --reinstall bcmwl-kernel-source</span><br></pre></td></tr></table></figure><h3 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h3><h4 id="VScode"><a href="#VScode" class="headerlink" title="VScode"></a>VScode</h4><p>参考Visual Studio Code on Linux：<a href="https://code.visualstudio.com/docs/setup/linux" target="_blank" rel="noopener">https://code.visualstudio.com/docs/setup/linux</a></p><ol><li>手动下载.deb package (64-bit),图形化安装或者命令行解压都行</li><li><strong>第二种，手动添加软件源，命令行安装(推荐)</strong></li></ol><p>把微软vscode源添加到本地</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor &gt; microsoft.gpg</span><br><span class="line">sudo install -o root -g root -m 644 microsoft.gpg /etc/apt/trusted.gpg.d/</span><br><span class="line">sudo sh -c <span class="string">'echo "deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main" &gt; /etc/apt/sources.list.d/vscode.list'</span></span><br></pre></td></tr></table></figure><p>安装vscode</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install apt-transport-https</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install code</span><br></pre></td></tr></table></figure><p>安装完后</p><p>命令行输入<strong>code即可启动</strong>vscode</p><h4 id="Atom"><a href="#Atom" class="headerlink" title="Atom"></a>Atom</h4><p>参考资料<br>about webupd8：<a href="http://www.webupd8.org/p/about.html" target="_blank" rel="noopener">http://www.webupd8.org/p/about.html</a><br>什么是PPA <a href="http://wiki.ubuntu.com.cn/PPA" target="_blank" rel="noopener">http://wiki.ubuntu.com.cn/PPA</a><br>安装Atom <a href="http://www.cnblogs.com/liutongqing/p/6388119.html" target="_blank" rel="noopener">http://www.cnblogs.com/liutongqing/p/6388119.html</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:webupd8team/atom</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install atom</span><br></pre></td></tr></table></figure></p><h3 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h3><h4 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h4><p>TODO</p><h5 id="Pycharm-社区版"><a href="#Pycharm-社区版" class="headerlink" title="Pycharm 社区版"></a>Pycharm 社区版</h5><div class="note - warning"><p><a href="https://snapcraft.io/" target="_blank" rel="noopener">snap</a>需要仅限 Ubuntu16.04及更高版本</p></div><p>参考JetBrain python <a href="https://www.jetbrains.com/pycharm/download/#section=linux" target="_blank" rel="noopener">https://www.jetbrains.com/pycharm/download/#section=linux</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo snap install pycharm-community --classic</span><br></pre></td></tr></table></figure><h4 id="java"><a href="#java" class="headerlink" title="java"></a>java</h4><p>参考webupd8 安装JDK8 <a href="http://www.webupd8.org/2012/09/install-oracle-java-8-in-ubuntu-via-ppa.html" target="_blank" rel="noopener">http://www.webupd8.org/2012/09/install-oracle-java-8-in-ubuntu-via-ppa.html</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:webupd8team/java</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install oracle-java8-installer</span><br></pre></td></tr></table></figure><p>查看是否安装<strong>成功</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><p><strong>Maven</strong>:<br>Maven 安装:<a href="http://maven.apache.org/install.html" target="_blank" rel="noopener">http://maven.apache.org/install.html</a></p><p>下载软件包，firefox默认在下载目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> 下载</span><br><span class="line">tar xzvf apache-maven-3.6.0-bin.tar.gz</span><br><span class="line">sudo cp -r apache-maven-3.6.0/ /opt/apache-maven-3.6.0/</span><br></pre></td></tr></table></figure><p><strong>设置环境变量</strong>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export MAVEN_HOME=/opt/apache-maven-3.6.0</span><br><span class="line">export PATH=$MAVEN_HOME/bin:$PATH</span><br></pre></td></tr></table></figure><p><strong>Eclipse</strong>:<br>参考Eclipse安装 <a href="https://www.linuxidc.com/Linux/2016-07/133482.htm" target="_blank" rel="noopener">https://www.linuxidc.com/Linux/2016-07/133482.htm</a>,<br>按照这个教程如果遇到“Ubuntu中应用程序启动器“XXX.desktop”还没有被标记为可信任的问题”，那么请参考Ubuntu中应用程序启动器“XXX.desktop”还没有被标记为可信任的问题:<a href="https://www.tuicool.com/articles/fIBJ32n" target="_blank" rel="noopener">https://www.tuicool.com/articles/fIBJ32n</a>，我的猜测应该是缺少权限导致的。</p><h4 id="git"><a href="#git" class="headerlink" title="git"></a>git</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git</span><br><span class="line"></span><br><span class="line">git -v</span><br></pre></td></tr></table></figure><h4 id="nodejs"><a href="#nodejs" class="headerlink" title="nodejs"></a>nodejs</h4><p>直接安装nodejs会是较早版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y nodejs</span><br><span class="line">sudo apt-get install -y npm</span><br><span class="line"></span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><p>通过安装g后可以指定安装版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install n -g</span><br><span class="line">sudo n 10.15.0</span><br><span class="line"></span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><h3 id="黑科技"><a href="#黑科技" class="headerlink" title="黑科技"></a>黑科技</h3><h4 id="tldr"><a href="#tldr" class="headerlink" title="tldr"></a>tldr</h4><p>简单的说，tldr 是man的简洁版本，可以用来查看命令是如何使用。<br>具体可查看介绍tldr 介绍<a href="https://zhuanlan.zhihu.com/p/52637238" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/52637238</a>、github地址 tldr github<a href="https://github.com/tldr-pages/tldr" target="_blank" rel="noopener">https://github.com/tldr-pages/tldr</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 需要安装nodejs</span></span><br><span class="line">sudo npm install -g tldr</span><br></pre></td></tr></table></figure><hr><p>2018/3/7 发现脚注太丑，直接将链接加在文章中间</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;记一次安装Ubuntu搭建过程&quot;&gt;&lt;a href=&quot;#记一次安装Ubuntu搭建过程&quot; class=&quot;headerlink&quot; title=&quot;记一次安装Ubuntu搭建过程&quot;&gt;&lt;/a&gt;记一次安装Ubuntu搭建过程&lt;/h1&gt;&lt;h2 id=&quot;安装Ubuntu&quot;&gt;&lt;a href=&quot;#安装Ubuntu&quot; class=&quot;headerlink&quot; title=&quot;安装Ubuntu&quot;&gt;&lt;/a&gt;安装Ubuntu&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.bilibili.com/video/av22847796?from=search&amp;amp;seid=3382793518763602250&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B站av号av22847796&lt;/a&gt;这个视频只是一个开始，有能力也有别的需求的朋友可以科学上网到youtube找安装双系统的视频，你可以找到很多相当不错的教程。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在本机上实验需要保存好自己的数据和重要数据。及时做好备份。&lt;/li&gt;
&lt;li&gt;如何选择种类繁多的Linux系统，例如Debian,Fedora,Ａrch linux。简单说说我对这几个系统的理解，Debian系对用户更友好，更容易上手，想想Ubuntu就知道了，Ubuntu就是Debian的一个分支。Fedora系对用户技术要求高，适合想要追求技术和服务器使用centos、RedHat的朋友。ArchLinux系不推荐，适合不怕事，有大量空闲时间和精力，想要折腾的朋友。系统版本选择，推荐较新的版本，因为最新版本可能会有一些解决不了的问题，社区，搜索引擎很难找到解决答案，而太老版本你可能需要做很多无用功了，而且有很多新特性你体会不到。举个例子，snap需要在Ubuntu 16.04版本及以上版本中使用。&lt;/li&gt;
&lt;li&gt;分区选择，如果不会，可以全部安装在/根目录下，稍微进阶的是，设置swap交换分区，再进阶的是，根据需求定制自己的要求。&lt;/li&gt;
&lt;li&gt;桌面环境应该要求稳定，适合自己就好，不要去过度追求酷炫。（写给自己）&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://lhl02531.github.io/categories/Linux/"/>
    
    
      <category term="Ubuntu" scheme="http://lhl02531.github.io/tags/Ubuntu/"/>
    
      <category term="学习" scheme="http://lhl02531.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客搭建</title>
    <link href="http://lhl02531.github.io/2019/01/12/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    <id>http://lhl02531.github.io/2019/01/12/hexo博客搭建/</id>
    <published>2019-01-11T19:16:12.000Z</published>
    <updated>2022-10-26T14:35:40.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="Hexo博客搭建记录"><a href="#Hexo博客搭建记录" class="headerlink" title="Hexo博客搭建记录"></a>Hexo博客搭建记录</h1><p>搭建一个个人博客一直是自己的想法，选择有很多，有Hexo，Hugo，jekkll，workpress，国内大的写作平台也有CSDN,博客园，简书。选择一个自己喜欢，坚持写下去吧。<br>接下来，就是这个博客的搭建过程。希望对你有所帮助。<br>（接下来是在windows平台实践的）</p><h2 id="Hexo是什么"><a href="#Hexo是什么" class="headerlink" title="Hexo是什么"></a>Hexo是什么</h2><p>来自官网的解释</p><blockquote><p>Hexo 是一个快速、简洁且高效的博客框架。<br>Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p></blockquote><a id="more"></a><h2 id="Hexo使用前的准备"><a href="#Hexo使用前的准备" class="headerlink" title="Hexo使用前的准备"></a>Hexo使用前的准备</h2><h3 id="node-js安装"><a href="#node-js安装" class="headerlink" title="node.js安装"></a>node.js安装</h3><p>如果你已经安装好了node.js，请直接往下看。</p><p>一般某些技术新入门，建议百度搜索相关技术，然后直接在官网下载并安装，但是有些同学英语不太熟（包括我），想偷懒，可以去查看相关的网站的中文站点，对新手更友好，更容易理解。</p><p>nodejs.cn是国人翻译nodejs官方文档的站点，提供国内下载的nodejs版本，nodejs官方文档的中文翻译。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看node.js的安装版本</span></span><br><span class="line">node -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看npm的版本</span></span><br><span class="line">npm-v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 出现版本号即为成功安装</span></span><br></pre></td></tr></table></figure><h4 id="nodejs安装后要做的事"><a href="#nodejs安装后要做的事" class="headerlink" title="nodejs安装后要做的事"></a>nodejs安装后要做的事</h4><h5 id="node-配置"><a href="#node-配置" class="headerlink" title="node 配置"></a>node 配置</h5><div class="note - default"><p>PS：另外windows用户需要将node_global文件夹添加到系统环境变量上，不然会出现</p><p>‘hexo’ 不是内部或外部命令，也不是可运行的程序或批处理文件。</p><p>环境变量是此电脑-&gt;高级-&gt;环境变量-&gt;系统变量-&gt;找到一个叫Path的变量-&gt;记得在此前加上;（英语的，不是中文的）</p></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">:<span class="string">'</span></span><br><span class="line"><span class="string">    设置node_global文件夹位置,全局安装的时候，模块会被安装到个位置</span></span><br><span class="line"><span class="string">    npm config set prefix "文件夹名"</span></span><br><span class="line"><span class="string">    设置node_cache文件夹位置,安装模块时的缓存</span></span><br><span class="line"><span class="string">    npm config set cache "文件夹名"</span></span><br><span class="line"><span class="string">    我在nodejs的安装目录下新建了node_global和node_cache</span></span><br><span class="line"><span class="string">    再次强调，windows用户需要将node_global文件夹路径添加到统环境变量上</span></span><br><span class="line"><span class="string">'</span></span><br><span class="line">npm config <span class="built_in">set</span> prefix <span class="string">"F:\node_js\node_global"</span></span><br><span class="line">npm config <span class="built_in">set</span> cache <span class="string">"F:\node_js\node_cache"</span></span><br></pre></td></tr></table></figure><h5 id="npm设置国内源"><a href="#npm设置国内源" class="headerlink" title="npm设置国内源"></a>npm设置国内源</h5><ul><li><a href="https://mirrors.huaweicloud.com/" target="_blank" rel="noopener">华为开源镜像站</a>（官方说注册后有CDN加速）</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># npm加速</span></span><br><span class="line"><span class="comment"># npm config set registry https://repo.huaweicloud.com/repository/npm/</span></span><br><span class="line">npm cache clean -f</span><br><span class="line"><span class="comment"># 设置nodejs工具的镜像地址</span></span><br><span class="line"><span class="comment"># node.js工具类镜像地址，看自己需求</span></span><br><span class="line">npm config <span class="built_in">set</span> disturl https://repo.huaweicloud.com/nodejs</span><br></pre></td></tr></table></figure><ul><li><a href="https://npm.taobao.org/" target="_blank" rel="noopener">淘宝镜像</a></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 淘宝使用自己的cnpm替代了npm</span></span><br><span class="line"><span class="comment"># 所以当你使用淘宝镜像后</span></span><br><span class="line"><span class="comment"># npm install 就变成了 cnpm install</span></span><br><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><div class="note - default"><p>友情提示：Maven、Grandle、Pypi、RubyGems、以及linux软件源等都有墙的因素，如果你嫌弃速度慢，可以自行搜索一下相应的教程。</p></div><h3 id="Git安装"><a href="#Git安装" class="headerlink" title="Git安装"></a>Git安装</h3><p>winodws的下载<a href="https://mirrors.huaweicloud.com/" target="_blank" rel="noopener">git for windows</a>安装即可<br>Linux用户可参考<a href="https://git-scm.com/download/linux" target="_blank" rel="noopener">linux安装</a></p><p>关于Git的内容太多了，入门可以看<a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">廖雪峰Git教程</a>,进阶可以看<a href="https://gitee.com/progit/" target="_blank" rel="noopener">Pro git</a></p><h4 id="Git安装后要做的事"><a href="#Git安装后要做的事" class="headerlink" title="Git安装后要做的事"></a>Git安装后要做的事</h4><h5 id="配置用户名和邮箱"><a href="#配置用户名和邮箱" class="headerlink" title="配置用户名和邮箱"></a>配置用户名和邮箱</h5><p>windows的安装完后，完成后，鼠标右键会多出Git bash，Git Gui几个选项，打开Git Bash 如下图。<br><img src="https://i.loli.net/2018/11/22/5bf587d5ba3fc.png" alt="enter image description here"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这两行命令配置你的用户名和注册邮箱</span></span><br><span class="line"><span class="comment"># --global 代表的是全局变量，也就是设置默认用户名和邮箱</span></span><br><span class="line"><span class="comment"># 如果某个项目不需要使用全局变量了，你也可以不加</span></span><br><span class="line">git config --global user.name <span class="string">"你的用户名"</span></span><br><span class="line">git config --global user.email <span class="string">"你的邮箱"</span></span><br><span class="line"><span class="comment"># 接下来的两行命令代表，查看你刚刚配置的用户名和邮箱</span></span><br><span class="line">git config user.email</span><br><span class="line">git config user.name</span><br></pre></td></tr></table></figure><div class="note - warn"><p>linux 用户记得使用git命令的时候不要添加sudo<br>github的帮助文档也有相应说明，<a href="https://help.github.com/articles/error-permission-denied-publickey/#should-the-sudo-command-be-used-with-git" target="_blank" rel="noopener">具体请看，Should the sudo command be used with Git?</a></p></div><h5 id="生成-SSH-key"><a href="#生成-SSH-key" class="headerlink" title="生成 SSH key"></a>生成 SSH key</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生产SSH key</span></span><br><span class="line"><span class="comment"># 中间会有密码设置提示，如果不要，直接回车即可</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">"你的邮箱</span></span><br></pre></td></tr></table></figure><p>那么我们用户主目录下，应该就有id_rsa（私钥）和id_rsa.pub（公钥）文件。</p><p>私钥需要保护好，然后我们需要公钥进行下一步。</p><ol><li>进入Github，点击个人头像,选择Setting选项</li><li>在左侧面板选择，SSH and GPG keys ,点击new SSH key ,title随意，将公钥的文件内容复制进key即可</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 你可以验证一下，是否成功</span></span><br><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>如果没有错误，应该可以看到<img src="https://i.loli.net/2018/11/22/5bf58f403d73e.png" alt="github ssh连接成功"></p><p>接下来就是我们的主角Hexo了。</p><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">:<span class="string">'</span></span><br><span class="line"><span class="string">    如果node.js 安装成功，并且设置了国内npm镜像或者有VPN的话，网络通畅，应该是几分钟的事</span></span><br><span class="line"><span class="string">    解释一下，npm install 是npm 安装模块的命令</span></span><br><span class="line"><span class="string">    -g    指的是 全局安装</span></span><br><span class="line"><span class="string">    --save 指的是 当前项目</span></span><br><span class="line"><span class="string">    如果安装不成功，可以考虑使用管理员模式运行Gitbash或者cmd再安装一遍</span></span><br><span class="line"><span class="string">    我的猜测应该是权限不够导致安装失败</span></span><br><span class="line"><span class="string">'</span></span><br><span class="line">npm install -g hexo-cli</span><br><span class="line"><span class="comment"># 现在可以验证一下， 安装是否成功</span></span><br><span class="line"><span class="comment"># 如果提示找不到命令,windows下记得把node_global文件夹路径添加进环境变量</span></span><br><span class="line">hexo -v</span><br></pre></td></tr></table></figure><p>关于Hexo的知识，需要记住常用的命令,至于其他，不懂的时候查文档即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 博客主目录，初始化一个文件夹为博客主目录</span></span><br><span class="line"><span class="comment"># hexo init [folder]</span></span><br><span class="line">hexo init blog   <span class="comment"># 当前目录的blog文件夹</span></span><br><span class="line"><span class="comment"># 创建新博文</span></span><br><span class="line"><span class="comment"># hexo new [layout] &lt;title&gt;</span></span><br><span class="line"><span class="comment"># 一般写法</span></span><br><span class="line">hexo new _post <span class="string">"我的第一篇博客"</span></span><br><span class="line"><span class="comment"># 生成静态资源</span></span><br><span class="line">hexo generate</span><br><span class="line"><span class="comment"># 简单写法</span></span><br><span class="line">hexo g</span><br><span class="line"><span class="comment"># 启动hexo 本地服务器</span></span><br><span class="line">hexo server</span><br><span class="line"><span class="comment"># 简单写法</span></span><br><span class="line">hexo s</span><br><span class="line"><span class="comment"># 清除静态文件</span></span><br><span class="line">hexo clean</span><br></pre></td></tr></table></figure><h2 id="博客优化"><a href="#博客优化" class="headerlink" title="博客优化"></a>博客优化</h2><h3 id="主题选用"><a href="#主题选用" class="headerlink" title="主题选用"></a>主题选用</h3><p><strong>Next主题</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><div class="note - primary"><p>Next的官方文档写的很详细，只是有一些内容可以过时例如设置留言这一块。</p></div><h3 id="做了哪些工作"><a href="#做了哪些工作" class="headerlink" title="做了哪些工作"></a>做了哪些工作</h3><h4 id="favicon的改进"><a href="#favicon的改进" class="headerlink" title="favicon的改进"></a>favicon的改进</h4><p><a href="https://realfavicongenerator.net/" target="_blank" rel="noopener">favicon生成</a></p><ol><li><p><a href="https://i.loli.net/2019/01/12/5c38e8d77bce0.png" target="_blank" rel="noopener"><img src="https://i.loli.net/2019/01/12/5c38e8d77bce0.png" alt="icon1.png"> </a></p></li><li><p><a href="https://i.loli.net/2019/01/12/5c38e8d73a9ec.png" target="_blank" rel="noopener"><img src="https://i.loli.net/2019/01/12/5c38e8d73a9ec.png" alt="2.png"></a></p></li><li><p><img src="https://i.loli.net/2019/01/12/5c38e8d77d8d5.png" alt="dicon.png"></p></li><li><p>选项弄好后，下载压缩包，解压复制粘贴，建议放在 next/source/images/ 里（没有自己建），这样可以避免更新 NexT 主题的时候遇到麻烦，最后记得要稍微改下文件名，与下面的保持一致,原来是favicon-16x16-next.png，favicon-32x32-next.png</p></li></ol><p><a href="https://i.loli.net/2019/01/12/5c38df7bd59d4.png" target="_blank" rel="noopener"><img src="https://i.loli.net/2019/01/12/5c38df7bd59d4.png" alt="_cat.png"></a></p><h4 id="About页面没有Title"><a href="#About页面没有Title" class="headerlink" title="About页面没有Title"></a>About页面没有Title</h4><p><a href="https://github.com/iissnan/hexo-theme-next/issues/1367" target="_blank" rel="noopener">About页面没有title，求解答 issue#1367</a></p><h4 id="实现点击出现桃心效果"><a href="#实现点击出现桃心效果" class="headerlink" title="实现点击出现桃心效果"></a>实现点击出现桃心效果</h4><p>为了方便,你在这里可以下载<a href="">love.js</a>（具体操作点击raw,然后右键另存为即可）<br>将love.js文件放到路径/themes/next/source/js/src里面，然后打开\themes\next\layout_layout.swig文件，添加如下代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"/js/src/love.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>[<img src="https://i.loli.net/2019/01/12/5c38df7c7df41.png" alt="1.png"></p><h4 id="修改文章底部标签"><a href="#修改文章底部标签" class="headerlink" title="修改文章底部标签"></a>修改文章底部标签</h4><p>修改模板/themes/next/layout/_macro/post.swig，搜索 rel=”tag”&gt;#，将 # 换成<i class="fa fa-tag"></i>,修改后如下图</p><p><a href="https://i.loli.net/2019/01/12/5c38df7bc77a8.png" target="_blank" rel="noopener"><img src="https://i.loli.net/2019/01/12/5c38df7bc77a8.png" alt="_tag.png"></a></p><h4 id="addThis功能添加"><a href="#addThis功能添加" class="headerlink" title="addThis功能添加"></a>addThis功能添加</h4><p>注意的是addThis的控制台已经发生了变化</p><p><img src="https://i.loli.net/2018/12/02/5c03cae0b7f31.png" alt="addThis 界面"></p><p><a href="https://i.loli.net/2019/01/12/5c38df7c4fe4c.png" target="_blank" rel="noopener"><img src="https://i.loli.net/2019/01/12/5c38df7c4fe4c.png" alt="_addThisID.png"></a></p><p>这是2018-12-2的界面，需要到Profile Settings - &gt; General-&gt;找到ID，复制到主题配置文件</p><h4 id="文章版权申明"><a href="#文章版权申明" class="headerlink" title="文章版权申明"></a>文章版权申明</h4><p>Todo</p><h4 id="摘要图片"><a href="#摘要图片" class="headerlink" title="摘要图片"></a>摘要图片</h4><p><a href="https://faithlove.github.io/2018/07/18/Hexo-Next%E5%A6%82%E4%BD%95%E5%9C%A8%E6%96%87%E7%AB%A0%E6%91%98%E8%A6%81%E5%B1%95%E7%A4%BA%E5%9B%BE%E7%89%87/" target="_blank" rel="noopener">可以查看这篇文章</a></p><h2 id="windows下工具推荐"><a href="#windows下工具推荐" class="headerlink" title="windows下工具推荐"></a>windows下工具推荐</h2><h3 id="Typora（对新手友好）"><a href="#Typora（对新手友好）" class="headerlink" title="Typora（对新手友好）"></a>Typora（对新手友好）</h3><blockquote><p>一款实时渲染的Mrakdown写作软件，百度搜索Typora下载即可</p></blockquote><h4 id="windows右键新建Markdown文件"><a href="#windows右键新建Markdown文件" class="headerlink" title="windows右键新建Markdown文件"></a>windows右键新建Markdown文件</h4><p>参考：<a href="https://blog.csdn.net/yyt_1995/article/details/82286075" target="_blank" rel="noopener">Windows右键新建MarkDown文件</a></p><h3 id="VScode（推荐开发者使用，需要更多时间和学习曲线）"><a href="#VScode（推荐开发者使用，需要更多时间和学习曲线）" class="headerlink" title="VScode（推荐开发者使用，需要更多时间和学习曲线）"></a>VScode（推荐开发者使用，需要更多时间和学习曲线）</h3><blockquote><p>一款由微软开源的文本编辑器，功能极其强大，可以通过安装插件来满足需求</p></blockquote><h4 id="支持Markdown插件有"><a href="#支持Markdown插件有" class="headerlink" title="支持Markdown插件有"></a>支持Markdown插件有</h4><ul><li><strong>markdownlint</strong>，一般以lint大多都是保证质量的插件，这个插件是用来规范Markdown写作的。</li><li><strong>markdown-preview-enhanced</strong>，实时预览的插件，还添加了一些常用功能比如插入图片并上传图床等等，文档：<a href="https://shd101wyy.github.io/markdown-preview-enhanced/#/zh-cn/" target="_blank" rel="noopener">简体中文文档</a></li></ul><hr><p>这篇文章参考了以下的教程和博客。</p><ol><li><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo中文文档</a></li><li><a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">Next文档</a></li><li><a href="https://reuixiy.github.io/technology/computer/computer-aided-art/2017/06/09/hexo-next-optimization.html" target="_blank" rel="noopener">打造个性超赞博客Hexo+NexT+GitHubPages的超深度优化</a></li><li><a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">廖雪峰GIt帮助文档</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Hexo博客搭建记录&quot;&gt;&lt;a href=&quot;#Hexo博客搭建记录&quot; class=&quot;headerlink&quot; title=&quot;Hexo博客搭建记录&quot;&gt;&lt;/a&gt;Hexo博客搭建记录&lt;/h1&gt;&lt;p&gt;搭建一个个人博客一直是自己的想法，选择有很多，有Hexo，Hugo，jekkll，workpress，国内大的写作平台也有CSDN,博客园，简书。选择一个自己喜欢，坚持写下去吧。&lt;br&gt;接下来，就是这个博客的搭建过程。希望对你有所帮助。&lt;br&gt;（接下来是在windows平台实践的）&lt;/p&gt;
&lt;h2 id=&quot;Hexo是什么&quot;&gt;&lt;a href=&quot;#Hexo是什么&quot; class=&quot;headerlink&quot; title=&quot;Hexo是什么&quot;&gt;&lt;/a&gt;Hexo是什么&lt;/h2&gt;&lt;p&gt;来自官网的解释&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hexo 是一个快速、简洁且高效的博客框架。&lt;br&gt;Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="博客" scheme="http://lhl02531.github.io/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="博客" scheme="http://lhl02531.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="next" scheme="http://lhl02531.github.io/tags/next/"/>
    
      <category term="优化" scheme="http://lhl02531.github.io/tags/%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
</feed>
