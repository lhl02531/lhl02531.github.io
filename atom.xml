<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  <subtitle>Keep it Simple and Stupid</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://lhl02531.github.io/"/>
  <updated>2024-03-13T09:35:34.000Z</updated>
  <id>http://lhl02531.github.io/</id>
  
  <author>
    <name>lv</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>记录-react + ts + egg 全栈开发账单H5</title>
    <link href="http://lhl02531.github.io/2024/03/13/react-ts-%E5%BC%80%E5%8F%91%E8%B4%A6%E5%8D%95H5-%E8%AE%B0%E5%BD%95/"/>
    <id>http://lhl02531.github.io/2024/03/13/react-ts-开发账单H5-记录/</id>
    <published>2024-03-13T01:52:01.000Z</published>
    <updated>2024-03-13T09:35:34.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="项目背景"><a href="#项目背景" class="headerlink" title="项目背景"></a>项目背景</h1><p>过年前学完了 <code>react</code> 和 <code>ts</code>,在找面试项目 idea 的时候找到了这个掘金手册，<a href="https://juejin.cn/book/6966551262766563328?scrollMenuIndex=1">Node + React 实战：从 0 到 1 实现记账本</a>，总体来说，符合我的要求，所以我的项目在这个项目的基础上加上了改进。 那时我并不知道这个想法会让我吃个大亏。不过幸运的是，这个项目最终完成了。<br>具体的改进如下：</p><ol><li>使用了最新的 <code>react18</code> 和 <code>react routerv6</code></li><li>开始使用 <code>TypeScript</code> 进行类型约束</li><li>手册使用了 <code>zarm</code> UI 库, 而我则使用 <code>antd-mobile</code> UI 库</li><li>手册使用了 <code>less</code>, 而我则使用了 <code>sass</code></li><li>手册并没有规范代码格式了，而我使用了 <code>eslint + prettier</code> 来规范美化代码</li></ol><h1 id="项目的开发"><a href="#项目的开发" class="headerlink" title="项目的开发"></a>项目的开发</h1><h2 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h2><ol><li>后端需要实现用户登录注册接口，账单数据的增删改查接口，返回月度账单的统计接口，账单类型的接口</li><li>前端需要实现用户登录页注册页，账单页，账单详情页，月度账单展示页，用户信息页</li></ol><h2 id="前端项目初始化"><a href="#前端项目初始化" class="headerlink" title="前端项目初始化"></a>前端项目初始化</h2><h3 id="项目新建和安装依赖"><a href="#项目新建和安装依赖" class="headerlink" title="项目新建和安装依赖"></a>项目新建和安装依赖</h3><p><code>pnpm create vite my-vue-app --template react-ts</code>, 使用 <code>vite</code> 创建 <code>react ts</code> 项目， <code>pnpm i</code>, 安装依赖</p><h3 id="格式校验和美化代码"><a href="#格式校验和美化代码" class="headerlink" title="格式校验和美化代码"></a>格式校验和美化代码</h3><p><code>pnpm add --save-dev --save-exact prettier</code>,<br><code>pnpm add eslint-config-prettier eslint-plugin-prettier -D</code>,配置<code>.prettierignore</code>和<code>.prettierrc</code>,<code>.eslintrc.cjs</code>,<code>package.json</code>，执行命令<code>pnpm run lint</code>, <code>pnpm run lint:fix</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// .prettierignore</span></span><br><span class="line">node_modules</span><br><span class="line"># <span class="title class_">Ignore</span> <span class="attr">artifacts</span>:</span><br><span class="line">build</span><br><span class="line">coverage</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// .prettierrc</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;printWidth&quot;</span>: <span class="number">80</span>,</span><br><span class="line">  <span class="string">&quot;tabWidth&quot;</span>: <span class="number">2</span>,</span><br><span class="line">  <span class="string">&quot;useTabs&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="string">&quot;singleQuote&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="string">&quot;semi&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="string">&quot;trailingComma&quot;</span>: <span class="string">&quot;none&quot;</span>,</span><br><span class="line">  <span class="string">&quot;bracketSpacing&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="string">&quot;endOfLine&quot;</span>: <span class="string">&quot;auto&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// .eslintrc.cjs</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">root</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">env</span>: &#123; <span class="attr">browser</span>: <span class="literal">true</span>, <span class="attr">es2020</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">  <span class="attr">extends</span>: [</span><br><span class="line">    <span class="string">&#x27;eslint:recommended&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;plugin:@typescript-eslint/recommended&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;plugin:react-hooks/recommended&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;prettier&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;plugin:prettier/recommended&#x27;</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">ignorePatterns</span>: [<span class="string">&#x27;dist&#x27;</span>, <span class="string">&#x27;.eslintrc.cjs&#x27;</span>],</span><br><span class="line">  <span class="attr">parser</span>: <span class="string">&#x27;@typescript-eslint/parser&#x27;</span>,</span><br><span class="line">  <span class="attr">plugins</span>: [<span class="string">&#x27;react-refresh&#x27;</span>],</span><br><span class="line">  <span class="attr">rules</span>: &#123;</span><br><span class="line">    <span class="string">&#x27;react-refresh/only-export-components&#x27;</span>: [</span><br><span class="line">      <span class="string">&#x27;warn&#x27;</span>,</span><br><span class="line">      &#123; <span class="attr">allowConstantExport</span>: <span class="literal">true</span> &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&#x27;@typescript-eslint/no-explicit-any&#x27;</span>: [<span class="string">&#x27;warn&#x27;</span>],</span><br><span class="line">    <span class="string">&#x27;no-unused-vars&#x27;</span>: <span class="string">&#x27;off&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;@typescript-eslint/no-unused-vars&#x27;</span>: <span class="string">&#x27;off&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;react/jsx-uses-react&#x27;</span>: <span class="string">&#x27;off&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;react/react-in-jsx-scope&#x27;</span>: <span class="string">&#x27;off&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// package.json</span></span><br><span class="line"> <span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;lint&quot;</span>: <span class="string">&quot;eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;lint:fix&quot;</span>: <span class="string">&quot;eslint --fix . --ext ts,tsx --report-unused-disable-directives&quot;</span>,</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><h2 id="后端项目初始化"><a href="#后端项目初始化" class="headerlink" title="后端项目初始化"></a>后端项目初始化</h2><h3 id="使用-Egg-js-脚手架进行初始化"><a href="#使用-Egg-js-脚手架进行初始化" class="headerlink" title="使用 Egg.js 脚手架进行初始化"></a>使用 Egg.js 脚手架进行初始化</h3><p><code>npm init egg --type=simple # Optionally pnpm create egg --type=simple</code>, 参考<a href="https://github.com/eggjs/egg">egg.js github 仓库</a></p><p>代码格式美化类似，规则略有不同。<br>安装依赖。推荐使用 <code>pnpm</code>, <code>npm</code> 不知道是我的问题还是什么问题，有点慢。</p><h3 id="Egg-js-基础知识"><a href="#Egg-js-基础知识" class="headerlink" title="Egg.js 基础知识"></a>Egg.js 基础知识</h3><p>只是做个大概介绍，可以直接看完类似内容，直接上手，遇到问题再查文档。</p><p><code>Egg.js</code> 框架基于 <code>koa</code>,思想是<code>约定大于配置</code>，举个例子是<code>controller</code> 和 <code>service</code>，需要在固定文件夹下，配置需要到这两个文件下去配置<code>config/config.default.js</code>和 <code>config/plugin.js</code>,好处是排查问题，开发起来快，缺点是上手门槛还是比较高的。<br>入门的话，建议直接看完<a href="https://www.eggjs.org/zh-CN/intro/quickstart">官方入门</a>，直接上手，遇到问题解决问题。<br>认识项目结构<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">egg-example</span><br><span class="line">├── app</span><br><span class="line">│   ├── controller (controller 层) </span><br><span class="line">│   │   └── home.<span class="property">js</span></span><br><span class="line">│   ├── middleware  (中间件)</span><br><span class="line">│   │   └── tokenVerify.<span class="property">js</span></span><br><span class="line">│   ├── public  (静态文件)</span><br><span class="line">│   ├── service  (service 层)</span><br><span class="line">│   │   └── home.<span class="property">js</span></span><br><span class="line">│   └── router.<span class="property">js</span> </span><br><span class="line">├── config (配置)</span><br><span class="line">│   └── config.<span class="property">default</span>.<span class="property">js</span> (项目常规配置)</span><br><span class="line">│   └── plugin.<span class="property">js</span> (项目插件配置)</span><br><span class="line">├── log (日志)</span><br><span class="line">├── run (框架运行产生的附加数据，不会有影响)</span><br><span class="line">├── typings (框架生成的 ts 类型提示，当你新建 controller/home.<span class="property">js</span> 一个方法时，就会有提示，不过又是需要重启)</span><br><span class="line">├── test (单元测试)</span><br><span class="line">└── package.<span class="property">json</span></span><br></pre></td></tr></table></figure><br>有几个概念，地方需要理解，注意一下，</p><ol><li><code>Controller</code></li><li><code>Router</code> 配置</li><li><code>Service</code> 配置</li><li><code>Middleware</code>中间件</li><li>配置文件</li><li>插件可以先放过。</li><li>框架使用了 ts 进行类型提醒，所以当你书写了 controller 和 service ，可以重启下项目，会有相应的代码提示</li><li><a href="https://www.eggjs.org/zh-CN/basics/objects">框架内置对象</a></li><li><a href="https://www.eggjs.org/zh-CN/core/development#%E8%B0%83%E8%AF%95">调试</a></li></ol><h2 id="写代码-遇到的问题"><a href="#写代码-遇到的问题" class="headerlink" title="写代码 遇到的问题"></a>写代码 遇到的问题</h2><h3 id="模块化-css"><a href="#模块化-css" class="headerlink" title="模块化 css"></a>模块化 css</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">文件命令</span><br><span class="line">- style.css</span><br><span class="line">+ style.module.scss</span><br><span class="line"></span><br><span class="line">导入文件</span><br><span class="line">- import &#x27;./style.css&#x27;</span><br><span class="line">+ import s from &#x27;./style.module.scss&#x27;</span><br><span class="line"></span><br><span class="line">使用</span><br><span class="line">- &lt;div className=&quot;test&quot;&gt;&lt;/div&gt;</span><br><span class="line">+ &lt;div className=&#123;s.test&#125;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><h3 id="Localstorage-ts-简单封装"><a href="#Localstorage-ts-简单封装" class="headerlink" title="Localstorage ts 简单封装"></a>Localstorage ts 简单封装</h3><p><strong>参考 <a href="https://juejin.cn/post/7048976403349536776">https://juejin.cn/post/7048976403349536776</a></strong><br><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 参考 https://juejin.cn/post/7048976403349536776</span></span><br><span class="line"><span class="comment">// 枚举</span></span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">StorageType</span> &#123;</span><br><span class="line">  l = <span class="string">&#x27;localStorage&#x27;</span>,</span><br><span class="line">  s = <span class="string">&#x27;sessionStorage&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyStorage</span> &#123;</span><br><span class="line">  <span class="attr">storage</span>: <span class="title class_">Storage</span></span><br><span class="line"></span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"><span class="keyword">type</span>: StorageType</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">storage</span> =</span><br><span class="line">      <span class="keyword">type</span> === <span class="title class_">StorageType</span>.<span class="property">l</span> ? <span class="variable language_">window</span>.<span class="property">localStorage</span> : <span class="variable language_">window</span>.<span class="property">sessionStorage</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">set</span>(<span class="params">key: <span class="built_in">string</span>, value: <span class="built_in">any</span></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> data = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(value)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">storage</span>.<span class="title function_">setItem</span>(key, data)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">get</span>(<span class="params">key: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> value = <span class="variable language_">this</span>.<span class="property">storage</span>.<span class="title function_">getItem</span>(key)</span><br><span class="line">    <span class="keyword">if</span> (value) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="title class_">JSON</span>.<span class="title function_">parse</span>(value)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">delete</span>(<span class="params">key: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">storage</span>.<span class="title function_">removeItem</span>(key)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">clear</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">storage</span>.<span class="title function_">clear</span>()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">LStorage</span> = <span class="keyword">new</span> <span class="title class_">MyStorage</span>(<span class="title class_">StorageType</span>.<span class="property">l</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">SStorage</span> = <span class="keyword">new</span> <span class="title class_">MyStorage</span>(<span class="title class_">StorageType</span>.<span class="property">s</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">LStorage</span>, <span class="title class_">SStorage</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 </span></span><br><span class="line"><span class="title class_">LStorage</span>.<span class="title function_">set</span>(<span class="string">&#x27;token&#x27;</span>, data?.<span class="property">token</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="attr">token</span>: <span class="built_in">string</span> = <span class="title class_">LStorage</span>.<span class="title function_">get</span>(<span class="string">&#x27;token&#x27;</span>)</span><br></pre></td></tr></table></figure></p><h3 id="axios-ts-简单封装"><a href="#axios-ts-简单封装" class="headerlink" title="axios ts 简单封装"></a>axios ts 简单封装</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"><span class="comment">// AxiosInstance,使用axios实例对象类型。</span></span><br><span class="line"><span class="comment">// AxiosRequestConfig,使用axios发送请求传递参数的类型</span></span><br><span class="line"><span class="comment">// AxiosResponse, axios请求返回值类型都是AxiosResponse类型</span></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">type</span> &#123;</span><br><span class="line">  <span class="title class_">AxiosError</span>,</span><br><span class="line">  <span class="title class_">AxiosInstance</span>,</span><br><span class="line">  <span class="title class_">AxiosRequestConfig</span>,</span><br><span class="line">  <span class="title class_">AxiosResponse</span>,</span><br><span class="line">  <span class="title class_">InternalAxiosRequestConfig</span></span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; baseURL &#125; <span class="keyword">from</span> <span class="string">&#x27;.&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">LStorage</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;./localStorage&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Toast</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;antd-mobile&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">type</span> &#123; <span class="title class_">Result</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@/types&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; basename &#125; <span class="keyword">from</span> <span class="string">&#x27;@/utils&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 导出</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">Request</span> &#123;</span><br><span class="line">  <span class="comment">// navigate = useNavigate()</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// axios 实例</span></span><br><span class="line">  <span class="attr">instance</span>: <span class="title class_">AxiosInstance</span></span><br><span class="line">  <span class="comment">// 基础配置, url 和超时时间</span></span><br><span class="line">  <span class="attr">baseConfig</span>: <span class="title class_">AxiosRequestConfig</span> = &#123;</span><br><span class="line">    baseURL,</span><br><span class="line">    <span class="attr">timeout</span>: <span class="number">5000</span>,</span><br><span class="line">    <span class="attr">headers</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;X-Requested-With&#x27;</span>: <span class="string">&#x27;XMLHttpRequest&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">config: AxiosRequestConfig</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">instance</span> = axios.<span class="title function_">create</span>(<span class="title class_">Object</span>.<span class="title function_">assign</span>(<span class="variable language_">this</span>.<span class="property">baseConfig</span>, config))</span><br><span class="line">    <span class="comment">// 请求拦截器</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">instance</span>.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(</span><br><span class="line">      <span class="function">(<span class="params">config: InternalAxiosRequestConfig</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 一般会请求拦截里面加token，用于后端的验证</span></span><br><span class="line">        <span class="keyword">const</span> <span class="attr">token</span>: <span class="built_in">string</span> = <span class="title class_">LStorage</span>.<span class="title function_">get</span>(<span class="string">&#x27;token&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> (token) &#123;</span><br><span class="line">          config.<span class="property">headers</span>!.<span class="property">Authorization</span> = token</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> config</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="function">(<span class="params">err: AxiosError</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(err)</span><br><span class="line">      &#125;</span><br><span class="line">    )</span><br><span class="line">    <span class="comment">// 响应拦截器</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">instance</span>.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">      <span class="function">(<span class="params">res: AxiosResponse</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (res.<span class="property">data</span>.<span class="property">code</span> !== <span class="number">200</span>) &#123;</span><br><span class="line">          <span class="keyword">if</span> (res.<span class="property">data</span>.<span class="property">message</span>) &#123;</span><br><span class="line">            <span class="title class_">Toast</span>.<span class="title function_">show</span>(&#123;</span><br><span class="line">              <span class="attr">content</span>: res.<span class="property">data</span>.<span class="property">message</span>,</span><br><span class="line">              <span class="attr">icon</span>: <span class="string">&#x27;fail&#x27;</span></span><br><span class="line">            &#125;)</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">if</span> (res.<span class="property">data</span>.<span class="property">code</span> === <span class="number">401</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (basename) &#123;</span><br><span class="line">              <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = <span class="string">`<span class="subst">$&#123;basename&#125;</span>/login`</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = <span class="string">`/login`</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// this.navigate(&#x27;/login&#x27;)</span></span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(res.<span class="property">data</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res.<span class="property">data</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="function">(<span class="params">err: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="title class_">Toast</span>.<span class="title function_">show</span>(&#123;</span><br><span class="line">          <span class="attr">content</span>: <span class="string">&#x27;系统错误&#x27;</span>,</span><br><span class="line">          <span class="attr">icon</span>: <span class="string">&#x27;fail&#x27;</span></span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="comment">// 这里是AxiosError类型，所以一般我们只reject我们需要的响应即可</span></span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(err.<span class="property">response</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 封装 get</span></span><br><span class="line">  get&lt;T&gt;(<span class="attr">url</span>: <span class="built_in">string</span>, params?: <span class="built_in">object</span>, config = &#123;&#125;): <span class="title class_">Promise</span>&lt;<span class="title class_">Result</span>&lt;T&gt;&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">instance</span>.<span class="title function_">get</span>(url, &#123; params, ...config &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 封装 post</span></span><br><span class="line">  post&lt;T&gt;(</span><br><span class="line">    <span class="attr">url</span>: <span class="built_in">string</span>,</span><br><span class="line">    params?: <span class="built_in">object</span> | <span class="built_in">string</span>,</span><br><span class="line">    <span class="attr">config</span>: <span class="built_in">object</span> = &#123;&#125;</span><br><span class="line">  ): <span class="title class_">Promise</span>&lt;<span class="title class_">Result</span>&lt;T&gt;&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">instance</span>.<span class="title function_">post</span>(url, params, config)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> <span class="title class_">Request</span>(&#123;&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>返回的数据结构一般是</strong><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;message&quot;</span>:<span class="string">&quot;&quot;</span>,   <span class="comment">// 返回的信息提示</span></span><br><span class="line">    <span class="string">&quot;code&quot;</span>:<span class="string">&quot;&quot;</span>,      <span class="comment">// 返回的代码提示</span></span><br><span class="line">    <span class="string">&quot;data&quot;</span>:<span class="string">&quot;&quot;</span>       <span class="comment">// 返回的数据,可能是对象, 也可能是单纯的字符串</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><strong>那么如何使用呢？</strong><br><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 类型</span></span><br><span class="line"><span class="comment">// 分页类型</span></span><br><span class="line"><span class="comment">// /types/index.d.ts</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">interface</span> <span class="title class_">IPage</span> &#123;</span><br><span class="line">  page?: <span class="built_in">number</span></span><br><span class="line">  <span class="attr">pageSize</span>: <span class="built_in">number</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">interface</span> <span class="title class_">IRequst</span> &#123;</span><br><span class="line">  date?: <span class="built_in">string</span></span><br><span class="line">  <span class="attr">type_id</span>: <span class="built_in">string</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 响应数据中 data 类型</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">interface</span> <span class="title class_">IRes</span> &#123;</span><br><span class="line">  token?: <span class="built_in">string</span></span><br><span class="line">  list?: <span class="title class_">IDayBill</span>[] | <span class="title class_">BillType</span>[] | <span class="literal">undefined</span></span><br><span class="line">  total_data?: <span class="title class_">ITotalDataItem</span>[]</span><br><span class="line">  <span class="attr">totalExpense</span>: <span class="built_in">number</span></span><br><span class="line">  <span class="attr">totalIncome</span>: <span class="built_in">number</span></span><br><span class="line">  <span class="attr">totalPage</span>: <span class="built_in">number</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// api 定义</span></span><br><span class="line"><span class="comment">//  api/bill.tsx</span></span><br><span class="line"><span class="comment">// 获取账单列表</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">GetBillList</span>(<span class="params">params: IPage &amp; IRequst</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> request.<span class="property">get</span>&lt;<span class="title class_">IRes</span>&gt;(<span class="string">&#x27;/bill/list&#x27;</span>, params)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加账单</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">AddBill</span>(<span class="params">params: IBillItem</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> request.<span class="title function_">post</span>(<span class="string">&#x27;/bill/add&#x27;</span>, params)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// GetBillList 使用 </span></span><br><span class="line"><span class="keyword">const</span> &#123; data &#125; = <span class="keyword">await</span> <span class="title class_">GetBillList</span>(&#123;</span><br><span class="line">    <span class="attr">pageSize</span>: <span class="number">5</span>,</span><br><span class="line">    page,</span><br><span class="line">    <span class="attr">date</span>: currentTime,</span><br><span class="line">    <span class="attr">type_id</span>: currentSelectType.<span class="property">id</span> + <span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 这样就可以有代码提示</span></span><br><span class="line"><span class="comment">// data.token</span></span><br><span class="line"><span class="comment">// AddBill 使用</span></span><br><span class="line"><span class="keyword">await</span> <span class="title class_">AddBill</span>(params)</span><br><span class="line"></span><br><span class="line"><span class="comment">// </span></span><br></pre></td></tr></table></figure></p><h3 id="echarts-封装"><a href="#echarts-封装" class="headerlink" title="echarts 封装"></a>echarts 封装</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> echarts <span class="keyword">from</span> <span class="string">&#x27;echarts/core&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  <span class="title class_">TooltipComponent</span>,</span><br><span class="line">  <span class="title class_">TooltipComponentOption</span>,</span><br><span class="line">  <span class="title class_">LegendComponent</span>,</span><br><span class="line">  <span class="title class_">LegendComponentOption</span></span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&#x27;echarts/components&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">PieChart</span>, <span class="title class_">PieSeriesOption</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;echarts/charts&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">LabelLayout</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;echarts/features&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">CanvasRenderer</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;echarts/renderers&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="variable constant_">FC</span>, useEffect, useRef &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="comment">// echarts 配置</span></span><br><span class="line">echarts.<span class="title function_">use</span>([</span><br><span class="line">  <span class="title class_">TooltipComponent</span>,</span><br><span class="line">  <span class="title class_">LegendComponent</span>,</span><br><span class="line">  <span class="title class_">PieChart</span>,</span><br><span class="line">  <span class="title class_">CanvasRenderer</span>,</span><br><span class="line">  <span class="title class_">LabelLayout</span></span><br><span class="line">])</span><br><span class="line"><span class="comment">// echarts options 类型</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">type</span> <span class="title class_">EChartsOption</span> = echarts.<span class="property">ComposeOption</span>&lt;</span><br><span class="line">  <span class="title class_">TooltipComponentOption</span> | <span class="title class_">LegendComponentOption</span> | <span class="title class_">PieSeriesOption</span></span><br><span class="line">&gt;</span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">MyChartProps</span> &#123;</span><br><span class="line">  <span class="attr">option</span>: <span class="title class_">EChartsOption</span> | <span class="literal">undefined</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">MyPieChart</span>: <span class="variable constant_">FC</span>&lt;<span class="title class_">MyChartProps</span>&gt; = <span class="function">(<span class="params">&#123; option &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// dom ref</span></span><br><span class="line">  <span class="keyword">const</span> cRef = useRef&lt;<span class="title class_">HTMLDivElement</span>&gt;(<span class="literal">null</span>)</span><br><span class="line">  <span class="comment">// echart 实例</span></span><br><span class="line">  <span class="keyword">const</span> instance = useRef&lt;echarts.<span class="property">EChartsType</span>&gt;()</span><br><span class="line">  <span class="comment">// 饼图的收入支出控制</span></span><br><span class="line">  <span class="comment">//   const [pieType, setPieType] = useState(&#x27;expense&#x27;)</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//   初始化组件，监听 dom 和 options 变化</span></span><br><span class="line">  <span class="comment">// 监听 dom ，是因为刚开始初始化 dom ref 为 null</span></span><br><span class="line">  <span class="comment">// 监听 option 是因为 为动态传入 option</span></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (cRef.<span class="property">current</span>) &#123;</span><br><span class="line">      <span class="comment">// 检测 dom 节点是否挂载 echarts 实例，只有未挂载时才初始化</span></span><br><span class="line">      instance.<span class="property">current</span> = echarts.<span class="title function_">getInstanceByDom</span>(cRef.<span class="property">current</span>)</span><br><span class="line">      <span class="keyword">if</span> (!instance.<span class="property">current</span>) &#123;</span><br><span class="line">        instance.<span class="property">current</span> = echarts.<span class="title function_">init</span>(cRef.<span class="property">current</span>)</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (option) instance.<span class="property">current</span>.<span class="title function_">setOption</span>(option)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      instance.<span class="property">current</span>?.<span class="title function_">dispose</span>()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, [cRef, option])</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ref</span>=<span class="string">&#123;cRef&#125;</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">width:</span> &#x27;<span class="attr">300px</span>&#x27;, <span class="attr">height:</span> &#x27;<span class="attr">400px</span>&#x27; &#125;&#125;&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">MyPieChart</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li><code>width</code> 和 <code>height</code> 可以抽离出，我是直接用了</li></ol><h3 id="公共头部"><a href="#公共头部" class="headerlink" title="公共头部"></a>公共头部</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useNavigate &#125; <span class="keyword">from</span> <span class="string">&#x27;react-router-dom&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">NavBar</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;antd-mobile&#x27;</span></span><br><span class="line"><span class="comment">// import &#123; CloseOutline &#125; from &#x27;antd-mobile-icons&#x27;</span></span><br><span class="line"><span class="keyword">import</span> s <span class="keyword">from</span> <span class="string">&#x27;./style.module.scss&#x27;</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Header</span> = (<span class="params">&#123;</span></span><br><span class="line"><span class="params">  title,</span></span><br><span class="line"><span class="params">  height = <span class="string">&#x27;45px&#x27;</span>,</span></span><br><span class="line"><span class="params">  backgroundColor</span></span><br><span class="line"><span class="params">&#125;: &#123;</span></span><br><span class="line"><span class="params">  title: <span class="built_in">string</span></span></span><br><span class="line"><span class="params">  height?: <span class="built_in">string</span></span></span><br><span class="line"><span class="params">  backgroundColor?: <span class="built_in">string</span></span></span><br><span class="line"><span class="params">&#125;</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> navigate = <span class="title function_">useNavigate</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#123;s.header&#125;</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">height</span>, <span class="attr">backgroundColor</span> &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">NavBar</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">onBack</span>=<span class="string">&#123;()</span> =&gt;</span> navigate(-1)&#125;</span></span><br><span class="line"><span class="language-xml">        style=&#123;&#123;</span></span><br><span class="line"><span class="language-xml">          &#x27;--height&#x27;: height</span></span><br><span class="line"><span class="language-xml">        &#125;&#125;</span></span><br><span class="line"><span class="language-xml">      &gt;</span></span><br><span class="line"><span class="language-xml">        &#123;&#x27; &#x27;&#125;</span></span><br><span class="line"><span class="language-xml">        &#123;title&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">NavBar</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Header</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 样式 */</span></span><br><span class="line"><span class="comment">/* style.module.scss */</span></span><br><span class="line"><span class="selector-class">.header</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#e9e9e9</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 样式 */</span></span><br><span class="line"><span class="comment">/* header 以下样式参考 */</span></span><br><span class="line"><span class="selector-class">.main</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">45px</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">overflow-y</span>: auto;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fafbfc</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="selector-class">.text</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li>使用 <code>&lt;Header title=&quot;关于&quot; /&gt;</code></li><li><code>header</code> 有固定样式， <code>header</code>以下部分样式参考上面例子</li></ol><h3 id="自定义权限路由"><a href="#自定义权限路由" class="headerlink" title="自定义权限路由"></a>自定义权限路由</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; getItem, <span class="variable constant_">TOKENKEY</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@/utils&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Navigate</span> &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">AuthRoute</span>(<span class="params">&#123; children &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> token = <span class="title function_">getItem</span>(<span class="variable constant_">TOKENKEY</span>);</span><br><span class="line">  <span class="keyword">if</span> (token) &#123;</span><br><span class="line">    <span class="comment">// 这是jsx</span></span><br><span class="line">    <span class="comment">// ts 下记得加 &#123;children&#125;&lt;&gt;&lt;/&gt;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;&gt;</span>&#123;children&#125;<span class="tag">&lt;/&gt;</span></span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">Navigate</span> <span class="attr">to</span>=<span class="string">&#123;</span>&quot;/<span class="attr">login</span>&quot;&#125; <span class="attr">replace</span> /&gt;</span></span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">AuthRoute</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 </span></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createBrowserRouter</span>(</span><br><span class="line">  [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/about&#x27;</span>,</span><br><span class="line">      <span class="attr">element</span>: (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">AuthRouter</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        // Suspense 是路由懒加载</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Suspense</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">About</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">Suspense</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">AuthRouter</span>&gt;</span></span></span><br><span class="line">      )</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line"><span class="comment">//   basename 是上线是操作</span></span><br><span class="line">  &#123; basename &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="项目的Icon-封装"><a href="#项目的Icon-封装" class="headerlink" title="项目的Icon 封装"></a>项目的Icon 封装</h3><ol><li>使用阿里 <a href="https://www.iconfont.cn/?spm=a313x.help_detail.i3.2.500c3a811cvGzN">iconfont</a></li><li>如果项目是有需要用到单色，和给图标换不同颜色的需求，记得选用 <strong>单色图标</strong>，如果误选了多色图标，可以在 <code>资源管理</code>==&gt; <code>我的项目</code>==&gt; <code>你的项目名</code>==&gt; <code>批量操作</code>==&gt; <code>批量去色</code> ,<a href="https://juejin.cn/post/6844903827288621070">参考</a></li><li>该封装使用<code>Symbol</code> 引用</li></ol><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用`Symbol` 引用</span></span><br><span class="line"><span class="comment">// 下载资源的 iconfont.js</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./iconfont&#x27;</span></span><br><span class="line"><span class="comment">// 下载资源的 iconfont.css</span></span><br><span class="line"><span class="keyword">import</span> s <span class="keyword">from</span> <span class="string">&#x27;./style.module.scss&#x27;</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Icon</span> = (<span class="params">&#123;</span></span><br><span class="line"><span class="params">  <span class="keyword">type</span>,</span></span><br><span class="line"><span class="params">  fontSize = <span class="string">&#x27;20px&#x27;</span>,</span></span><br><span class="line"><span class="params">  color = <span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="params">&#125;: &#123;</span></span><br><span class="line"><span class="params">  <span class="keyword">type</span>: <span class="built_in">string</span></span></span><br><span class="line"><span class="params">  fontSize?: <span class="built_in">string</span></span></span><br><span class="line"><span class="params">  color?: <span class="built_in">string</span></span></span><br><span class="line"><span class="params">&#125;</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> color === <span class="string">&#x27;&#x27;</span> ? (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">className</span>=<span class="string">&#123;s.icon&#125;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span> <span class="attr">fontSize</span>=<span class="string">&#123;fontSize&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">use</span> <span class="attr">xlinkHref</span>=<span class="string">&#123;</span>`$&#123;<span class="attr">type</span>&#125;`&#125;&gt;</span><span class="tag">&lt;/<span class="name">use</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span></span><br><span class="line">  ) : (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">svg</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">className</span>=<span class="string">&#123;s.icon&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">fontSize</span>=<span class="string">&#123;fontSize&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">color</span>=<span class="string">&#123;color&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    &gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">use</span> <span class="attr">xlinkHref</span>=<span class="string">&#123;</span>`$&#123;<span class="attr">type</span>&#125;`&#125;&gt;</span><span class="tag">&lt;/<span class="name">use</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Icon</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用</span></span><br><span class="line">&lt;<span class="title class_">Icon</span> <span class="keyword">type</span>= <span class="string">&quot;#icon-caigoutong106&quot;</span> fontSize=<span class="string">&quot;24px&quot;</span> color= <span class="string">&quot;#f59563&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.icon</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">1em</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">1em</span>;</span><br><span class="line">  <span class="attribute">vertical-align</span>: -<span class="number">0.15em</span>;</span><br><span class="line">  fill: currentColor;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="TypeScript-与-React-的结合"><a href="#TypeScript-与-React-的结合" class="headerlink" title="TypeScript 与 React 的结合"></a>TypeScript 与 React 的结合</h3><h4 id="传递ref给子组件"><a href="#传递ref给子组件" class="headerlink" title="传递ref给子组件"></a>传递ref给子组件</h4><p>参考<br><a href="https://blog.w00d1f.com/2021/05/19/react%E5%9C%A8typescript%E4%B8%8B%E4%BC%A0%E9%80%92ref%E7%BB%99%E5%AD%90%E7%BB%84%E4%BB%B6/#%E5%9C%A8-tsx-%E4%B8%8B%E4%BD%BF%E7%94%A8">react在typescript下传递ref给子组件,forwardRef</a><br><a href="https://juejin.cn/post/7128929470618009608#heading-8">创建自己的类型声明文件</a><br><a href="https://juejin.cn/post/7137063260120940551#heading-4">函数式组件的 TS</a></p><h3 id="Antd-mobile"><a href="#Antd-mobile" class="headerlink" title="Antd mobile"></a>Antd mobile</h3><h4 id="List"><a href="#List" class="headerlink" title="List"></a>List</h4><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&#123;bill &amp;&amp;</span><br><span class="line">       bill.<span class="property">bills</span>.<span class="title function_">map</span>(<span class="function">(<span class="params">item, index</span>) =&gt;</span> (</span><br><span class="line">         <span class="language-xml"><span class="tag">&lt;<span class="name">List</span> <span class="attr">key</span>=<span class="string">&#123;index&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">           <span class="tag">&lt;<span class="name">List.Item</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">             <span class="attr">key</span>=<span class="string">&#123;item.id&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">             <span class="attr">prefix</span>=<span class="string">&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">               &lt;<span class="attr">Icon</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                 <span class="attr">type</span>=<span class="string">&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                   <span class="attr">item.type_id</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                     ? <span class="attr">typeMap</span>[<span class="attr">item.type_id</span>]<span class="attr">.iconName</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                     <span class="attr">:</span> <span class="attr">typeMap</span>[<span class="attr">16</span>]<span class="attr">.iconName</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                 &#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                 <span class="attr">fontSize</span>=<span class="string">&quot;24px&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                 <span class="attr">color</span>=<span class="string">&#123;item.type_id</span> ? <span class="attr">typeMap</span>[<span class="attr">item.type_id</span>]<span class="attr">.color</span> <span class="attr">:</span> &#x27;#<span class="attr">ffae07</span>&#x27;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">               /&gt;</span></span></span><br><span class="line"><span class="language-xml">             &#125;</span></span><br><span class="line"><span class="language-xml">             extra=&#123;</span></span><br><span class="line"><span class="language-xml">               <span class="tag">&lt;<span class="name">span</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                 <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">color:</span> <span class="attr">item.pay_type</span> == <span class="string">2</span> ? &#x27;<span class="attr">red</span>&#x27; <span class="attr">:</span> &#x27;#<span class="attr">39be77</span>&#x27; &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">               &gt;</span>&#123;`$&#123;item.pay_type === 1 ? &#x27;-&#x27; : &#x27;+&#x27;&#125;$&#123;item.amount&#125;`&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">             &#125;</span></span><br><span class="line"><span class="language-xml">             description=&#123;</span></span><br><span class="line"><span class="language-xml">               <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                 &#123;dayjs(Number(item.date)).format(&#x27;HH:mm&#x27;)&#125;</span></span><br><span class="line"><span class="language-xml">                 &#123;item.remark ? ` $&#123;item.remark&#125;` : &#x27; &#x27;&#125;</span></span><br><span class="line"><span class="language-xml">               <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">             &#125;</span></span><br><span class="line"><span class="language-xml">             onClick=&#123;() =&gt; &#123;</span></span><br><span class="line"><span class="language-xml">               goToDetail(item?.id as number)</span></span><br><span class="line"><span class="language-xml">             &#125;&#125;</span></span><br><span class="line"><span class="language-xml">           &gt;</span></span><br><span class="line"><span class="language-xml">             &#123;item.type_name&#125;</span></span><br><span class="line"><span class="language-xml">           <span class="tag">&lt;/<span class="name">List.Item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">         <span class="tag">&lt;/<span class="name">List</span>&gt;</span></span></span><br><span class="line">       ))&#125;</span><br></pre></td></tr></table></figure><p>报错 <code>Warning: Each child in a list should have a unique “key” prop.</code><br>解决方案是给 <code>List key=&#123;index&#125;</code> 加上 <code>key</code>，这个错误其实很容易知道， 数据结构是 <code>bill.bills</code>是一个数组， <code>List</code> 遍历的 <code>bills</code> 单项，结果我给 <code>listitem</code>加了 <code>key</code>还是没解决，导致我都有点怀疑自己了，</p><h4 id="Popup"><a href="#Popup" class="headerlink" title="Popup"></a>Popup</h4><p>在 <code>Popup</code>实现向左滑动需求，这个最诡异，我最终模糊地知道了这个问题，而且不止我一个人遇到这个问题，关键这个问题似乎无法复现。<br><a href="https://github.com/ant-design/ant-design-mobile/issues/6288">Popup组件内定义的元素设置overflow-x: auto;后无法滑动</a><br>大概是由于无法获取的图片的具体宽度从而导致容器的宽度始终大于子容器的宽度，在我想放弃这个做法的时候，看到了一个 <a href="https://better-scroll.github.io/docs/zh-CN/">BetterScroll 2.0</a><br>搜了网上的实现，大家要么是太复杂要么是太简单，<br>我也是简单实现，以下是具体代码<br><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 核心包, 当然可以全部引入，但那样太大了，事实上用到的功能只是一点，没必要引入太大的包</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">BScroll</span> <span class="keyword">from</span> <span class="string">&#x27;@better-scroll/core&#x27;</span></span><br><span class="line"><span class="comment">// 构造函数</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">BScrollConstructor</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@better-scroll/core/dist/types/BScroll&#x27;</span></span><br><span class="line"><span class="comment">// 插件</span></span><br><span class="line"><span class="comment">// https://better-scroll.github.io/docs/zh-CN/plugins/observe-dom.html</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ObserveDom</span> <span class="keyword">from</span> <span class="string">&#x27;@better-scroll/observe-dom&#x27;</span></span><br><span class="line"><span class="comment">// 图片类型的滑动，无法检测到，使用这个插件可以检测到 宽度/高度的变化</span></span><br><span class="line"><span class="comment">// https://better-scroll.github.io/docs/zh-CN/plugins/observe-image.html</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ObserveImage</span> <span class="keyword">from</span> <span class="string">&#x27;@better-scroll/observe-image&#x27;</span></span><br><span class="line"><span class="comment">// BetterScroll 实例</span></span><br><span class="line"><span class="keyword">const</span> [scrollObj, setScrollObj] = useState&lt;<span class="title class_">BScrollConstructor</span>&gt;()</span><br><span class="line"><span class="keyword">const</span> wrapperRef = useRef&lt;<span class="title class_">HTMLDivElement</span>&gt;(<span class="literal">null</span>)</span><br><span class="line"></span><br><span class="line"><span class="title class_">BScroll</span>.<span class="title function_">use</span>(<span class="title class_">ObserveDom</span>)</span><br><span class="line"><span class="title class_">BScroll</span>.<span class="title function_">use</span>(<span class="title class_">ObserveImage</span>)</span><br><span class="line"><span class="comment">// 初始化 实例函数</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">initBs</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">setScrollObj</span>(</span><br><span class="line">      <span class="comment">// wrapperRef 父容器</span></span><br><span class="line">      <span class="keyword">new</span> <span class="title class_">BScroll</span>(wrapperRef.<span class="property">current</span> <span class="keyword">as</span> <span class="title class_">HTMLDivElement</span>, &#123;</span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">        <span class="attr">observeDOM</span>: <span class="literal">true</span>, <span class="comment">// 开启 observe-dom 插件</span></span><br><span class="line">        <span class="attr">observeImage</span>: <span class="literal">true</span> <span class="comment">// 开启 observe-image 插件</span></span><br><span class="line">      &#125;)</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// jsx</span></span><br><span class="line"><span class="comment">// 父容器</span></span><br><span class="line">&lt;div className=&#123;s.<span class="property">type_wrapper</span>&#125; ref=&#123;wrapperRef&#125;&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#123;s.content&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><h3 id="后端上传图片和删除图片接口"><a href="#后端上传图片和删除图片接口" class="headerlink" title="后端上传图片和删除图片接口"></a>后端上传图片和删除图片接口</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> moment = <span class="built_in">require</span>(<span class="string">&#x27;moment&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> mkdirp = <span class="built_in">require</span>(<span class="string">&#x27;mkdirp&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Controller</span> = <span class="built_in">require</span>(<span class="string">&#x27;egg&#x27;</span>).<span class="property">Controller</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UploadController</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Controller</span> &#123;</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">upload</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; ctx &#125; = <span class="variable language_">this</span></span><br><span class="line">    <span class="keyword">let</span> file = ctx.<span class="property">request</span>.<span class="property">files</span>[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">let</span> uploadDir = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> f = fs.<span class="title function_">readFileSync</span>(file.<span class="property">filepath</span>)</span><br><span class="line">      <span class="comment">// 获取当前日期</span></span><br><span class="line">      <span class="keyword">let</span> day = <span class="title function_">moment</span>(<span class="keyword">new</span> <span class="title class_">Date</span>()).<span class="title function_">format</span>(<span class="string">&#x27;YYYYMMDD&#x27;</span>)</span><br><span class="line">      <span class="comment">//  创建图片保存的路径</span></span><br><span class="line">      <span class="keyword">let</span> dir = path.<span class="title function_">join</span>(<span class="variable language_">this</span>.<span class="property">config</span>.<span class="property">uploadDir</span>, day)</span><br><span class="line">      <span class="comment">// 毫秒数</span></span><br><span class="line">      <span class="keyword">let</span> date = <span class="title class_">Date</span>.<span class="title function_">now</span>()</span><br><span class="line">      <span class="comment">// 如果不存在目录</span></span><br><span class="line">      <span class="keyword">await</span> mkdirp.<span class="title function_">mkdirp</span>(dir)</span><br><span class="line">      <span class="comment">// 图片保存的路径</span></span><br><span class="line">      uploadDir = path.<span class="title function_">join</span>(dir, date + path.<span class="title function_">extname</span>(file.<span class="property">filename</span>))</span><br><span class="line">      <span class="comment">// 写入文件</span></span><br><span class="line">      fs.<span class="title function_">writeFileSync</span>(uploadDir, f)</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;上传错误&#x27;</span>, err)</span><br><span class="line">      ctx.<span class="property">body</span> = &#123;</span><br><span class="line">        <span class="attr">code</span>: <span class="number">500</span>,</span><br><span class="line">        <span class="attr">message</span>: <span class="string">&#x27;上传失败&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">      <span class="keyword">await</span> ctx.<span class="title function_">cleanupRequestFiles</span>()</span><br><span class="line">    &#125;</span><br><span class="line">    uploadDir = uploadDir.<span class="title function_">split</span>(path.<span class="property">sep</span>).<span class="title function_">join</span>(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">    ctx.<span class="property">body</span> = &#123;</span><br><span class="line">      <span class="attr">code</span>: <span class="number">200</span>,</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&#x27;上传成功&#x27;</span>,</span><br><span class="line">      <span class="attr">data</span>: uploadDir.<span class="title function_">replace</span>(<span class="regexp">/app/</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">deleteFile</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; ctx &#125; = <span class="variable language_">this</span></span><br><span class="line">    <span class="keyword">const</span> &#123; avatar &#125; = ctx.<span class="property">request</span>.<span class="property">body</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!avatar) &#123;</span><br><span class="line">      ctx.<span class="property">body</span> = &#123;</span><br><span class="line">        <span class="attr">code</span>: <span class="number">400</span>,</span><br><span class="line">        <span class="attr">message</span>: <span class="string">&#x27;参数错误&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="comment">// fileName 类似 &#x27;http://127.0.0.1:7001/public/upload/20240308/1709890350676.jpeg&#x27;</span></span><br><span class="line">      <span class="comment">// 拿到 /20240308/1709890350676.jpeg</span></span><br><span class="line">      <span class="keyword">const</span> fileName = avatar.<span class="title function_">split</span>(<span class="string">&#x27;/upload&#x27;</span>)[<span class="number">1</span>]</span><br><span class="line">      <span class="keyword">let</span> filePath = path.<span class="title function_">join</span>(<span class="string">&#x27;app/public/upload&#x27;</span>, fileName)</span><br><span class="line">      <span class="keyword">await</span> fs.<span class="property">promises</span>.<span class="title function_">unlink</span>(filePath)</span><br><span class="line">      ctx.<span class="property">body</span> = &#123;</span><br><span class="line">        <span class="attr">code</span>: <span class="number">200</span>,</span><br><span class="line">        <span class="attr">message</span>: <span class="string">&#x27;删除成功&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;文件删除失败&#x27;</span>, err)</span><br><span class="line">      ctx.<span class="property">body</span> = &#123;</span><br><span class="line">        <span class="attr">code</span>: <span class="number">500</span>,</span><br><span class="line">        <span class="attr">message</span>: <span class="string">&#x27;删除失败&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">UploadController</span></span><br></pre></td></tr></table></figure><h1 id="项目部署上线"><a href="#项目部署上线" class="headerlink" title="项目部署上线"></a>项目部署上线</h1><h2 id="后端上线"><a href="#后端上线" class="headerlink" title="后端上线"></a>后端上线</h2><h3 id="数据库部分"><a href="#数据库部分" class="headerlink" title="数据库部分"></a>数据库部分</h3><ol><li><a href="https://www.linjiangxiong.com/2022/06/10/how-to-install-mysql57-on-ubuntu_20_04/index.html">ubuntu 20 安装mysql</a> </li><li>导出本地数据库，sql文件， mysql workbench操作为， <code>Data Export</code> —-&gt; <code>选择你的数据库</code> —-&gt; <code>Export to Self-Contained File</code>   —-&gt;  <code>Include Create Schema</code>  —-&gt;  <code>Start Export</code></li><li>上传到服务器，<code>pscp -P 22 -i 密钥 -C -r 本地地址 用户名@远程地址:远程文件夹</code></li><li><a href="https://www.runoob.com/mysql/mysql-database-import.html">导入 sql</a></li></ol><h3 id="egg"><a href="#egg" class="headerlink" title="egg"></a>egg</h3><ol><li>上传到 github, 首先项目需要被 <code>git init</code></li><li><code>git clone</code></li><li><code>npm install --production</code></li><li><code>npm run start</code> 启动项目,这里遇到一个问题,<a href="https://stackoverflow.com/questions/30266221/node-js-mysql-error-connect-econnrefused">Node.js MySQL - Error: connect ECONNREFUSED</a>, 修改一下数据库配置就可以了</li><li>测试一下，接口是否能够正常访问，<code>curl -d &#39;接口数据&#39;   -X POST http://127.0.0.1:7001/接口地址</code></li><li>记得开安全组，7001</li></ol><h2 id="前端代码-打包上线"><a href="#前端代码-打包上线" class="headerlink" title="前端代码 打包上线"></a>前端代码 打包上线</h2><ol><li><code>pnpm run build</code>, 打包， 打包优化后续再做</li><li>上传代码，<code>putty的pscp</code> <code>pscp -P 22 -i 密钥 -C -r 本地地址 用户名@远程地址:远程文件夹</code></li><li>配置 <code>nginx</code> 设置转发</li></ol><h3 id="nginx-配置-css-js-访问不到"><a href="#nginx-配置-css-js-访问不到" class="headerlink" title="nginx 配置, css,js 访问不到"></a>nginx 配置, css,js 访问不到</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">  location / &#123;</span><br><span class="line">       root   /opt/xxxxxx/dist;</span><br><span class="line">        index  index.html; </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    location /bill/&#123;</span><br><span class="line">        alias /opt/bill_server/app/public/dist/;</span><br><span class="line">        index index.html;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当项目部署了太多的项目时，我们的 <code>react</code> 项目不太可能匹配 <code>/</code>, 而是要匹配 <code>/bill</code> 这个路径<br>当我们要去访问这个项目的时，访问地址是 <code>域名/bill/xxxx</code><br>当查看 <code>/var/log/nginx/error.log</code> 时, 发现我们的资源访问的地址却是 <code>域名/assets/index-xxx.css/域名/assets/index-xxx.js</code><br>而我们真正需要的访问的是 <code>域名/bill/assets/index-xxx.css/域名/bill/assets/index-xxx.js</code>,<br>而在 <code>vite</code> 中的这个方法是 <a href="https://cn.vitejs.dev/config/shared-options.html#base">base配置</a><br>简单一点的是做法是给 <code>package.json</code>的 <code>build</code> 改成 <code>&quot;build&quot;: &quot;tsc &amp;&amp; vite build --base=/bill/&quot;</code><br>虽然这一步做完了，但页面还是无法正常跳转的话，这是因为你的路由配置的有问题<br><a href="https://starlightunion.github.io/blog/other/aboutdeploy/sub-directory-deploy.html#%E4%B8%80%E3%80%81%E4%BF%AE%E6%94%B9%E8%B5%84%E6%BA%90%E8%B7%AF%E5%BE%84">参考：Nginx部署React项目至服务器二级目录实践</a><br>需要在路由中添加 <code>basename</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h1 id=&quot;项目背景&quot;&gt;&lt;a href=&quot;#项目背景&quot; class=&quot;head
      
    
    </summary>
    
      <category term="React" scheme="http://lhl02531.github.io/categories/React/"/>
    
      <category term="Egg.js" scheme="http://lhl02531.github.io/categories/React/Egg-js/"/>
    
      <category term="TypeScript" scheme="http://lhl02531.github.io/categories/React/Egg-js/TypeScript/"/>
    
    
      <category term="React" scheme="http://lhl02531.github.io/tags/React/"/>
    
      <category term="Egg.js" scheme="http://lhl02531.github.io/tags/Egg-js/"/>
    
      <category term="TypeScript" scheme="http://lhl02531.github.io/tags/TypeScript/"/>
    
  </entry>
  
  <entry>
    <title>webpack-vant-按需导入报错-ComponentsPlugin-is-not-a-function</title>
    <link href="http://lhl02531.github.io/2024/02/18/webpack-vant-%E6%8C%89%E9%9C%80%E5%AF%BC%E5%85%A5%E6%8A%A5%E9%94%99-ComponentsPlugin-is-not-a-function/"/>
    <id>http://lhl02531.github.io/2024/02/18/webpack-vant-按需导入报错-ComponentsPlugin-is-not-a-function/</id>
    <published>2024-02-18T13:51:51.000Z</published>
    <updated>2024-03-13T01:49:52.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>使用 <code>Vant</code>+<code>vue-cli</code>的学习项目中,<br>想使用 <code>unplugin-vue-components</code>,实现按需导入,报错 <code>TypeError: ComponentsPlugin is not a function</code></p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>官方文档已经说明了，<a href="https://vant-contrib.gitee.io/vant/#/zh-CN/quickstart#2.-pei-zhi-cha-jian">官方文档</a><br>相关 issue, <a href="https://github.com/youzan/vant/issues/12499">文档 unplugin-vue-components@0.26.0 引用方式有误 #12499</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; <span class="title class_">VantResolver</span> &#125; = <span class="built_in">require</span>(<span class="string">&#x27;@vant/auto-import-resolver&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">ComponentsPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;unplugin-vue-components/webpack&#x27;</span>);</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">configureWebpack</span>: &#123;</span><br><span class="line">    <span class="attr">plugins</span>: [</span><br><span class="line">      <span class="comment">//   请注意你项目 unplugin-vue-components 的版本，如果大于等于 0.26.0 你需要注释第一行，反之，则相反</span></span><br><span class="line">      <span class="comment">// 当 unplugin-vue-components 版本小于 0.26.0 时，使用以下写法</span></span><br><span class="line">      <span class="title class_">ComponentsPlugin</span>(&#123; <span class="attr">resolvers</span>: [<span class="title class_">VantResolver</span>()] &#125;),</span><br><span class="line">      <span class="comment">//当 unplugin-vue-components 版本大于等于 0.26.0 时，使用以下写法</span></span><br><span class="line">      <span class="title class_">ComponentsPlugin</span>.<span class="title function_">default</span>(&#123; <span class="attr">resolvers</span>: [<span class="title class_">VantResolver</span>()] &#125;),</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>请注意你项目 unplugin-vue-components 的版本，如果大于等于 0.26.0 你需要注释第一行，反之，则相反</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerli
      
    
    </summary>
    
      <category term="Vant" scheme="http://lhl02531.github.io/categories/Vant/"/>
    
    
      <category term="Vant" scheme="http://lhl02531.github.io/tags/Vant/"/>
    
  </entry>
  
  <entry>
    <title>windows下切换NodeJS版本</title>
    <link href="http://lhl02531.github.io/2024/02/18/windows%E4%B8%8B%E5%88%87%E6%8D%A2NodeJS%E7%89%88%E6%9C%AC/"/>
    <id>http://lhl02531.github.io/2024/02/18/windows下切换NodeJS版本/</id>
    <published>2024-02-18T13:49:15.000Z</published>
    <updated>2024-03-13T01:52:12.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="Windows-下使用多版本NodeJS"><a href="#Windows-下使用多版本NodeJS" class="headerlink" title="Windows 下使用多版本NodeJS"></a>Windows 下使用多版本NodeJS</h1><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><ol><li>Windows 下可以简单使用，不需要过多的安装和配置</li><li>需要使用多版本的 NodeJS 版本, 如果并不需要使用多版本，建议使用 LTS 版本，这篇文章写于24/2/15,当前版本是 20.x, 18.x 已经是维护版本。</li></ol><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><ol><li>下载多版本的 NodeJS 版本，<a href="https://repo.huaweicloud.com/nodejs/">华为云镜像站</a>，下载的时候选择<code>node-版本号-win-x64.7z 或.zip 后缀</code> 举例：<code>node-v12.17.0-win-x64.zip</code>或者<code>node-v12.17.0-win-x64.7z</code>压缩包，解压</li><li>创建系统环境变量<code>NODE_HOME</code>，路径是需要的 NodeJS 版本目录</li><li>将创建的这个变量添加到 <code>Path</code> 中</li><li>新开一个 cmd 窗口，验证版本是否生效 <code>node -v</code>, <code>npm -v</code></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h1 id=&quot;Windows-下使用多版本NodeJS&quot;&gt;&lt;a href=&quot;#W
      
    
    </summary>
    
      <category term="NodeJS" scheme="http://lhl02531.github.io/categories/NodeJS/"/>
    
    
      <category term="NodeJS" scheme="http://lhl02531.github.io/tags/NodeJS/"/>
    
  </entry>
  
  <entry>
    <title>记录-NodeJS项目部署</title>
    <link href="http://lhl02531.github.io/2024/02/18/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1NodeJS%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2/"/>
    <id>http://lhl02531.github.io/2024/02/18/记录一次NodeJS项目部署/</id>
    <published>2024-02-18T13:47:12.000Z</published>
    <updated>2024-02-18T13:48:54.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="服务器购买"><a href="#服务器购买" class="headerlink" title="服务器购买"></a>服务器购买</h1><p>略<br>鉴于我买的是阿里云的云服务器， 所以接下来的是阿里云的使用。<br>由于我使用的是密钥登录，所以需要配置<strong>密钥对</strong><br>密钥对会在下面讲，这里就不多说。<br>由于需要开发端口，所以需要配置<strong>安全组</strong></p><h1 id="putty"><a href="#putty" class="headerlink" title="putty"></a>putty</h1><p>可以通过阿里云提供的服务创建密钥对<br><a href="https://help.aliyun.com/document_detail/51793.html?spm=5176.2020520101keypair.help.13.26634df5k8AVA0#concept-wy4-th1-ydb">https://help.aliyun.com/document_detail/51793.html?spm=5176.2020520101keypair.help.13.26634df5k8AVA0#concept-wy4-th1-ydb</a><br>也可以通过<strong>PUTTYGEN.EXE</strong><br><a href="https://www.cnblogs.com/baker95935/p/9810986.html">https://www.cnblogs.com/baker95935/p/9810986.html</a><br>使用密钥对关联云服务器实例后， 需要<strong>重启一下云服务器</strong><br><a href="https://www.cnblogs.com/baker95935/p/9810435.html">https://www.cnblogs.com/baker95935/p/9810435.html</a><br>putty 设置 <strong>keep live</strong>，保证不会一下子就断连<br><a href="https://www.cnblogs.com/lovewhatIlove/p/16580861.html">https://www.cnblogs.com/lovewhatIlove/p/16580861.html</a></p><p>我的后端代码是通过私有git 仓库上传的同步的， 前端代码是生成 <strong>dist</strong>文件夹直接通过 <strong>PSCP</strong></p><p><code>pscp -P  22 -i C:\你的私钥文件 -C -r dist username@ip:云服务器的目录</code><br><a href="https://www.cnblogs.com/wxsj/p/9816588.html">https://www.cnblogs.com/wxsj/p/9816588.html</a><br><span id="more"></span></p><h1 id="服务器安装相应环境"><a href="#服务器安装相应环境" class="headerlink" title="服务器安装相应环境"></a>服务器安装相应环境</h1><h2 id="nodejs-安装"><a href="#nodejs-安装" class="headerlink" title="nodejs 安装"></a>nodejs 安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget https://nodejs.org/dist/v12.13.0/node-v12.13.0-linux-x64.tar.gz # 下载nodejs</span><br><span class="line">tar -zxvf node-v12.13.0-linux-x64.tar.gz # 解压</span><br><span class="line">mv node-v12.13.0-linux-x64 /opt/nodejs_12.16  # 移动目录</span><br><span class="line">ln -s /opt/nodejs_12.16/bin/node /usr/local/bin/node</span><br><span class="line">ln -s /opt/nodejs_12.16/bin/npm /usr/local/bin/npm # 软链接</span><br></pre></td></tr></table></figure><p>尝试一下<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><br><code>vim /etc/profile</code> 修改系统配置<br><code>source /etc/profile</code> 配置生效<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export NODE_HOME=/opt/nodejs12.16/</span><br><span class="line">export PATH=$PATH:$NODE_HOME/bin </span><br><span class="line">export NODE_PATH=$NODE_HOME/lib/node_modules</span><br></pre></td></tr></table></figure></p><h3 id="云服务器上更新-nodejs"><a href="#云服务器上更新-nodejs" class="headerlink" title="云服务器上更新 nodejs"></a>云服务器上更新 nodejs</h3><blockquote><p>2023-12-06 记录一下在云服务器上如何更新nodejs</p></blockquote><blockquote><p>新属性空值合并运算符 <code>??</code>在低版本nodejs 会报错，,<a href="https://www.mongodb.com/community/forums/t/this-options-options/216084">mongodb 需要更高的nodejs版本</a></p></blockquote><ol><li>重新下载一下，nodejs 版本， lts 长期版本已经是18.x 起，所以个人服务器建议至少要下载18.x版本</li><li>查看一下原来的 node,npm, <code>whereis npm</code>，<code>ls -l /usr/local/bin/node</code></li><li>删除原来的软链，<code>rm -rf /usr/local/bin/node</code>，<strong>记住不要最后加 /</strong></li><li>重新生成一下软链，<code>ln -s</code></li><li><code>vim /etc/profile</code> 修改配置， 修改原理 nodejs位置即可</li><li><code>source /etc/profile</code> 重新加载配置</li><li>配置镜像源</li></ol><h2 id="安装pm2"><a href="#安装pm2" class="headerlink" title="安装pm2"></a>安装pm2</h2><p>pm2 可以管理多个nodejs项目<br><code>npm install -g pm2</code> 这个会有一个问题，<br>如果你要运行 <em>pm2</em>的话，<br><code>node pm2</code>，<br>我的做法是<em>pm2</em> 软链接到 <code>/usr/bin/pm2</code>下</p><h3 id="重新配置"><a href="#重新配置" class="headerlink" title="重新配置"></a>重新配置</h3><blockquote><p>2023-12-06 记录一下在云服务器上如何更新pm2</p><ol><li>删除软链</li><li>npm install pm2, 建立软链</li></ol></blockquote><h3 id="pm2-log"><a href="#pm2-log" class="headerlink" title="pm2 log"></a>pm2 log</h3><p><code>pm2 log</code>, 可以查看日志<br><code>.pm2/logs/www-out.log</code>， 查看成功日志<br><code>.pm2/logs/www-error.log</code>， 查看失败日志</p><h2 id="MongoDB-安装"><a href="#MongoDB-安装" class="headerlink" title="MongoDB 安装"></a>MongoDB 安装</h2><p>MongoDB 安装都是安装这个<br><a href="https://www.runoob.com/mongodb/mongodb-linux-install.html">https://www.runoob.com/mongodb/mongodb-linux-install.html</a><br><strong>/opt/mongodb_4.2.23/config.conf</strong> 后台启动时的文件如下<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#日志文件位置</span><br><span class="line">logpath=/var/log/mongodb/mongodb.log</span><br><span class="line"># 以追加方式写入日志</span><br><span class="line">logappend=true</span><br><span class="line"># 是否以守护进程方式运行</span><br><span class="line">fork = true</span><br><span class="line"># 默认27017</span><br><span class="line">port = 27017</span><br><span class="line"># 数据库文件位置</span><br><span class="line">dbpath= /var/lib/mongodb</span><br><span class="line"># 启用定期记录CPU利用率和 I/O 等待</span><br><span class="line">cpu = true</span><br><span class="line"># 是否以安全认证方式运行，默认是不认证的非安全方式</span><br><span class="line">noauth = true</span><br><span class="line"># auth = true</span><br><span class="line"># 详细记录输出</span><br><span class="line">#verbose = true</span><br><span class="line">bind_ip = 0.0.0.0</span><br><span class="line"># 最大链接数</span><br><span class="line">maxConns = 100</span><br><span class="line"># 防止插入脏数据</span><br><span class="line">objcheck = true</span><br><span class="line">#pidfilepath：进程ID，没有指定则启动时候就没有PID文件</span><br><span class="line">pidfilepath = /var/run/mongo.pid</span><br></pre></td></tr></table></figure><br>启动和停止服务的命令<br><code>mongod --config /opt/mongodb_4.2.23/config.conf</code>, 启动<br><code>mongod --shutdown --config /opt/mongodb_4.2.23/config.conf</code>, 停止服务<br><code>mongo</code>, 进入服务器</p><h3 id="MongoDB-import-json-文件"><a href="#MongoDB-import-json-文件" class="headerlink" title="MongoDB import json 文件"></a>MongoDB import json 文件</h3><blockquote><p>本地导出json， 云上导入时报错,MongoDB Atlas mongoimport issues cannot decode array into a D<br>解决方案:<code>https://stackoverflow.com/questions/58150528/mongodb-atlas-mongoimport-issues-cannot-decode-array-into-a-d</code></p></blockquote><p><code>mongoimport --db [dbName] --collection [collectionName] --file [fileName] --jsonArray</code></p><h2 id="nginx-安装"><a href="#nginx-安装" class="headerlink" title="nginx 安装"></a>nginx 安装</h2><p><code>apt-get install -y nginx</code></p><p>新建配置文件<strong>/etc/nginx/conf.d/default.conf</strong>，<br>配置文件需要注意</p><ol><li>这个配置需要 <code>location //</code> ,<code>root /dist/</code> 目录和location 需要判断是否需要加上 <code>/</code></li><li><code>upstream ...</code> 这段代码是转发给后端接口 3000, 尝试通过 location 匹配但是没成功<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 转发到后端端口3000</span><br><span class="line">upstream koa.server&#123;</span><br><span class="line">   server localhost:3000;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  ip ; # //你的公网ip</span><br><span class="line">    # url 匹配 ip</span><br><span class="line">    location / &#123;</span><br><span class="line">       root   /dist/index; # 前端代码目录</span><br><span class="line">        index  index.html; #  //该文件为目录下的index.html文件</span><br><span class="line">    &#125;</span><br><span class="line">    # url 匹配 ip/mall</span><br><span class="line">    location /mall/&#123;</span><br><span class="line">        alias /opt/mall/dist/;</span><br><span class="line">        index index.html index.html;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="学会看日志排查问题"><a href="#学会看日志排查问题" class="headerlink" title="学会看日志排查问题"></a>学会看日志排查问题</h3><p>nginx 的日志在 <code>cat /var/log/nginx/access.log</code><br><code>/var/log/nginx/error.log</code><br>以下是我遇到配置mall项目时候遇到 403 的问题，<br>说明大概率是nginx 用户没有权限，<br>需要改变文件夹的权限 <code>chmod 755 path</code><br><a href="https://www.jianshu.com/p/78e5e233bc81">https://www.jianshu.com/p/78e5e233bc81</a></p><h3 id="alias-与-root的区别"><a href="#alias-与-root的区别" class="headerlink" title="alias 与 root的区别"></a>alias 与 root的区别</h3><blockquote><p><code>https://www.jianshu.com/p/a16936455018</code>, alias 与 root 的区别</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;服务器购买&quot;&gt;&lt;a href=&quot;#服务器购买&quot; class=&quot;headerlink&quot; title=&quot;服务器购买&quot;&gt;&lt;/a&gt;服务器购买&lt;/h1&gt;&lt;p&gt;略&lt;br&gt;鉴于我买的是阿里云的云服务器， 所以接下来的是阿里云的使用。&lt;br&gt;由于我使用的是密钥登录，所以需要配置&lt;strong&gt;密钥对&lt;/strong&gt;&lt;br&gt;密钥对会在下面讲，这里就不多说。&lt;br&gt;由于需要开发端口，所以需要配置&lt;strong&gt;安全组&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;putty&quot;&gt;&lt;a href=&quot;#putty&quot; class=&quot;headerlink&quot; title=&quot;putty&quot;&gt;&lt;/a&gt;putty&lt;/h1&gt;&lt;p&gt;可以通过阿里云提供的服务创建密钥对&lt;br&gt;&lt;a href=&quot;https://help.aliyun.com/document_detail/51793.html?spm=5176.2020520101keypair.help.13.26634df5k8AVA0#concept-wy4-th1-ydb&quot;&gt;https://help.aliyun.com/document_detail/51793.html?spm=5176.2020520101keypair.help.13.26634df5k8AVA0#concept-wy4-th1-ydb&lt;/a&gt;&lt;br&gt;也可以通过&lt;strong&gt;PUTTYGEN.EXE&lt;/strong&gt;&lt;br&gt;&lt;a href=&quot;https://www.cnblogs.com/baker95935/p/9810986.html&quot;&gt;https://www.cnblogs.com/baker95935/p/9810986.html&lt;/a&gt;&lt;br&gt;使用密钥对关联云服务器实例后， 需要&lt;strong&gt;重启一下云服务器&lt;/strong&gt;&lt;br&gt;&lt;a href=&quot;https://www.cnblogs.com/baker95935/p/9810435.html&quot;&gt;https://www.cnblogs.com/baker95935/p/9810435.html&lt;/a&gt;&lt;br&gt;putty 设置 &lt;strong&gt;keep live&lt;/strong&gt;，保证不会一下子就断连&lt;br&gt;&lt;a href=&quot;https://www.cnblogs.com/lovewhatIlove/p/16580861.html&quot;&gt;https://www.cnblogs.com/lovewhatIlove/p/16580861.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我的后端代码是通过私有git 仓库上传的同步的， 前端代码是生成 &lt;strong&gt;dist&lt;/strong&gt;文件夹直接通过 &lt;strong&gt;PSCP&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pscp -P  22 -i C:\你的私钥文件 -C -r dist username@ip:云服务器的目录&lt;/code&gt;&lt;br&gt;&lt;a href=&quot;https://www.cnblogs.com/wxsj/p/9816588.html&quot;&gt;https://www.cnblogs.com/wxsj/p/9816588.html&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="项目部署" scheme="http://lhl02531.github.io/categories/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2/"/>
    
      <category term="NodeJS" scheme="http://lhl02531.github.io/categories/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2/NodeJS/"/>
    
    
      <category term="NodeJS" scheme="http://lhl02531.github.io/tags/NodeJS/"/>
    
      <category term="项目部署" scheme="http://lhl02531.github.io/tags/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
  <entry>
    <title>记录-云开发遇到的问题和解决方案</title>
    <link href="http://lhl02531.github.io/2023/12/06/%E8%AE%B0%E5%BD%95-%E4%BA%91%E5%BC%80%E5%8F%91%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://lhl02531.github.io/2023/12/06/记录-云开发遇到的问题和解决方案/</id>
    <published>2023-12-06T13:46:06.000Z</published>
    <updated>2023-12-06T15:59:02.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="云开发"><a href="#云开发" class="headerlink" title="云开发"></a>云开发</h1><h2 id="技术产生背景"><a href="#技术产生背景" class="headerlink" title="技术产生背景"></a>技术产生背景</h2><p><a href="https://zhuanlan.zhihu.com/p/69774299">云计算</a></p><p>Saas: 常见软件<br>Pass: <a href="https://mp.weixin.qq.com/s/ibaliVf9lGSXEiN0ldYaug">钉钉</a>,云服务器，阿里云，腾讯云。 amazon ec2, amzure<br>Lass: 算力，存储，网络，<a href="https://mp.weixin.qq.com/s/XqUIhlUeWaPABNk0Mc4Qxg">存储</a><br>Serverless(faas+baas): <a href="https://juejin.cn/post/6844903904224903181">Serverless</a></p><h2 id="一些概念"><a href="#一些概念" class="headerlink" title="一些概念"></a>一些概念</h2><p><a href="https://developers.weixin.qq.com/miniprogram/dev/wxcloud/basis/capabilities.html#%E6%95%B0%E6%8D%AE%E5%BA%93">云数据库</a>， 可以类比MongoDB,可以通过 http api 访问操作</p><p><a href="https://developers.weixin.qq.com/miniprogram/dev/wxcloud/basis/concepts/environment.html">环境</a></p><p><a href="https://developers.weixin.qq.com/miniprogram/dev/wxcloud/basis/capabilities.html#%E4%BA%91%E5%87%BD%E6%95%B0">云函数</a></p><h3 id="官方-quickStart"><a href="#官方-quickStart" class="headerlink" title="官方 quickStart"></a>官方 quickStart</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 官方 quickStart 例子</span></span><br><span class="line"><span class="comment">// /getOpenId/index</span></span><br><span class="line"><span class="keyword">const</span> cloud = <span class="built_in">require</span>(<span class="string">&#x27;wx-server-sdk&#x27;</span>);</span><br><span class="line"></span><br><span class="line">cloud.<span class="title function_">init</span>(&#123;</span><br><span class="line">  <span class="attr">env</span>: cloud.<span class="property">DYNAMIC_CURRENT_ENV</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取openId云函数入口函数</span></span><br><span class="line"><span class="built_in">exports</span>.<span class="property">main</span> = <span class="keyword">async</span> (event, context) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 获取基础信息</span></span><br><span class="line">  <span class="keyword">const</span> wxContext = cloud.<span class="title function_">getWXContext</span>();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">openid</span>: wxContext.<span class="property">OPENID</span>,</span><br><span class="line">    <span class="attr">appid</span>: wxContext.<span class="property">APPID</span>,</span><br><span class="line">    <span class="attr">unionid</span>: wxContext.<span class="property">UNIONID</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// /selectRecord/index.js</span></span><br><span class="line"><span class="keyword">const</span> cloud = <span class="built_in">require</span>(<span class="string">&#x27;wx-server-sdk&#x27;</span>);</span><br><span class="line"></span><br><span class="line">cloud.<span class="title function_">init</span>(&#123;</span><br><span class="line">  <span class="attr">env</span>: cloud.<span class="property">DYNAMIC_CURRENT_ENV</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">const</span> db = cloud.<span class="title function_">database</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询数据库集合云函数入口函数</span></span><br><span class="line"><span class="built_in">exports</span>.<span class="property">main</span> = <span class="keyword">async</span> (event, context) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 返回数据库查询结果</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">await</span> db.<span class="title function_">collection</span>(<span class="string">&#x27;sales&#x27;</span>).<span class="title function_">get</span>();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><span id="more"></span><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> getOpenId = <span class="built_in">require</span>(<span class="string">&#x27;./getOpenId/index&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> selectRecord = <span class="built_in">require</span>(<span class="string">&#x27;./selectRecord/index&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 云函数入口函数</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  通过传递过来的 type 切换</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="built_in">exports</span>.<span class="property">main</span> = <span class="keyword">async</span> (event, context) =&gt; &#123;</span><br><span class="line">  <span class="keyword">switch</span> (event.<span class="property">type</span>) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;getOpenId&#x27;</span>:</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">await</span> getOpenId.<span class="title function_">main</span>(event, context);</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;selectRecord&#x27;</span>:</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">await</span> selectRecord.<span class="title function_">main</span>(event, context);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>小程序请求</strong><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">wx.<span class="property">cloud</span>.<span class="title function_">callFunction</span>(&#123;</span><br><span class="line">       <span class="attr">name</span>: <span class="string">&#x27;quickStart&#x27;</span>, <span class="comment">// 请求的一个云函数</span></span><br><span class="line">       <span class="attr">data</span>:&#123; <span class="attr">type</span>: <span class="string">&#x27;getItemByItemName&#x27;</span>, title&#125;   <span class="comment">// data 对应 event, type 是具体那个接口</span></span><br><span class="line">   &#125;).<span class="title function_">then</span>( <span class="function"><span class="params">resp</span> =&gt;</span>&#123;</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;返回结果&#x27;</span>, resp)</span><br><span class="line">       </span><br><span class="line">   &#125;).<span class="title function_">catch</span>( <span class="function"><span class="params">error</span> =&gt;</span>&#123;</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;异常&#x27;</span>,error )</span><br><span class="line">      </span><br><span class="line">   &#125;)</span><br></pre></td></tr></table></figure></p><h1 id="云数据库"><a href="#云数据库" class="headerlink" title="云数据库"></a>云数据库</h1><h3 id="云函数本地调试"><a href="#云函数本地调试" class="headerlink" title="云函数本地调试"></a>云函数本地调试</h3><p>云函数本地调试， 有些Bug，遇到问题重启即可。<a href="https://developers.weixin.qq.com/miniprogram/dev/wxcloud/guide/debug.html#%E4%BA%91%E5%87%BD%E6%95%B0%E6%9C%AC%E5%9C%B0%E8%B0%83%E8%AF%95">云函数本地调试</a></p><h3 id="控制台数据库高级操作"><a href="#控制台数据库高级操作" class="headerlink" title="控制台数据库高级操作"></a>控制台数据库高级操作</h3><p>云开发控制台-&gt; 高级操作， <a href="https://developers.weixin.qq.com/miniprogram/dev/wxcloud/guide/database/console-dbscript.html#%E6%8E%A7%E5%88%B6%E5%8F%B0%E6%95%B0%E6%8D%AE%E5%BA%93%E9%AB%98%E7%BA%A7%E6%93%8D%E4%BD%9C">控制台数据库高级操作</a></p><h3 id="日期字段的处理"><a href="#日期字段的处理" class="headerlink" title="日期字段的处理"></a>日期字段的处理</h3><p>日期 最好是转成事件戳进行存储， <code>new Date().getTime()</code>, 这样按照 <code>orderBy(日期字段, desc | asc)</code></p><h3 id="记录一下使用过的SQL语句"><a href="#记录一下使用过的SQL语句" class="headerlink" title="记录一下使用过的SQL语句"></a>记录一下使用过的SQL语句</h3><h4 id="promise-风格"><a href="#promise-风格" class="headerlink" title="promise 风格"></a>promise 风格</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> db = wx.<span class="property">cloud</span>.<span class="title function_">database</span>()</span><br><span class="line">db.<span class="title function_">collection</span>(<span class="string">&#x27;todos&#x27;</span>).<span class="title function_">where</span>(&#123;</span><br><span class="line">  <span class="attr">_openid</span>: <span class="string">&#x27;xxx&#x27;</span> <span class="comment">// 填入当前用户 openid</span></span><br><span class="line">&#125;).<span class="title function_">count</span>().<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="property">total</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// then 返回查询后的字段</span></span><br></pre></td></tr></table></figure><h4 id="回调-风格"><a href="#回调-风格" class="headerlink" title="回调 风格"></a>回调 风格</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> db = wx.<span class="property">cloud</span>.<span class="title function_">database</span>()</span><br><span class="line">db.<span class="title function_">collection</span>(<span class="string">&#x27;todos&#x27;</span>).<span class="title function_">where</span>(&#123;</span><br><span class="line">  <span class="attr">_openid</span>: <span class="string">&#x27;xxx&#x27;</span> <span class="comment">// 填入当前用户 openid</span></span><br><span class="line">&#125;).<span class="title function_">count</span>(&#123;</span><br><span class="line">  <span class="attr">success</span>: <span class="keyword">function</span>(<span class="params">res</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="property">total</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">fail</span>: <span class="variable language_">console</span>.<span class="property">error</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="db-collection-count"><a href="#db-collection-count" class="headerlink" title="db.collection().count()"></a>db.collection().count()</h4><p><a href="https://developers.weixin.qq.com/miniprogram/dev/wxcloud/reference-sdk-api/database/collection/Collection.count.html">count</a></p><p><code>db.collection(&#39;item&#39;).count().then( e=&gt; e.total)</code></p><h4 id="db-collection-get"><a href="#db-collection-get" class="headerlink" title="db.collection().get()"></a>db.collection().get()</h4><p><a href="https://developers.weixin.qq.com/minigame/dev/wxcloud/reference-sdk-api/database/collection/Collection.get.html">get</a></p><p><code>db.collection(&#39;item&#39;).limit(pageSize).skip(skipIndex).get().then( e =&gt; e.data)</code></p><h4 id="db-command"><a href="#db-command" class="headerlink" title="db.command"></a>db.command</h4><p><code>const _  = db.command</code></p><p><code>_.eq</code>， 是否相等<br><code>_.push</code>，<a href="https://developers.weixin.qq.com/minigame/dev/wxcloud/reference-sdk-api/database/command/Command.push.html">数组push</a><br><code>_.pull</code>，<a href="https://developers.weixin.qq.com/minigame/dev/wxcloud/reference-sdk-api/database/command/Command.pull.html">数组匹配元素移除</a></p><h4 id="db-collection-aggregate"><a href="#db-collection-aggregate" class="headerlink" title="db.collection().aggregate()"></a>db.collection().aggregate()</h4><p><a href="https://developers.weixin.qq.com/minigame/dev/wxcloud/reference-sdk-api/database/collection/Collection.aggregate.html">聚合 aggregate</a><br><a href="https://developers.weixin.qq.com/minigame/dev/wxcloud/reference-sdk-api/database/collection/Collection.aggregate.html">match 根据条件过滤文档</a><br><a href="https://developers.weixin.qq.com/minigame/dev/wxcloud/reference-sdk-api/database/aggregate/Aggregate.sample.html#%E7%A4%BA%E4%BE%8B">sample 随机从文档中选取指定数量的记录</a><br><code>db.collection(&#39;item&#39;).aggregate().match(&#123; publish:_.eq(1) &#125;).sample(&#123; size:1 &#125;).end()</code><br><strong>在集合中发起聚合操作，选取1条 publish字段等于1的记录返回</strong></p><h4 id="db-collection-update"><a href="#db-collection-update" class="headerlink" title="db.collection().update()"></a>db.collection().update()</h4><p><code>db.collection(&#39;user&#39;).where(&#123;&#125;).update(&#123; data: &#123; &#125;)&#125;&#125;)</code></p><h3 id="HTTP-API-请求"><a href="#HTTP-API-请求" class="headerlink" title="HTTP API 请求"></a>HTTP API 请求</h3><p><a href="https://developers.weixin.qq.com/minigame/dev/wxcloud/reference-http-api/">https://developers.weixin.qq.com/minigame/dev/wxcloud/reference-http-api/</a></p><ol><li>获取 accesstoken</li><li>触发云函数消耗资源太多，建议后台访问云数据库时换成 http api 请求</li></ol><h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><p>以 <a href="https://developers.weixin.qq.com/minigame/dev/wxcloud/reference-http-api/database/databaseQuery.html">查询api为例</a></p><ol><li>sql拼接需要注意</li><li>返回结果是字符串，可以按照自己需要转成 对象</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;云开发&quot;&gt;&lt;a href=&quot;#云开发&quot; class=&quot;headerlink&quot; title=&quot;云开发&quot;&gt;&lt;/a&gt;云开发&lt;/h1&gt;&lt;h2 id=&quot;技术产生背景&quot;&gt;&lt;a href=&quot;#技术产生背景&quot; class=&quot;headerlink&quot; title=&quot;技术产生背景&quot;&gt;&lt;/a&gt;技术产生背景&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/69774299&quot;&gt;云计算&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Saas: 常见软件&lt;br&gt;Pass: &lt;a href=&quot;https://mp.weixin.qq.com/s/ibaliVf9lGSXEiN0ldYaug&quot;&gt;钉钉&lt;/a&gt;,云服务器，阿里云，腾讯云。 amazon ec2, amzure&lt;br&gt;Lass: 算力，存储，网络，&lt;a href=&quot;https://mp.weixin.qq.com/s/XqUIhlUeWaPABNk0Mc4Qxg&quot;&gt;存储&lt;/a&gt;&lt;br&gt;Serverless(faas+baas): &lt;a href=&quot;https://juejin.cn/post/6844903904224903181&quot;&gt;Serverless&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;一些概念&quot;&gt;&lt;a href=&quot;#一些概念&quot; class=&quot;headerlink&quot; title=&quot;一些概念&quot;&gt;&lt;/a&gt;一些概念&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://developers.weixin.qq.com/miniprogram/dev/wxcloud/basis/capabilities.html#%E6%95%B0%E6%8D%AE%E5%BA%93&quot;&gt;云数据库&lt;/a&gt;， 可以类比MongoDB,可以通过 http api 访问操作&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.weixin.qq.com/miniprogram/dev/wxcloud/basis/concepts/environment.html&quot;&gt;环境&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developers.weixin.qq.com/miniprogram/dev/wxcloud/basis/capabilities.html#%E4%BA%91%E5%87%BD%E6%95%B0&quot;&gt;云函数&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;官方-quickStart&quot;&gt;&lt;a href=&quot;#官方-quickStart&quot; class=&quot;headerlink&quot; title=&quot;官方 quickStart&quot;&gt;&lt;/a&gt;官方 quickStart&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 官方 quickStart 例子&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// /getOpenId/index&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; cloud = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;#x27;wx-server-sdk&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cloud.&lt;span class=&quot;title function_&quot;&gt;init&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;env&lt;/span&gt;: cloud.&lt;span class=&quot;property&quot;&gt;DYNAMIC_CURRENT_ENV&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 获取openId云函数入口函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;exports&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;main&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; (event, context) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 获取基础信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; wxContext = cloud.&lt;span class=&quot;title function_&quot;&gt;getWXContext&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;openid&lt;/span&gt;: wxContext.&lt;span class=&quot;property&quot;&gt;OPENID&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;appid&lt;/span&gt;: wxContext.&lt;span class=&quot;property&quot;&gt;APPID&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;unionid&lt;/span&gt;: wxContext.&lt;span class=&quot;property&quot;&gt;UNIONID&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// /selectRecord/index.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; cloud = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;#x27;wx-server-sdk&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cloud.&lt;span class=&quot;title function_&quot;&gt;init&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;env&lt;/span&gt;: cloud.&lt;span class=&quot;property&quot;&gt;DYNAMIC_CURRENT_ENV&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; db = cloud.&lt;span class=&quot;title function_&quot;&gt;database&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 查询数据库集合云函数入口函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;exports&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;main&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; (event, context) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 返回数据库查询结果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; db.&lt;span class=&quot;title function_&quot;&gt;collection&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;#x27;sales&amp;#x27;&lt;/span&gt;).&lt;span class=&quot;title function_&quot;&gt;get&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="微信云开发" scheme="http://lhl02531.github.io/categories/%E5%BE%AE%E4%BF%A1%E4%BA%91%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="微信云开发" scheme="http://lhl02531.github.io/tags/%E5%BE%AE%E4%BF%A1%E4%BA%91%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>小程序开发-几句话推荐</title>
    <link href="http://lhl02531.github.io/2022/12/07/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91%E8%AE%B0%E5%BD%95/"/>
    <id>http://lhl02531.github.io/2022/12/07/小程序开发记录/</id>
    <published>2022-12-07T10:04:27.000Z</published>
    <updated>2023-12-06T13:42:50.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="小程序开发-几句话推荐"><a href="#小程序开发-几句话推荐" class="headerlink" title="小程序开发-几句话推荐"></a>小程序开发-几句话推荐</h1><h2 id="项目设计"><a href="#项目设计" class="headerlink" title="项目设计"></a>项目设计</h2><h3 id="项目来源"><a href="#项目来源" class="headerlink" title="项目来源"></a>项目来源</h3><p><a href="https://www.bilibili.com/video/BV1t84y1q7Xn/?spm_id_from=333.999.0.0&amp;vd_source=e8e1b6de93e68d8ce8ab44afe5802a40">展哥更新了-字醒app</a><br><a href="https://juejin.cn/post/7091582094614691854">几行字</a></p><h3 id="技术选型"><a href="#技术选型" class="headerlink" title="技术选型"></a>技术选型</h3><p>uniapp + 微信云开发, uniapp 只开发微信端， 微信云开发省去搭建后端项目的繁琐。</p><span id="more"></span><h2 id="数据库设计"><a href="#数据库设计" class="headerlink" title="数据库设计"></a>数据库设计</h2><p>按照非关系型数据库设计，可以参考<br><a href="https://www.cnblogs.com/meloncodezhang/p/13883234.html">Mongodb 数据库表格设计原则</a><br><a href="https://www.jianshu.com/p/9ff938e3a498">数据库ER图基础概念整理</a><br><a href="https://segmentfault.com/q/1010000013583930">表设计</a></p><p>云数据库跟 mongodb很相似，云函数只有两个集合， item 和 user<br><img src="https://raw.githubusercontent.com/lhl02531/my_image_hosting/main/oneword_db.png" alt=""></p><p><strong>item 集合</strong><br><code>&quot;publish&quot;: &quot;-1/1&quot;, // 发布状态</code><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;_id&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;author&quot;</span>:<span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;content&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;createTime&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;updateTime&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;publish&quot;</span>: <span class="string">&quot;-1/1&quot;</span>, </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p><strong>user集合</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;collects&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> </span><br><span class="line">        <span class="punctuation">&#123;</span> <span class="attr">&quot;item._id&quot;</span><span class="punctuation">:</span> <span class="attr">&quot;author&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;content&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> </span><br><span class="line">        <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;likes&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> </span><br><span class="line">        <span class="punctuation">&#123;</span> <span class="attr">&quot;item._id&quot;</span><span class="punctuation">:</span> <span class="attr">&quot;author&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;content&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span> </span><br><span class="line">        <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;openid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;firstlogin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="难点"><a href="#难点" class="headerlink" title="难点"></a>难点</h2><h3 id="uniapp"><a href="#uniapp" class="headerlink" title="uniapp"></a>uniapp</h3><h4 id="uniapp-的熟悉度"><a href="#uniapp-的熟悉度" class="headerlink" title="uniapp 的熟悉度"></a>uniapp 的熟悉度</h4><p> uniapp 和 Vue 的 熟悉程度还是不够，磕磕碰碰的,尤其是对接 微信云开发这段，而且官方文档也有省略。</p><h4 id="uniapp-插件使用"><a href="#uniapp-插件使用" class="headerlink" title="uniapp 插件使用"></a>uniapp 插件使用</h4><p>使用到一个uniapp的插件<a href="http://www.mescroll.com/uni.html">mescroll</a><br>看了好久，不是很明白，上手了发现它封装的很好，我使用了它给的一个例子就写完了。</p><h3 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h3><h4 id="Vue-中写节流函数"><a href="#Vue-中写节流函数" class="headerlink" title="Vue 中写节流函数"></a>Vue 中写节流函数</h4><p>这里提供一个Vue 中写节流函数的写法<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; throttle &#125; <span class="keyword">from</span> <span class="string">&#x27;@/utils/utils.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span><br><span class="line">    <span class="attr">methods</span>:&#123;</span><br><span class="line">        <span class="attr">handleClickLove</span>: <span class="title function_">throttle</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;, <span class="number">1000</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="云开发"><a href="#云开发" class="headerlink" title="云开发"></a>云开发</h3><h4 id="对接云函数"><a href="#对接云函数" class="headerlink" title="对接云函数"></a>对接云函数</h4><p><a href="https://blog.csdn.net/weixin_44021659/article/details/105493189">参考1</a><br><a href="https://uniapp.dcloud.net.cn/collocation/manifest.html#cloudfunctionroot">官方文档</a></p><h4 id="在-user-likes-数组中-删除对应的-id"><a href="#在-user-likes-数组中-删除对应的-id" class="headerlink" title="在 user.likes 数组中 删除对应的 id"></a>在 user.likes 数组中 删除对应的 id</h4><blockquote><p>请注意这个方法在微信云数据库的控制台测试的时候是报异常的，只能在云函数中使用<br><a href="https://developers.weixin.qq.com/miniprogram/dev/wxcloud/reference-sdk-api/database/command/Command.pull.html">Command.pull</a></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> db = cloud.<span class="title function_">database</span>()</span><br><span class="line"><span class="keyword">const</span> _  = db.<span class="property">command</span></span><br><span class="line"><span class="comment">// 中间省略</span></span><br><span class="line"><span class="comment">// 下面是查询语句</span></span><br><span class="line"><span class="keyword">await</span>  db.<span class="title function_">collection</span>(<span class="string">&#x27;user&#x27;</span>)</span><br><span class="line">        .<span class="title function_">where</span>(&#123; openid &#125;)</span><br><span class="line">        .<span class="title function_">update</span>(&#123;</span><br><span class="line">            <span class="attr">data</span>: &#123;</span><br><span class="line">                <span class="attr">likes</span>: _.<span class="title function_">pull</span>(&#123;</span><br><span class="line">                    <span class="string">&quot;_id&quot;</span>: _.<span class="title function_">eq</span>(recommend.<span class="property">_id</span>)</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure><h4 id="随机集合中的几个数据"><a href="#随机集合中的几个数据" class="headerlink" title="随机集合中的几个数据"></a>随机集合中的几个数据</h4><blockquote><p>因为 mongodb 和 云数据库都是 nosql 类型的数据库， 所以概念上类似<br>当你想遇到不会的 sql 语法，查一下 mongodb 是如何实现的，然后再找找看微信的文档</p><p><a href="https://www.runoob.com/mongodb/mongodb-aggregate.html">MongoDB 聚合</a><br><a href="https://blog.chenxiaosheng.com/posts/2018-05-24/mongodb-random-query.html">mongodb-random-query</a><br><a href="https://developers.weixin.qq.com/miniprogram/dev/wxcloud/reference-sdk-api/database/collection/Collection.aggregate.html">Collection.aggregate</a></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> db = cloud.<span class="title function_">database</span>()</span><br><span class="line"><span class="keyword">const</span> _  = db.<span class="property">command</span></span><br><span class="line"><span class="comment">// 中间省略</span></span><br><span class="line"><span class="comment">// 下面是查询语句</span></span><br><span class="line"><span class="keyword">await</span>  db.<span class="title function_">collection</span>(<span class="string">&#x27;item&#x27;</span>)</span><br><span class="line">.<span class="title function_">aggregate</span>()</span><br><span class="line">.<span class="title function_">sample</span>(&#123; <span class="attr">size</span>:<span class="number">1</span> &#125;)</span><br><span class="line">.<span class="title function_">end</span>()</span><br></pre></td></tr></table></figure><h2 id="后台管理系统请求"><a href="#后台管理系统请求" class="headerlink" title="后台管理系统请求"></a>后台管理系统请求</h2><h3 id="每隔2小时获取新微信请求-token"><a href="#每隔2小时获取新微信请求-token" class="headerlink" title="每隔2小时获取新微信请求 token"></a>每隔2小时获取新微信请求 token</h3><p><a href="https://developers.weixin.qq.com/miniprogram/dev/OpenApiDoc/mp-access-token/getAccessToken.html">微信文档-获取接口调用凭据</a>,<br><strong>需要APPID和APPSECRET</strong><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> axios = <span class="built_in">require</span>(<span class="string">&quot;axios&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; <span class="variable constant_">APPID</span>, <span class="variable constant_">APPSECRET</span> &#125; = <span class="built_in">require</span>(<span class="string">&quot;../config&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> logger = <span class="built_in">require</span>(<span class="string">&quot;./log4j&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">URL</span> = <span class="string">`https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=<span class="subst">$&#123;APPID&#125;</span>&amp;secret=<span class="subst">$&#123;APPSECRET&#125;</span>`</span>;</span><br><span class="line"><span class="keyword">const</span> fName = path.<span class="title function_">resolve</span>(__dirname, <span class="string">&quot;./accessToken.json&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 请求并更新 accessToken</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">updateAccessToken</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> axios</span><br><span class="line">    .<span class="title function_">get</span>(<span class="variable constant_">URL</span>)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">&#123; data &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> &#123; access_token &#125; = data;</span><br><span class="line">      <span class="keyword">if</span> (access_token) &#123;</span><br><span class="line">        fs.<span class="title function_">writeFileSync</span>(</span><br><span class="line">          fName,</span><br><span class="line">          <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123;</span><br><span class="line">            access_token,</span><br><span class="line">            <span class="attr">createTime</span>: <span class="keyword">new</span> <span class="title class_">Date</span>(),</span><br><span class="line">          &#125;)</span><br><span class="line">        );</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;access token 请求不成功&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="keyword">async</span> (err) =&gt; &#123;</span><br><span class="line">      logger.<span class="title function_">error</span>(err);</span><br><span class="line">      <span class="keyword">await</span> <span class="title function_">updateAccessToken</span>();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 从文件中读 accessToken</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getAccessToken</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// const readRes = fs.readFileSync(fName, &quot;utf-8&quot;);</span></span><br><span class="line">    <span class="keyword">const</span> readObj = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(fs.<span class="title function_">readFileSync</span>(fName, <span class="string">&quot;utf-8&quot;</span>));</span><br><span class="line">    <span class="keyword">const</span> createTime = <span class="keyword">new</span> <span class="title class_">Date</span>(readObj.<span class="property">createTime</span>).<span class="title function_">getTime</span>();</span><br><span class="line">    <span class="keyword">const</span> nowTime = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>();</span><br><span class="line">    <span class="comment">// accessToken 过期</span></span><br><span class="line">    <span class="keyword">if</span> ((nowTime - createTime) / (<span class="number">3600</span> * <span class="number">1000</span>) &gt;= <span class="number">2</span>) &#123;</span><br><span class="line">      <span class="keyword">await</span> <span class="title function_">updateAccessToken</span>();</span><br><span class="line">      <span class="keyword">await</span> <span class="title function_">getAccessToken</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> readObj.<span class="property">access_token</span>;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    logger.<span class="title function_">error</span>(error);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">updateAccessToken</span>();</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">getAccessToken</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 定时任务更新 accessToken</span></span><br><span class="line"><span class="built_in">setInterval</span>(<span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">  <span class="keyword">await</span> <span class="title function_">updateAccessToken</span>();</span><br><span class="line">&#125;, <span class="number">7200</span> * <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = getAccessToken;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h3 id="通过HTTP-API-访问-云数据库"><a href="#通过HTTP-API-访问-云数据库" class="headerlink" title="通过HTTP API 访问 云数据库"></a>通过HTTP API 访问 云数据库</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// axios 实例</span></span><br><span class="line"><span class="keyword">const</span> instance = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="attr">baseURL</span>: <span class="string">&quot;https://api.weixin.qq.com/tcb&quot;</span>,</span><br><span class="line">  <span class="attr">timeout</span>: <span class="number">5000</span>,</span><br><span class="line">&#125;);</span><br><span class="line">instance.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(<span class="keyword">async</span> (res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> &#123; errcode &#125; = res.<span class="property">data</span>;</span><br><span class="line">  <span class="comment">//  请求成功返回的数据 &#123; errcode:0, data:&#123;&#125;&#125;</span></span><br><span class="line">  <span class="keyword">if</span> (errcode === <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="property">data</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(res.<span class="property">data</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 云开发的环境id</span></span><br><span class="line"><span class="keyword">const</span> env = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 以下是获取 http api 例子</span></span><br><span class="line"><span class="comment">// 通过查询拿到全部数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 微信文档,https://developers.weixin.qq.com/minigame/dev/wxcloud/reference-http-api/database/databaseQuery.html</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&quot;/getAll&quot;</span>, <span class="keyword">async</span> <span class="keyword">function</span> (<span class="params">ctx, next</span>) &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> &#123; page, skipIndex &#125; = <span class="title function_">pager</span>(ctx.<span class="property">request</span>.<span class="property">query</span>);</span><br><span class="line">    <span class="keyword">const</span> &#123; flag, author, content, publish &#125; = ctx.<span class="property">request</span>.<span class="property">query</span>;</span><br><span class="line">    <span class="comment">// POST https://api.weixin.qq.com/tcb/databasequery?access_token=ACCESS_TOKEN</span></span><br><span class="line">    <span class="comment">// 需要拿到 三个参数，accessToken,env,query ( 数据查询语句 )</span></span><br><span class="line">    <span class="comment">// 1. 拿到 accessToken</span></span><br><span class="line">    <span class="keyword">let</span> accessToken = <span class="keyword">await</span> <span class="title function_">getAccessToken</span>();</span><br><span class="line">    <span class="comment">// https://api.weixin.qq.com/tcb/ + url(databasequery)</span></span><br><span class="line">    <span class="keyword">const</span> url = <span class="string">&quot;databasequery&quot;</span>;</span><br><span class="line">    <span class="comment">// 3. 拼接 query 语句，我并没有选择模板字符串， 而是选择了字符串拼接</span></span><br><span class="line">    <span class="keyword">let</span> query = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (author) query += <span class="string">&#x27;&quot;author&quot;: &quot;&#x27;</span> + author + <span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (content)</span><br><span class="line">      query +=</span><br><span class="line">        <span class="string">&#x27;,&quot;content&quot;: db.RegExp(&#123; &quot;regexp&quot;: &quot;&#x27;</span> + content + <span class="string">&#x27;&quot; ,options: &quot;i&quot; &#125;) &#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (publish !== <span class="number">0</span>) query += <span class="string">&#x27;,&quot;publish&quot;: &#x27;</span> + publish;</span><br><span class="line">    <span class="comment">// 我这里需要两种根据条件选择两种语句</span></span><br><span class="line">    <span class="keyword">const</span> querySql = <span class="string">`db.collection(&#x27;item&#x27;).limit(<span class="subst">$&#123;page.pageSize&#125;</span>).skip(<span class="subst">$&#123;skipIndex&#125;</span>).get()`</span>;</span><br><span class="line">    <span class="keyword">const</span> querySqlWithParm = <span class="string">`db.collection(&#x27;item&#x27;).where(&#123;<span class="subst">$&#123;query&#125;</span>&#125;).limit(<span class="subst">$&#123;page.pageSize&#125;</span>).skip(<span class="subst">$&#123;skipIndex&#125;</span>).get()`</span>;</span><br><span class="line">    <span class="keyword">const</span> sql = flag ? querySqlWithParm : querySql;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> res = <span class="keyword">await</span> instance.<span class="title function_">post</span>(</span><br><span class="line">      url,</span><br><span class="line">      &#123;</span><br><span class="line">        env,</span><br><span class="line">        <span class="attr">query</span>: sql,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">params</span>: &#123;</span><br><span class="line">          <span class="attr">access_token</span>: accessToken,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;</span><br><span class="line">    );</span><br><span class="line">    <span class="comment">// result.data 是 字符串，需要转成对象</span></span><br><span class="line">    <span class="keyword">const</span> result = &#123;</span><br><span class="line">      <span class="attr">data</span>: res.<span class="property">data</span>.<span class="title function_">map</span>(<span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">        e = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(e);</span><br><span class="line">        e.<span class="property">createTime</span> = <span class="keyword">new</span> <span class="title class_">Date</span>(e.<span class="property">createTime</span>.<span class="property">$date</span>);</span><br><span class="line">        e.<span class="property">updateTime</span> = <span class="keyword">new</span> <span class="title class_">Date</span>(e.<span class="property">updateTime</span>.<span class="property">$date</span>);</span><br><span class="line">        <span class="keyword">return</span> e;</span><br><span class="line">      &#125;),</span><br><span class="line">      <span class="attr">pager</span>: &#123; <span class="attr">total</span>: res.<span class="property">pager</span>.<span class="property">Total</span> &#125;,</span><br><span class="line">    &#125;;</span><br><span class="line">    ctx.<span class="property">body</span> = <span class="title function_">succResp</span>(result);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="title function_">error</span>(error);</span><br><span class="line">    ctx.<span class="property">body</span> = <span class="title function_">failRespMsg</span>(<span class="variable constant_">CODE</span>.<span class="property">QUOTE_GETALL</span>, <span class="variable constant_">CODE</span>.<span class="property">QUOTE_GETALL_M</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="小程序功能预览以及二维码"><a href="#小程序功能预览以及二维码" class="headerlink" title="小程序功能预览以及二维码"></a>小程序功能预览以及二维码</h2><h3 id="功能预览"><a href="#功能预览" class="headerlink" title="功能预览"></a>功能预览</h3><p><img src="https://raw.githubusercontent.com/lhl02531/my_image_hosting/main/oneword-1.png" alt=""><br><img src="https://raw.githubusercontent.com/lhl02531/my_image_hosting/main/oneword-2.png" alt=""><br><img src="https://raw.githubusercontent.com/lhl02531/my_image_hosting/main/oneword-3.png" alt=""></p><h3 id="小程序二维码"><a href="#小程序二维码" class="headerlink" title="小程序二维码"></a>小程序二维码</h3><p><img src="https://raw.githubusercontent.com/lhl02531/my_image_hosting/main/gh_24f2d4c50122_344-12cm.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;小程序开发-几句话推荐&quot;&gt;&lt;a href=&quot;#小程序开发-几句话推荐&quot; class=&quot;headerlink&quot; title=&quot;小程序开发-几句话推荐&quot;&gt;&lt;/a&gt;小程序开发-几句话推荐&lt;/h1&gt;&lt;h2 id=&quot;项目设计&quot;&gt;&lt;a href=&quot;#项目设计&quot; class=&quot;headerlink&quot; title=&quot;项目设计&quot;&gt;&lt;/a&gt;项目设计&lt;/h2&gt;&lt;h3 id=&quot;项目来源&quot;&gt;&lt;a href=&quot;#项目来源&quot; class=&quot;headerlink&quot; title=&quot;项目来源&quot;&gt;&lt;/a&gt;项目来源&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV1t84y1q7Xn/?spm_id_from=333.999.0.0&amp;amp;vd_source=e8e1b6de93e68d8ce8ab44afe5802a40&quot;&gt;展哥更新了-字醒app&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://juejin.cn/post/7091582094614691854&quot;&gt;几行字&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;技术选型&quot;&gt;&lt;a href=&quot;#技术选型&quot; class=&quot;headerlink&quot; title=&quot;技术选型&quot;&gt;&lt;/a&gt;技术选型&lt;/h3&gt;&lt;p&gt;uniapp + 微信云开发, uniapp 只开发微信端， 微信云开发省去搭建后端项目的繁琐。&lt;/p&gt;
    
    </summary>
    
      <category term="微信小程序" scheme="http://lhl02531.github.io/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
      <category term="微信小程序" scheme="http://lhl02531.github.io/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="微信云开发" scheme="http://lhl02531.github.io/tags/%E5%BE%AE%E4%BF%A1%E4%BA%91%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>记录学习微信小程序遇到的问题和解决方案</title>
    <link href="http://lhl02531.github.io/2022/12/06/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    <id>http://lhl02531.github.io/2022/12/06/微信小程序学习记录/</id>
    <published>2022-12-06T07:45:22.000Z</published>
    <updated>2023-12-06T13:48:08.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="微信小程序入门"><a href="#微信小程序入门" class="headerlink" title="微信小程序入门"></a>微信小程序入门</h1><h2 id="认识项目结构"><a href="#认识项目结构" class="headerlink" title="认识项目结构"></a>认识项目结构</h2><ol><li><code>cloudfunctions</code> 云函数</li><li><code>miniprogram</code> 小程序</li><li><code>miniprogram_npm</code> 是项目所需要的依赖，<code>node_module</code> 是本地依赖。用<code>npm install</code> 安装完本地依赖，需要使用小程序ide 工具 –&gt; 构建npm 进行构建后才能供小程序使用。</li></ol><blockquote><p>微信官方文档，虽然文档我感觉并不适合入门， 但是还是比很多资料都要好点， 不建议全看完才进行开发。 弄懂一些概念即可。</p></blockquote><p>大致有四种文件， js  逻辑， json, 配置， wxml， 类比html 结构， wxss， 类比 css。<br>全局的是app, <code>app.js</code>, 定义全局的函数， <code>app.json</code> 定义全局的配置。<br>局部的是<code>page</code>, <code>component</code>。 ,  有个 <code>data</code> 字段，页面的初始数据，至于页面的生命周期函数，需要的时候再详细看文档即可。</p><span id="more"></span><h2 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h2><h3 id="官方简单例子"><a href="#官方简单例子" class="headerlink" title="官方简单例子"></a>官方简单例子</h3><p>组件用<code>properties</code>， 调用者需要在<code>json</code> 中定义才能使用。<br>如果是调用频率高的组件， 可以考虑在 <code>app.json</code>中定义。<br><code>component</code>  <a href="https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/">官方自定义组件</a><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 组件的 properties</span></span><br><span class="line"> <span class="attr">properties</span>: &#123;</span><br><span class="line">    <span class="attr">propA</span>: <span class="title class_">String</span>,</span><br><span class="line">    <span class="attr">propB</span>: <span class="title class_">String</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 页面的 data</span></span><br><span class="line"><span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">dataFieldA</span>: <span class="string">&#x27;123&#x27;</span>,</span><br><span class="line">    <span class="attr">dataFieldB</span>: <span class="string">&#x27;456&#x27;</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- page --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">my-component</span> <span class="attr">prop-a</span>=<span class="string">&quot;&#123;&#123;dataFieldA&#125;&#125;&quot;</span> <span class="attr">prop-b</span>=<span class="string">&quot;&#123;&#123;dataFieldB&#125;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">my-component</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- component --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;wrapper&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span>&gt;</span>这里是组件的内部节点<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">text</span>&gt;</span>propA: &#123;&#123;propA&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">text</span>&gt;</span>propB: &#123;&#123;propB&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><br>page的json<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;my-component&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/components/component-tag-name&quot;</span></span><br></pre></td></tr></table></figure></p><h3 id="外部样式类"><a href="#外部样式类" class="headerlink" title="外部样式类"></a>外部样式类</h3><blockquote><p>在使用一些组件库的时候可能会用到，需要了解</p></blockquote><h2 id="组件间通信与事件"><a href="#组件间通信与事件" class="headerlink" title="组件间通信与事件"></a>组件间通信与事件</h2><p><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/events.html">官方文档</a></p><h3 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h3><p>可能会出现的错误， </p><ol><li>组件定义函数时，需要定义 <code>method</code>字段中。</li></ol><h2 id="WXML"><a href="#WXML" class="headerlink" title="WXML"></a>WXML</h2><ol><li>数据绑定</li><li>条件, <code>wx:if</code></li><li>列表渲染, <code>wx:for</code>, <a href="https://developers.weixin.qq.com/miniprogram/dev/reference/wxml/list.html">列表渲染</a>，需要注意的是，当遍历的是一个数组的时候，<code>wx:key</code> 等于 <code>*this</code></li><li>模板， 相比于组件， 我觉得模板更轻量级， 更适合复用一些只是用来显示的结构, 这篇比官方详细很多。  <a href="https://juejin.cn/post/7016207188074954766#heading-6">掘金文章—模板</a></li><li><code>view</code>, <code>text</code>, <code>image</code>  <code>scroll-view</code> 标签</li><li>原生表单标签 <code>form</code> <code>input</code> <code></code></li></ol><p>wxss<br>略</p><h2 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h2><p><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/view/wxml/event.html">官方文档</a></p><h2 id="注意点-1"><a href="#注意点-1" class="headerlink" title="注意点"></a>注意点</h2><ol><li><code>bindtap</code> 和  <code>bind:tap</code> 两种写法 都可以</li><li><code>bind</code>  和 <code>catch</code> 的异同</li><li><code>target</code> 和 <code>currentTarget</code>,<code>detail</code></li></ol><h2 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h2><h3 id="wx-navigateTo"><a href="#wx-navigateTo" class="headerlink" title="wx.navigateTo"></a>wx.navigateTo</h3><p><a href="https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.navigateTo.html">官方文档</a><br><a href="https://developers.weixin.qq.com/miniprogram/dev/api/route/EventChannel.html">EventChannel</a><br><a href="https://developers.weixin.qq.com/community/develop/article/doc/00048430f146e080cb2e9548456013">EventChannel-社区文章</a></p><h4 id="注意点-2"><a href="#注意点-2" class="headerlink" title="注意点"></a>注意点</h4><ol><li><code>wx.navigateTo</code> 的 <code>url</code> 字段<code>url:&#39;/pages/category/category&#39;</code> </li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;微信小程序入门&quot;&gt;&lt;a href=&quot;#微信小程序入门&quot; class=&quot;headerlink&quot; title=&quot;微信小程序入门&quot;&gt;&lt;/a&gt;微信小程序入门&lt;/h1&gt;&lt;h2 id=&quot;认识项目结构&quot;&gt;&lt;a href=&quot;#认识项目结构&quot; class=&quot;headerlink&quot; title=&quot;认识项目结构&quot;&gt;&lt;/a&gt;认识项目结构&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;code&gt;cloudfunctions&lt;/code&gt; 云函数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;miniprogram&lt;/code&gt; 小程序&lt;/li&gt;
&lt;li&gt;&lt;code&gt;miniprogram_npm&lt;/code&gt; 是项目所需要的依赖，&lt;code&gt;node_module&lt;/code&gt; 是本地依赖。用&lt;code&gt;npm install&lt;/code&gt; 安装完本地依赖，需要使用小程序ide 工具 –&amp;gt; 构建npm 进行构建后才能供小程序使用。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;微信官方文档，虽然文档我感觉并不适合入门， 但是还是比很多资料都要好点， 不建议全看完才进行开发。 弄懂一些概念即可。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;大致有四种文件， js  逻辑， json, 配置， wxml， 类比html 结构， wxss， 类比 css。&lt;br&gt;全局的是app, &lt;code&gt;app.js&lt;/code&gt;, 定义全局的函数， &lt;code&gt;app.json&lt;/code&gt; 定义全局的配置。&lt;br&gt;局部的是&lt;code&gt;page&lt;/code&gt;, &lt;code&gt;component&lt;/code&gt;。 ,  有个 &lt;code&gt;data&lt;/code&gt; 字段，页面的初始数据，至于页面的生命周期函数，需要的时候再详细看文档即可。&lt;/p&gt;
    
    </summary>
    
      <category term="微信小程序" scheme="http://lhl02531.github.io/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
      <category term="微信小程序" scheme="http://lhl02531.github.io/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>记一次Ubuntu系统搭建过程</title>
    <link href="http://lhl02531.github.io/2019/01/27/%E8%AE%B0%E4%B8%80%E6%AC%A1Ubuntu%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B/"/>
    <id>http://lhl02531.github.io/2019/01/27/记一次Ubuntu系统搭建过程/</id>
    <published>2019-01-27T04:28:07.000Z</published>
    <updated>2022-10-26T14:35:40.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="记一次安装Ubuntu搭建过程"><a href="#记一次安装Ubuntu搭建过程" class="headerlink" title="记一次安装Ubuntu搭建过程"></a>记一次安装Ubuntu搭建过程</h1><h2 id="安装Ubuntu"><a href="#安装Ubuntu" class="headerlink" title="安装Ubuntu"></a>安装Ubuntu</h2><p><a href="https://www.bilibili.com/video/av22847796?from=search&amp;seid=3382793518763602250">B站av号av22847796</a>这个视频只是一个开始，有能力也有别的需求的朋友可以科学上网到youtube找安装双系统的视频，你可以找到很多相当不错的教程。</p><p><strong>Notes</strong>:</p><ol><li>在本机上实验需要保存好自己的数据和重要数据。及时做好备份。</li><li>如何选择种类繁多的Linux系统，例如Debian,Fedora,Ａrch linux。简单说说我对这几个系统的理解，Debian系对用户更友好，更容易上手，想想Ubuntu就知道了，Ubuntu就是Debian的一个分支。Fedora系对用户技术要求高，适合想要追求技术和服务器使用centos、RedHat的朋友。ArchLinux系不推荐，适合不怕事，有大量空闲时间和精力，想要折腾的朋友。系统版本选择，推荐较新的版本，因为最新版本可能会有一些解决不了的问题，社区，搜索引擎很难找到解决答案，而太老版本你可能需要做很多无用功了，而且有很多新特性你体会不到。举个例子，snap需要在Ubuntu 16.04版本及以上版本中使用。</li><li>分区选择，如果不会，可以全部安装在/根目录下，稍微进阶的是，设置swap交换分区，再进阶的是，根据需求定制自己的要求。</li><li>桌面环境应该要求稳定，适合自己就好，不要去过度追求酷炫。（写给自己）</li></ol><span id="more"></span><h2 id="系统安装完成后"><a href="#系统安装完成后" class="headerlink" title="系统安装完成后"></a>系统安装完成后</h2><div class="note - info"><p>鉴于自己遇到都可以通过搜索引擎和官方文档解决了，我会贴出具体出处和自己的自己的解决方式。</p></div><h3 id="给root设置密码"><a href="#给root设置密码" class="headerlink" title="给root设置密码"></a>给root设置密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd root</span><br></pre></td></tr></table></figure><h3 id="更新源"><a href="#更新源" class="headerlink" title="更新源"></a>更新源</h3><p><strong>华为云源</strong></p><p>华为云开源镜像站: <a href="https://mirrors.huaweicloud.com/">https://mirrors.huaweicloud.com/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">cp</span> -a /etc/apt/sources.list /etc/apt/sources.list.bak</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">&quot;s@http://archive.ubuntu.com@https://repo.huaweicloud.com@g&quot;</span> /etc/apt/sources.list</span><br><span class="line">sed -i <span class="string">&quot;s@http://security.ubuntu.com@https://repo.huaweicloud.com@g&quot;</span> /etc/apt/sources.list</span><br></pre></td></tr></table></figure><p><strong>阿里云源</strong></p><p>阿里云镜像:<a href="https://opsx.alibaba.com/mirror">https://opsx.alibaba.com/mirror</a></p><p>新手推荐使用<strong>图形界面配置</strong>： <strong>系统设置 -&gt; 软件和更新 选择下载服务器 -&gt; “mirrors.aliyun.com”</strong></p><h3 id="wifi-驱动"><a href="#wifi-驱动" class="headerlink" title="wifi 驱动"></a>wifi 驱动</h3><p>参考wifi驱动安装:<a href="https://www.cnblogs.com/spark-quant/p/9641279.html">https://www.cnblogs.com/spark-quant/p/9641279.html</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line">sudo apt-get install --reinstall bcmwl-kernel-source</span><br></pre></td></tr></table></figure><h3 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h3><h4 id="VScode"><a href="#VScode" class="headerlink" title="VScode"></a>VScode</h4><p>参考Visual Studio Code on Linux：<a href="https://code.visualstudio.com/docs/setup/linux">https://code.visualstudio.com/docs/setup/linux</a></p><ol><li>手动下载.deb package (64-bit),图形化安装或者命令行解压都行</li><li><strong>第二种，手动添加软件源，命令行安装(推荐)</strong></li></ol><p>把微软vscode源添加到本地</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor &gt; microsoft.gpg</span><br><span class="line">sudo install -o root -g root -m 644 microsoft.gpg /etc/apt/trusted.gpg.d/</span><br><span class="line">sudo sh -c <span class="string">&#x27;echo &quot;deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main&quot; &gt; /etc/apt/sources.list.d/vscode.list&#x27;</span></span><br></pre></td></tr></table></figure><p>安装vscode</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install apt-transport-https</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install code</span><br></pre></td></tr></table></figure><p>安装完后</p><p>命令行输入<strong>code即可启动</strong>vscode</p><h4 id="Atom"><a href="#Atom" class="headerlink" title="Atom"></a>Atom</h4><p>参考资料<br>about webupd8：<a href="http://www.webupd8.org/p/about.html">http://www.webupd8.org/p/about.html</a><br>什么是PPA <a href="http://wiki.ubuntu.com.cn/PPA">http://wiki.ubuntu.com.cn/PPA</a><br>安装Atom <a href="http://www.cnblogs.com/liutongqing/p/6388119.html">http://www.cnblogs.com/liutongqing/p/6388119.html</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:webupd8team/atom</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install atom</span><br></pre></td></tr></table></figure></p><h3 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h3><h4 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h4><p>TODO</p><h5 id="Pycharm-社区版"><a href="#Pycharm-社区版" class="headerlink" title="Pycharm 社区版"></a>Pycharm 社区版</h5><div class="note - warning"><p><a href="https://snapcraft.io/">snap</a>需要仅限 Ubuntu16.04及更高版本</p></div><p>参考JetBrain python <a href="https://www.jetbrains.com/pycharm/download/#section=linux">https://www.jetbrains.com/pycharm/download/#section=linux</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo snap install pycharm-community --classic</span><br></pre></td></tr></table></figure><h4 id="java"><a href="#java" class="headerlink" title="java"></a>java</h4><p>参考webupd8 安装JDK8 <a href="http://www.webupd8.org/2012/09/install-oracle-java-8-in-ubuntu-via-ppa.html">http://www.webupd8.org/2012/09/install-oracle-java-8-in-ubuntu-via-ppa.html</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:webupd8team/java</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install oracle-java8-installer</span><br></pre></td></tr></table></figure><p>查看是否安装<strong>成功</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><p><strong>Maven</strong>:<br>Maven 安装:<a href="http://maven.apache.org/install.html">http://maven.apache.org/install.html</a></p><p>下载软件包，firefox默认在下载目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> 下载</span><br><span class="line">tar xzvf apache-maven-3.6.0-bin.tar.gz</span><br><span class="line">sudo <span class="built_in">cp</span> -r apache-maven-3.6.0/ /opt/apache-maven-3.6.0/</span><br></pre></td></tr></table></figure><p><strong>设置环境变量</strong>:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export MAVEN_HOME=/opt/apache-maven-3.6.0</span><br><span class="line">export PATH=$MAVEN_HOME/bin:$PATH</span><br></pre></td></tr></table></figure><p><strong>Eclipse</strong>:<br>参考Eclipse安装 <a href="https://www.linuxidc.com/Linux/2016-07/133482.htm">https://www.linuxidc.com/Linux/2016-07/133482.htm</a>,<br>按照这个教程如果遇到“Ubuntu中应用程序启动器“XXX.desktop”还没有被标记为可信任的问题”，那么请参考Ubuntu中应用程序启动器“XXX.desktop”还没有被标记为可信任的问题:<a href="https://www.tuicool.com/articles/fIBJ32n">https://www.tuicool.com/articles/fIBJ32n</a>，我的猜测应该是缺少权限导致的。</p><h4 id="git"><a href="#git" class="headerlink" title="git"></a>git</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git</span><br><span class="line"></span><br><span class="line">git -v</span><br></pre></td></tr></table></figure><h4 id="nodejs"><a href="#nodejs" class="headerlink" title="nodejs"></a>nodejs</h4><p>直接安装nodejs会是较早版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y nodejs</span><br><span class="line">sudo apt-get install -y npm</span><br><span class="line"></span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>通过安装g后可以指定安装版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install n -g</span><br><span class="line">sudo n 10.15.0</span><br><span class="line"></span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><h3 id="黑科技"><a href="#黑科技" class="headerlink" title="黑科技"></a>黑科技</h3><h4 id="tldr"><a href="#tldr" class="headerlink" title="tldr"></a>tldr</h4><p>简单的说，tldr 是man的简洁版本，可以用来查看命令是如何使用。<br>具体可查看介绍tldr 介绍<a href="https://zhuanlan.zhihu.com/p/52637238">https://zhuanlan.zhihu.com/p/52637238</a>、github地址 tldr github<a href="https://github.com/tldr-pages/tldr">https://github.com/tldr-pages/tldr</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 需要安装nodejs</span></span><br><span class="line">sudo npm install -g tldr</span><br></pre></td></tr></table></figure><hr><p>2018/3/7 发现脚注太丑，直接将链接加在文章中间</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;记一次安装Ubuntu搭建过程&quot;&gt;&lt;a href=&quot;#记一次安装Ubuntu搭建过程&quot; class=&quot;headerlink&quot; title=&quot;记一次安装Ubuntu搭建过程&quot;&gt;&lt;/a&gt;记一次安装Ubuntu搭建过程&lt;/h1&gt;&lt;h2 id=&quot;安装Ubuntu&quot;&gt;&lt;a href=&quot;#安装Ubuntu&quot; class=&quot;headerlink&quot; title=&quot;安装Ubuntu&quot;&gt;&lt;/a&gt;安装Ubuntu&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.bilibili.com/video/av22847796?from=search&amp;amp;seid=3382793518763602250&quot;&gt;B站av号av22847796&lt;/a&gt;这个视频只是一个开始，有能力也有别的需求的朋友可以科学上网到youtube找安装双系统的视频，你可以找到很多相当不错的教程。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在本机上实验需要保存好自己的数据和重要数据。及时做好备份。&lt;/li&gt;
&lt;li&gt;如何选择种类繁多的Linux系统，例如Debian,Fedora,Ａrch linux。简单说说我对这几个系统的理解，Debian系对用户更友好，更容易上手，想想Ubuntu就知道了，Ubuntu就是Debian的一个分支。Fedora系对用户技术要求高，适合想要追求技术和服务器使用centos、RedHat的朋友。ArchLinux系不推荐，适合不怕事，有大量空闲时间和精力，想要折腾的朋友。系统版本选择，推荐较新的版本，因为最新版本可能会有一些解决不了的问题，社区，搜索引擎很难找到解决答案，而太老版本你可能需要做很多无用功了，而且有很多新特性你体会不到。举个例子，snap需要在Ubuntu 16.04版本及以上版本中使用。&lt;/li&gt;
&lt;li&gt;分区选择，如果不会，可以全部安装在/根目录下，稍微进阶的是，设置swap交换分区，再进阶的是，根据需求定制自己的要求。&lt;/li&gt;
&lt;li&gt;桌面环境应该要求稳定，适合自己就好，不要去过度追求酷炫。（写给自己）&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://lhl02531.github.io/categories/Linux/"/>
    
    
      <category term="Ubuntu" scheme="http://lhl02531.github.io/tags/Ubuntu/"/>
    
      <category term="学习" scheme="http://lhl02531.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客搭建</title>
    <link href="http://lhl02531.github.io/2019/01/12/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    <id>http://lhl02531.github.io/2019/01/12/hexo博客搭建/</id>
    <published>2019-01-11T19:16:12.000Z</published>
    <updated>2024-02-18T15:03:56.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="Hexo博客搭建记录"><a href="#Hexo博客搭建记录" class="headerlink" title="Hexo博客搭建记录"></a>Hexo博客搭建记录</h1><p>搭建一个个人博客一直是自己的想法，选择有很多，有Hexo，Hugo，jekkll，workpress，国内大的写作平台也有CSDN,博客园，简书。选择一个自己喜欢，坚持写下去吧。<br>接下来，就是这个博客的搭建过程。希望对你有所帮助。<br>（接下来是在windows平台实践的）</p><h2 id="Hexo是什么"><a href="#Hexo是什么" class="headerlink" title="Hexo是什么"></a>Hexo是什么</h2><p>来自官网的解释</p><blockquote><p>Hexo 是一个快速、简洁且高效的博客框架。<br>Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p></blockquote><span id="more"></span><h2 id="Hexo使用前的准备"><a href="#Hexo使用前的准备" class="headerlink" title="Hexo使用前的准备"></a>Hexo使用前的准备</h2><h3 id="node-js安装"><a href="#node-js安装" class="headerlink" title="node.js安装"></a>node.js安装</h3><p>如果你已经安装好了node.js，请直接往下看。</p><p>一般某些技术新入门，建议百度搜索相关技术，然后直接在官网下载并安装，但是有些同学英语不太熟（包括我），想偷懒，可以去查看相关的网站的中文站点，对新手更友好，更容易理解。</p><p>nodejs.cn是国人翻译nodejs官方文档的站点，提供国内下载的nodejs版本，nodejs官方文档的中文翻译。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看node.js的安装版本</span></span><br><span class="line">node -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看npm的版本</span></span><br><span class="line">npm-v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 出现版本号即为成功安装</span></span><br></pre></td></tr></table></figure><h4 id="nodejs安装后要做的事"><a href="#nodejs安装后要做的事" class="headerlink" title="nodejs安装后要做的事"></a>nodejs安装后要做的事</h4><h5 id="node-配置"><a href="#node-配置" class="headerlink" title="node 配置"></a>node 配置</h5><div class="note - default">            <p>PS：另外windows用户需要将node_global文件夹添加到系统环境变量上，不然会出现</p><p>‘hexo’ 不是内部或外部命令，也不是可运行的程序或批处理文件。</p><p>环境变量是此电脑-&gt;高级-&gt;环境变量-&gt;系统变量-&gt;找到一个叫Path的变量-&gt;记得在此前加上;（英语的，不是中文的）</p>          </div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">:<span class="string">&#x27;</span></span><br><span class="line"><span class="string">    设置node_global文件夹位置,全局安装的时候，模块会被安装到个位置</span></span><br><span class="line"><span class="string">    npm config set prefix &quot;文件夹名&quot;</span></span><br><span class="line"><span class="string">    设置node_cache文件夹位置,安装模块时的缓存</span></span><br><span class="line"><span class="string">    npm config set cache &quot;文件夹名&quot;</span></span><br><span class="line"><span class="string">    我在nodejs的安装目录下新建了node_global和node_cache</span></span><br><span class="line"><span class="string">    再次强调，windows用户需要将node_global文件夹路径添加到统环境变量上</span></span><br><span class="line"><span class="string">&#x27;</span></span><br><span class="line">npm config <span class="built_in">set</span> prefix <span class="string">&quot;F:\node_js\node_global&quot;</span></span><br><span class="line">npm config <span class="built_in">set</span> cache <span class="string">&quot;F:\node_js\node_cache&quot;</span></span><br></pre></td></tr></table></figure><h5 id="npm设置国内源"><a href="#npm设置国内源" class="headerlink" title="npm设置国内源"></a>npm设置国内源</h5><ul><li><a href="https://mirrors.huaweicloud.com/">华为开源镜像站</a>（官方说注册后有CDN加速）</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># npm加速</span></span><br><span class="line"><span class="comment"># npm config set registry https://repo.huaweicloud.com/repository/npm/</span></span><br><span class="line">npm cache clean -f</span><br><span class="line"><span class="comment"># 设置nodejs工具的镜像地址</span></span><br><span class="line"><span class="comment"># node.js工具类镜像地址，看自己需求</span></span><br><span class="line">npm config <span class="built_in">set</span> disturl https://repo.huaweicloud.com/nodejs</span><br></pre></td></tr></table></figure><ul><li><a href="https://npm.taobao.org/">淘宝镜像</a></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 淘宝使用自己的cnpm替代了npm</span></span><br><span class="line"><span class="comment"># 所以当你使用淘宝镜像后</span></span><br><span class="line"><span class="comment"># npm install 就变成了 cnpm install</span></span><br><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><div class="note - default">            <p>友情提示：Maven、Grandle、Pypi、RubyGems、以及linux软件源等都有墙的因素，如果你嫌弃速度慢，可以自行搜索一下相应的教程。</p>          </div><h3 id="Git安装"><a href="#Git安装" class="headerlink" title="Git安装"></a>Git安装</h3><p>winodws的下载<a href="https://mirrors.huaweicloud.com/">git for windows</a>安装即可<br>Linux用户可参考<a href="https://git-scm.com/download/linux">linux安装</a></p><p>关于Git的内容太多了，入门可以看<a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000">廖雪峰Git教程</a>,进阶可以看<a href="https://gitee.com/progit/">Pro git</a></p><h4 id="Git安装后要做的事"><a href="#Git安装后要做的事" class="headerlink" title="Git安装后要做的事"></a>Git安装后要做的事</h4><h5 id="配置用户名和邮箱"><a href="#配置用户名和邮箱" class="headerlink" title="配置用户名和邮箱"></a>配置用户名和邮箱</h5><p>windows的安装完后，完成后，鼠标右键会多出Git bash，Git Gui几个选项，打开Git Bash 如下图。<br><img src="https://i.loli.net/2018/11/22/5bf587d5ba3fc.png" alt="enter image description here"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这两行命令配置你的用户名和注册邮箱</span></span><br><span class="line"><span class="comment"># --global 代表的是全局变量，也就是设置默认用户名和邮箱</span></span><br><span class="line"><span class="comment"># 如果某个项目不需要使用全局变量了，你也可以不加</span></span><br><span class="line">git config --global user.name <span class="string">&quot;你的用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;你的邮箱&quot;</span></span><br><span class="line"><span class="comment"># 接下来的两行命令代表，查看你刚刚配置的用户名和邮箱</span></span><br><span class="line">git config user.email</span><br><span class="line">git config user.name</span><br></pre></td></tr></table></figure><div class="note - warn">            <p>linux 用户记得使用git命令的时候不要添加sudo<br>github的帮助文档也有相应说明，<a href="https://help.github.com/articles/error-permission-denied-publickey/#should-the-sudo-command-be-used-with-git">具体请看，Should the sudo command be used with Git?</a></p>          </div><h5 id="生成-SSH-key"><a href="#生成-SSH-key" class="headerlink" title="生成 SSH key"></a>生成 SSH key</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生产SSH key</span></span><br><span class="line"><span class="comment"># 中间会有密码设置提示，如果不要，直接回车即可</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;你的邮箱</span></span><br></pre></td></tr></table></figure><p>那么我们用户主目录下，应该就有id_rsa（私钥）和id_rsa.pub（公钥）文件。</p><p>私钥需要保护好，然后我们需要公钥进行下一步。</p><ol><li>进入Github，点击个人头像,选择Setting选项</li><li>在左侧面板选择，SSH and GPG keys ,点击new SSH key ,title随意，将公钥的文件内容复制进key即可</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 你可以验证一下，是否成功</span></span><br><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>如果没有错误，应该可以看到<img src="https://i.loli.net/2018/11/22/5bf58f403d73e.png" alt="github ssh连接成功"></p><p>接下来就是我们的主角Hexo了。</p><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">:<span class="string">&#x27;</span></span><br><span class="line"><span class="string">    如果node.js 安装成功，并且设置了国内npm镜像或者有VPN的话，网络通畅，应该是几分钟的事</span></span><br><span class="line"><span class="string">    解释一下，npm install 是npm 安装模块的命令</span></span><br><span class="line"><span class="string">    -g    指的是 全局安装</span></span><br><span class="line"><span class="string">    --save 指的是 当前项目</span></span><br><span class="line"><span class="string">    如果安装不成功，可以考虑使用管理员模式运行Gitbash或者cmd再安装一遍</span></span><br><span class="line"><span class="string">    我的猜测应该是权限不够导致安装失败</span></span><br><span class="line"><span class="string">&#x27;</span></span><br><span class="line">npm install -g hexo-cli</span><br><span class="line"><span class="comment"># 现在可以验证一下， 安装是否成功</span></span><br><span class="line"><span class="comment"># 如果提示找不到命令,windows下记得把node_global文件夹路径添加进环境变量</span></span><br><span class="line">hexo -v</span><br></pre></td></tr></table></figure><p>关于Hexo的知识，需要记住常用的命令,至于其他，不懂的时候查文档即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 博客主目录，初始化一个文件夹为博客主目录</span></span><br><span class="line"><span class="comment"># hexo init [folder]</span></span><br><span class="line">hexo init blog   <span class="comment"># 当前目录的blog文件夹</span></span><br><span class="line"><span class="comment"># 创建新博文</span></span><br><span class="line"><span class="comment"># hexo new [layout] &lt;title&gt;</span></span><br><span class="line"><span class="comment"># 一般写法</span></span><br><span class="line">hexo new _post <span class="string">&quot;我的第一篇博客&quot;</span></span><br><span class="line"><span class="comment"># 生成静态资源</span></span><br><span class="line">hexo generate</span><br><span class="line"><span class="comment"># 简单写法</span></span><br><span class="line">hexo g</span><br><span class="line"><span class="comment"># 启动hexo 本地服务器</span></span><br><span class="line">hexo server</span><br><span class="line"><span class="comment"># 简单写法</span></span><br><span class="line">hexo s</span><br><span class="line"><span class="comment"># 清除静态文件</span></span><br><span class="line">hexo clean</span><br></pre></td></tr></table></figure><h2 id="博客优化"><a href="#博客优化" class="headerlink" title="博客优化"></a>博客优化</h2><h3 id="主题选用"><a href="#主题选用" class="headerlink" title="主题选用"></a>主题选用</h3><p><strong>Next主题</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><div class="note - primary">            <p>Next的官方文档写的很详细，只是有一些内容可以过时例如设置留言这一块。</p>          </div><h3 id="做了哪些工作"><a href="#做了哪些工作" class="headerlink" title="做了哪些工作"></a>做了哪些工作</h3><h4 id="favicon的改进"><a href="#favicon的改进" class="headerlink" title="favicon的改进"></a>favicon的改进</h4><p><a href="https://realfavicongenerator.net/">favicon生成</a></p><ol><li><p><a href="https://i.loli.net/2019/01/12/5c38e8d77bce0.png"><img src="https://i.loli.net/2019/01/12/5c38e8d77bce0.png" alt="icon1.png"> </a></p></li><li><p><a href="https://i.loli.net/2019/01/12/5c38e8d73a9ec.png"><img src="https://i.loli.net/2019/01/12/5c38e8d73a9ec.png" alt="2.png"></a></p></li><li><p><img src="https://i.loli.net/2019/01/12/5c38e8d77d8d5.png" alt="dicon.png"></p></li><li><p>选项弄好后，下载压缩包，解压复制粘贴，建议放在 next/source/images/ 里（没有自己建），这样可以避免更新 NexT 主题的时候遇到麻烦，最后记得要稍微改下文件名，与下面的保持一致,原来是favicon-16x16-next.png，favicon-32x32-next.png</p></li></ol><p><a href="https://i.loli.net/2019/01/12/5c38df7bd59d4.png"><img src="https://i.loli.net/2019/01/12/5c38df7bd59d4.png" alt="_cat.png"></a></p><h4 id="About页面没有Title"><a href="#About页面没有Title" class="headerlink" title="About页面没有Title"></a>About页面没有Title</h4><p><a href="https://github.com/iissnan/hexo-theme-next/issues/1367">About页面没有title，求解答 issue#1367</a></p><h4 id="实现点击出现桃心效果"><a href="#实现点击出现桃心效果" class="headerlink" title="实现点击出现桃心效果"></a>实现点击出现桃心效果</h4><p>为了方便,你在这里可以下载<a href="">love.js</a>（具体操作点击raw,然后右键另存为即可）<br>将love.js文件放到路径/themes/next/source/js/src里面，然后打开\themes\next\layout_layout.swig文件，添加如下代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/js/src/love.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>[<img src="https://i.loli.net/2019/01/12/5c38df7c7df41.png" alt="1.png"></p><h4 id="修改文章底部标签"><a href="#修改文章底部标签" class="headerlink" title="修改文章底部标签"></a>修改文章底部标签</h4><p>修改模板/themes/next/layout/_macro/post.swig，搜索 rel=”tag”&gt;#，将 # 换成<i class="fa fa-tag"></i>,修改后如下图</p><p><a href="https://i.loli.net/2019/01/12/5c38df7bc77a8.png"><img src="https://i.loli.net/2019/01/12/5c38df7bc77a8.png" alt="_tag.png"></a></p><h4 id="addThis功能添加"><a href="#addThis功能添加" class="headerlink" title="addThis功能添加"></a>addThis功能添加</h4><p>注意的是addThis的控制台已经发生了变化</p><p><img src="https://i.loli.net/2018/12/02/5c03cae0b7f31.png" alt="addThis 界面"></p><p><a href="https://i.loli.net/2019/01/12/5c38df7c4fe4c.png"><img src="https://i.loli.net/2019/01/12/5c38df7c4fe4c.png" alt="_addThisID.png"></a></p><p>这是2018-12-2的界面，需要到Profile Settings - &gt; General-&gt;找到ID，复制到主题配置文件</p><h4 id="文章版权申明"><a href="#文章版权申明" class="headerlink" title="文章版权申明"></a>文章版权申明</h4><p>Todo</p><h4 id="摘要图片"><a href="#摘要图片" class="headerlink" title="摘要图片"></a>摘要图片</h4><p><a href="https://faithlove.github.io/2018/07/18/Hexo-Next%E5%A6%82%E4%BD%95%E5%9C%A8%E6%96%87%E7%AB%A0%E6%91%98%E8%A6%81%E5%B1%95%E7%A4%BA%E5%9B%BE%E7%89%87/">可以查看这篇文章</a></p><h2 id="windows下工具推荐"><a href="#windows下工具推荐" class="headerlink" title="windows下工具推荐"></a>windows下工具推荐</h2><h3 id="Typora（对新手友好）"><a href="#Typora（对新手友好）" class="headerlink" title="Typora（对新手友好）"></a>Typora（对新手友好）</h3><blockquote><p>一款实时渲染的Mrakdown写作软件，百度搜索Typora下载即可</p></blockquote><h4 id="windows右键新建Markdown文件"><a href="#windows右键新建Markdown文件" class="headerlink" title="windows右键新建Markdown文件"></a>windows右键新建Markdown文件</h4><p>参考：<a href="https://blog.csdn.net/yyt_1995/article/details/82286075">Windows右键新建MarkDown文件</a></p><h3 id="VScode（推荐开发者使用，需要更多时间和学习曲线）"><a href="#VScode（推荐开发者使用，需要更多时间和学习曲线）" class="headerlink" title="VScode（推荐开发者使用，需要更多时间和学习曲线）"></a>VScode（推荐开发者使用，需要更多时间和学习曲线）</h3><blockquote><p>一款由微软开源的文本编辑器，功能极其强大，可以通过安装插件来满足需求</p></blockquote><h4 id="支持Markdown插件有"><a href="#支持Markdown插件有" class="headerlink" title="支持Markdown插件有"></a>支持Markdown插件有</h4><ul><li><strong>markdownlint</strong>，一般以lint大多都是保证质量的插件，这个插件是用来规范Markdown写作的。</li><li><strong>markdown-preview-enhanced</strong>，实时预览的插件，还添加了一些常用功能比如插入图片并上传图床等等，文档：<a href="https://shd101wyy.github.io/markdown-preview-enhanced/#/zh-cn/">简体中文文档</a></li></ul><hr><p>这篇文章参考了以下的教程和博客。</p><ol><li><a href="https://hexo.io/zh-cn/docs/">Hexo中文文档</a></li><li><a href="http://theme-next.iissnan.com/">Next文档</a></li><li><a href="https://reuixiy.github.io/technology/computer/computer-aided-art/2017/06/09/hexo-next-optimization.html">打造个性超赞博客Hexo+NexT+GitHubPages的超深度优化</a></li><li><a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000">廖雪峰GIt帮助文档</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Hexo博客搭建记录&quot;&gt;&lt;a href=&quot;#Hexo博客搭建记录&quot; class=&quot;headerlink&quot; title=&quot;Hexo博客搭建记录&quot;&gt;&lt;/a&gt;Hexo博客搭建记录&lt;/h1&gt;&lt;p&gt;搭建一个个人博客一直是自己的想法，选择有很多，有Hexo，Hugo，jekkll，workpress，国内大的写作平台也有CSDN,博客园，简书。选择一个自己喜欢，坚持写下去吧。&lt;br&gt;接下来，就是这个博客的搭建过程。希望对你有所帮助。&lt;br&gt;（接下来是在windows平台实践的）&lt;/p&gt;
&lt;h2 id=&quot;Hexo是什么&quot;&gt;&lt;a href=&quot;#Hexo是什么&quot; class=&quot;headerlink&quot; title=&quot;Hexo是什么&quot;&gt;&lt;/a&gt;Hexo是什么&lt;/h2&gt;&lt;p&gt;来自官网的解释&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hexo 是一个快速、简洁且高效的博客框架。&lt;br&gt;Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="博客" scheme="http://lhl02531.github.io/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="博客" scheme="http://lhl02531.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="next" scheme="http://lhl02531.github.io/tags/next/"/>
    
      <category term="优化" scheme="http://lhl02531.github.io/tags/%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
</feed>
